{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"toc_visible":true,"authorship_tag":"ABX9TyOSzrVhvtMQvAh1lT9p51u8"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU","gpuClass":"standard"},"cells":[{"cell_type":"markdown","source":["## 1. 텍스트 분석을 바탕으로 한 서비스 또는 분석 프로젝트를 하나 제안해보세요. \n","(목적, 데이터 유형, 분석 방법, 기대효과 등) 여기서 제시한 서비스 또는 분석 프로젝트를 바탕으로 중간고사 문제를 풉니다\n","\n","- 프로젝트 : 텍스트 기반 영상 내용 검색\n","- 데이터 유형 : 영상, 음향, 텍스트\n","- 분석 방법\n","  1. 동영상의 음성 정보를 STT로 변환한다.\n","  2. 변환된 문장을 Sentence Bert 모델로 임베딩한다.\n","  3. 변환된 임베딩 벡터를 색인한다.\n","  4. 색인된 정보를 벡터 기반 검색하여 영상의 내용을 검색한다.\n","- 기대효과\n","  - 단순히 영상 제목이 아닌 사용자가 원하는 내용 기반 검색을 가능하도록한다.\n","  - 제목에서의 궁금증을 영상을 끝까지 보지 않아도 확인 가능하다\n","    - 예시 : \"코로나vs독감vs감기 의사들이 구별하는 방법은?\""],"metadata":{"id":"gbG2U5x8inl4"}},{"cell_type":"markdown","source":["## 2. PROJECT를 위한 데이터 수집 방안을 제시해보세요.\n","  - 내용 검색을 하고자 하는 동영상을 수집한다.\n","  - 수집된 영상의 음성 데이터를 텍스트로 변환하여 텍스트 데이터를 추출한다."],"metadata":{"id":"v55eTDtNkP_p"}},{"cell_type":"markdown","source":["## 3. 2번의 수집 방안과는 별개로, 중간고사 자체를 위한 데이터를 수집합니다. 여기서 수집한 데이터를 바탕으로 중간고사 문제를 풉니다\n","(이 데이터는 이하 DATA라고 칭합니다) 뉴스 웹스크래핑 또는 음성 인식을 통해 간단하게 1번에서 제시한 서비스/프로젝트를 위한 데이터를 수집해보세요. 데이터는 한국어로 수집하세요.\n"],"metadata":{"id":"6Orwa25okiAl"}},{"cell_type":"markdown","source":["url requests 확인"],"metadata":{"id":"D6vBxUJ6mOL8"}},{"cell_type":"code","source":["import requests\n","url = 'https://youtu.be/VSDqHWbybFw'\n","res = requests.get(url)\n","res"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iifY5cK6khgD","executionInfo":{"status":"ok","timestamp":1682518305133,"user_tz":-540,"elapsed":14,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"23e965f2-e6be-4564-c7f1-a4a966d13801"},"execution_count":1,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Response [200]>"]},"metadata":{},"execution_count":1}]},{"cell_type":"code","source":["!pip install cssselect\n","!pip3 install lxml"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hRuw2FjskJqL","executionInfo":{"status":"ok","timestamp":1682518316178,"user_tz":-540,"elapsed":11052,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"5e33b752-2f96-4f95-9b64-046a6dfdd8ba"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: cssselect in /usr/local/lib/python3.9/dist-packages (1.2.0)\n","Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: lxml in /usr/local/lib/python3.9/dist-packages (4.9.2)\n"]}]},{"cell_type":"markdown","source":["youtube 영상 다운로드"],"metadata":{"id":"_PupJwtNmQ5e"}},{"cell_type":"code","source":["!pip3 install pytube"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"C1RSiLDGn284","executionInfo":{"status":"ok","timestamp":1682518321985,"user_tz":-540,"elapsed":5810,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"9194abfa-72b0-4ee6-992e-835514d75a67"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: pytube in /usr/local/lib/python3.9/dist-packages (12.1.3)\n"]}]},{"cell_type":"code","source":["import pytube\n","\n","yt = pytube.YouTube('https://youtu.be/zydCxuOs-34?t=1')\n","yt.streams.get_highest_resolution().download(\"./\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"Whbh1d2Fn22x","executionInfo":{"status":"ok","timestamp":1682518323454,"user_tz":-540,"elapsed":1471,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"badddfba-e8b4-4130-9ad2-bd3abb15b92a"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'/content/./[PEOPLE in 세브란스] 감기 vs 코로나19증상 어떻게 다른가.mp4'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["STT"],"metadata":{"id":"snWIb3u7qheg"}},{"cell_type":"code","source":["!pip install -U openai-whisper kiwipiepy"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O5cT3K3iqhFB","executionInfo":{"status":"ok","timestamp":1682518328084,"user_tz":-540,"elapsed":4633,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"8b4992df-1f40-432b-f753-7b7dab11e9e5"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: openai-whisper in /usr/local/lib/python3.9/dist-packages (20230314)\n","Requirement already satisfied: kiwipiepy in /usr/local/lib/python3.9/dist-packages (0.15.0)\n","Requirement already satisfied: more-itertools in /usr/local/lib/python3.9/dist-packages (from openai-whisper) (9.1.0)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.9/dist-packages (from openai-whisper) (4.65.0)\n","Requirement already satisfied: torch in /usr/local/lib/python3.9/dist-packages (from openai-whisper) (2.0.0+cu118)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.9/dist-packages (from openai-whisper) (1.22.4)\n","Requirement already satisfied: numba in /usr/local/lib/python3.9/dist-packages (from openai-whisper) (0.56.4)\n","Requirement already satisfied: tiktoken==0.3.1 in /usr/local/lib/python3.9/dist-packages (from openai-whisper) (0.3.1)\n","Requirement already satisfied: triton==2.0.0 in /usr/local/lib/python3.9/dist-packages (from openai-whisper) (2.0.0)\n","Requirement already satisfied: ffmpeg-python==0.2.0 in /usr/local/lib/python3.9/dist-packages (from openai-whisper) (0.2.0)\n","Requirement already satisfied: future in /usr/local/lib/python3.9/dist-packages (from ffmpeg-python==0.2.0->openai-whisper) (0.18.3)\n","Requirement already satisfied: regex>=2022.1.18 in /usr/local/lib/python3.9/dist-packages (from tiktoken==0.3.1->openai-whisper) (2022.10.31)\n","Requirement already satisfied: requests>=2.26.0 in /usr/local/lib/python3.9/dist-packages (from tiktoken==0.3.1->openai-whisper) (2.27.1)\n","Requirement already satisfied: cmake in /usr/local/lib/python3.9/dist-packages (from triton==2.0.0->openai-whisper) (3.25.2)\n","Requirement already satisfied: lit in /usr/local/lib/python3.9/dist-packages (from triton==2.0.0->openai-whisper) (16.0.1)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.9/dist-packages (from triton==2.0.0->openai-whisper) (3.11.0)\n","Requirement already satisfied: kiwipiepy-model~=0.15 in /usr/local/lib/python3.9/dist-packages (from kiwipiepy) (0.15.0)\n","Requirement already satisfied: dataclasses in /usr/local/lib/python3.9/dist-packages (from kiwipiepy) (0.6)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.9/dist-packages (from numba->openai-whisper) (67.7.2)\n","Requirement already satisfied: llvmlite<0.40,>=0.39.0dev0 in /usr/local/lib/python3.9/dist-packages (from numba->openai-whisper) (0.39.1)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.9/dist-packages (from torch->openai-whisper) (3.1)\n","Requirement already satisfied: sympy in /usr/local/lib/python3.9/dist-packages (from torch->openai-whisper) (1.11.1)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.9/dist-packages (from torch->openai-whisper) (3.1.2)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.9/dist-packages (from torch->openai-whisper) (4.5.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.9/dist-packages (from requests>=2.26.0->tiktoken==0.3.1->openai-whisper) (2022.12.7)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.9/dist-packages (from requests>=2.26.0->tiktoken==0.3.1->openai-whisper) (1.26.15)\n","Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.9/dist-packages (from requests>=2.26.0->tiktoken==0.3.1->openai-whisper) (2.0.12)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.9/dist-packages (from requests>=2.26.0->tiktoken==0.3.1->openai-whisper) (3.4)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.9/dist-packages (from jinja2->torch->openai-whisper) (2.1.2)\n","Requirement already satisfied: mpmath>=0.19 in /usr/local/lib/python3.9/dist-packages (from sympy->torch->openai-whisper) (1.3.0)\n"]}]},{"cell_type":"code","source":["import unicodedata\n","\n","import tqdm\n","import whisper\n","from kiwipiepy import Kiwi\n","\n","model = whisper.load_model(\"medium\")\n","kiwi = Kiwi()"],"metadata":{"id":"u2jECs7HqqYx","executionInfo":{"status":"ok","timestamp":1682518369761,"user_tz":-540,"elapsed":41682,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["import glob\n","filelist = glob.glob('/content/./*.mp4')"],"metadata":{"id":"1ldUcZUDqxP1","executionInfo":{"status":"ok","timestamp":1682518369762,"user_tz":-540,"elapsed":29,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["filelist"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_7vrEWIeq73p","executionInfo":{"status":"ok","timestamp":1682518369762,"user_tz":-540,"elapsed":27,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"c59d88a5-b615-4b33-feef-af8b63eb3151"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['/content/./[날씨] 아침 쌀쌀 내륙 산지 서리·얼음‥낮부터 따뜻 (20230426뉴스데스크MBC).mp4',\n"," '/content/./[PEOPLE in 세브란스] 감기 vs 코로나19증상 어떻게 다른가.mp4']"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["for filename in filelist:\n","    print(\"filename :\", filename)\n","    result = model.transcribe(filename, language='ko') # 음성 인식\n","    print(\"result :\", filename)\n","    sents = kiwi.split_into_sents(result['text'])  # 문장 단위로 자르기\n","    print(\"sents :\", filename)\n","    text = '\\n\\n'.join(sent.text for sent in sents) # 하나로 합치기\n","    print(text)\n","    txt_name = \"/content/./savefile.txt\"\n","    txt_name = unicodedata.normalize('NFC', txt_name) # NFC로 노말라이즈\n","    with open(txt_name, \"w\") as f:\n","        f.write(\"contents\\n\")\n","        f.write(text)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SKWpaXkcrIMV","executionInfo":{"status":"ok","timestamp":1682518450540,"user_tz":-540,"elapsed":80799,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"7ff6fb2a-dfce-4375-9a1d-24bbb650dd36"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["filename : /content/./[날씨] 아침 쌀쌀 내륙 산지 서리·얼음‥낮부터 따뜻 (20230426뉴스데스크MBC).mp4\n","result : /content/./[날씨] 아침 쌀쌀 내륙 산지 서리·얼음‥낮부터 따뜻 (20230426뉴스데스크MBC).mp4\n","sents : /content/./[날씨] 아침 쌀쌀 내륙 산지 서리·얼음‥낮부터 따뜻 (20230426뉴스데스크MBC).mp4\n","날씨였습니다.\n","\n","햇살에 비춰도 바람결이 차갑습니다.\n","\n","오늘 해발구도 1500m 이상의 덕유산 정상부에는 하얀 눈꽃도 내려앉았습니다.\n","\n","아침 기온이 영하 3.3도까지 떨어져 상고대가 생겨나 이렇게 봄꽃들을 뒤덮은 모습인데요.\n","\n","밤사이도 찬 공기가 계속 머무르면서 내륙 산지의 기온은 0도 안팎까지 떨어지겠고요.\n","\n","또 출근길 서울의 기온도 7도까지 떨어졌을 사람이 감돌겠습니다.\n","\n","낮부터는 따뜻한 남서풍이 불어들 텐데요.\n","\n","다만 낮과 밤의 기온 차이가 20도 안팎으로 매우 심해지겠습니다.\n","\n","자세한 지역별 내일 날씨입니다.\n","\n","내일은 전국의 하늘이 종이 맑겠고 오후부터 강원 영동 지방은 바람이 강해지겠습니다.\n","\n","또 출근길에는 중부 내륙과 경북 북부 내륙을 중심으로 가시거리 200m 미만의 짙은 안개가 끼겠습니다.\n","\n","아침 최저 기온은 오늘보다 낮겠는데요.\n","\n","낮은 기온은 서울 27도, 춘천 4도, 안동 3도를 보이겠고요.\n","\n","낮 최고 기온은 오늘보다 2도에서 6도가량 높겠습니다.\n","\n","서울 20도, 강릉 24도, 대구와 광주는 23도를 보이겠습니다.\n","\n","이번 주말에는 전국에서 다시 비가 내리겠는데요.\n","\n","비는 금요일 저녁 제주를 시작으로 토요일에는 서울 등 전국으로 확대될 전망입니다.\n","\n","날씨였습니다.\n","filename : /content/./[PEOPLE in 세브란스] 감기 vs 코로나19증상 어떻게 다른가.mp4\n","result : /content/./[PEOPLE in 세브란스] 감기 vs 코로나19증상 어떻게 다른가.mp4\n","sents : /content/./[PEOPLE in 세브란스] 감기 vs 코로나19증상 어떻게 다른가.mp4\n","안녕하세요 세브런스병원 진단검사의 의학과학과 이영민입니다\n","\n","감기하고 코로나바이러스는 사실 구분하기가 쉽지 않은데요\n","\n","왜냐면 우리가 겨울철에 발생하는 감기라고 부르는 질환 자체가 코로나바이러스에 의한 것들이 대부분입니다 그러다 보니까 많은 증상들을 공유하고 있고 증상만으로 나누기는 쉽지 않은 것이 현실입니다\n","\n","저희가 코로나바이러스를 의심할 수 있는 증상으로 초기에 38도 이상의 고열 호흡곤란, 인후통 3가지를 들었습니다\n","\n","하지만 중국의 데이터에 따르면 전체 환자의 20% 정도만이 38도 이상의 고열을 보여주고 있고 60% 정도는 37.5도 미만의 열을 보여주기 때문에 단순히 발열만으로 코로나19 감염을 선별하기에는 어렵습니다\n","\n","그리고 인후통과 호흡곤란의 경우에서도 대략 20% 각각 20% 미만의 환자들만의 증상들을 보여주기 때문에 증상으로 감별하기에는 쉽지 않은 것이 현실입니다\n","\n","다만 최근 들어서 일부 국가에서 냄새를 맡지 못하는, 아노스미아라고 부르는 증상이 전체 코로나19 감염자의 절반 이상에서 나온다는 보고를 하고 있어 이런 것을 통해서 우리가 일부 감별이 가능은 하겠지만 충농증을 알린다던가 또는 일부 감기의 경우에 있어서도 심각한 경우 심한 감기의 경우 냄새를 맡지 못하는 증상이 있기 때문에 우리가 증상만으로 코로나19를 선별하는 것은 매우 어렵습니다 냄새를 맡지 못하는 환자가 통상적으로 대략 50% 정도에서 많게는 대략 70%까지 보고를 하고 있습니다\n","\n","보통은 젊은 환자들의 경우에도 좀 더 냄새를 맡지 못하는 증상이 많다고 알려져 있는데요 국가별로 증상의 발현율이 다르기 때문에 다른 나라의 국가를 우리나라에 바로 적용하기는 어렵고 우리나라도 별도의 데이터를 조사해야 정확한 비율을 알 수 있을 것으로 생각됩니다\n","\n","코로나19에 감염될 가능성은 남녀노소를 가리지 않고 다 동일합니다\n","\n","특히 무증상 감염이 전체 환자의 50% 정도를 차지하기 때문에 우리도 알지 못하는 사회에 코로나19에 감염될 수가 있습니다\n","\n","하지만 이 코로나19에 감염된 이후에 양상은 여러 가지 것들에 따라 달라지게 되는데요\n","\n","그중에서 연령이 많으신 분들, 기저질환을 갖고 계신 분들은 당연히 조심을 하셔야 됩니다\n","\n","기저질환 중에서는 당뇨가 가장 위험한 것으로 알려져 있고 그 외에 고혈압이나 다른 만성질환을 갖고 계신 분들도 당연히 중증으로 갈 수가 있습니다\n","\n","당뇨가 위험한 이유는 코로나19의 기전에 대해서는 아직까지 명확하게 다 알려져 있지는 않지만 혈관들, 특히 혈관 내벽에 있는 세포들을 일부 공격하는 특성을 갖고 있는 것으로 알려져 있기 때문에 당뇨에서 일어나는 만성적인 혈관의 어떤 장애와 같이 복합적으로 작용을 하면서 좀 더 중증의 반응을 일으킬 수 있는 것으로 생각이 되고 있습니다\n","\n","그리고 이런 코로나19와 당뇨와의 관계는 최근 외국에서 코로나19를 알코난 건강한 사람이 이후에 합병층 형태로 당뇨를 진행했다는 그런 보고들도 있어서 좀 더 연구가 진행되어야 되겠지만 분명히 코로나19와 당뇨는 어느 정도의 상호관의 연관성이 있는 것은 명확해 보입니다\n","\n","그래서 이런 것들을 고려했을 때 조금 전에 말씀드렸던 위험조선을 갖고 있는 그러한 고령이나 기저질환자도 당연히 조심해야 되겠지만 젊은 사람들의 경우에서도 향후에 어떤 증상이 나타날지 모르기 때문에 이런 코로나19에 대한 모든 데이터를 우리가 확인하기, 즉 입증하기 전까지는 당분간은 감염되지 않도록 조심하시는 게 필요하다고 생각이 됩니다\n"]}]},{"cell_type":"markdown","source":["# 4. DATA를 바탕으로 문서단어행렬을 그리고, 단어구름으로 시각화해보세요. \n","분석 결과를 설명해보세요."],"metadata":{"id":"xHpGysxSrZuY"}},{"cell_type":"code","source":["def extract_nouns(text):\n","    for token in kiwi.tokenize(text):\n","        if token.tag in {'NNG', 'NNP'}:\n","            yield token.form"],"metadata":{"id":"Fp9v_0iSroQ_","executionInfo":{"status":"ok","timestamp":1682518450541,"user_tz":-540,"elapsed":5,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","df = pd.read_csv('/content/savefile.txt', delimiter = \"\\t\")\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"FqfIMBUyryfM","executionInfo":{"status":"ok","timestamp":1682518451661,"user_tz":-540,"elapsed":1124,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"e81ee43a-e9c5-43f6-f85c-2bae3835dc03"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                            contents\n","0                    안녕하세요 세브런스병원 진단검사의 의학과학과 이영민입니다\n","1                     감기하고 코로나바이러스는 사실 구분하기가 쉽지 않은데요\n","2  왜냐면 우리가 겨울철에 발생하는 감기라고 부르는 질환 자체가 코로나바이러스에 의한 ...\n","3  저희가 코로나바이러스를 의심할 수 있는 증상으로 초기에 38도 이상의 고열 호흡곤란...\n","4  하지만 중국의 데이터에 따르면 전체 환자의 20% 정도만이 38도 이상의 고열을 보..."],"text/html":["\n","  <div id=\"df-9a1f4efc-a985-49ea-8702-e45d7b29a44d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>contents</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>안녕하세요 세브런스병원 진단검사의 의학과학과 이영민입니다</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>감기하고 코로나바이러스는 사실 구분하기가 쉽지 않은데요</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>왜냐면 우리가 겨울철에 발생하는 감기라고 부르는 질환 자체가 코로나바이러스에 의한 ...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>저희가 코로나바이러스를 의심할 수 있는 증상으로 초기에 38도 이상의 고열 호흡곤란...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>하지만 중국의 데이터에 따르면 전체 환자의 20% 정도만이 38도 이상의 고열을 보...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9a1f4efc-a985-49ea-8702-e45d7b29a44d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9a1f4efc-a985-49ea-8702-e45d7b29a44d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9a1f4efc-a985-49ea-8702-e45d7b29a44d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","source":["문서단어행렬"],"metadata":{"id":"3BlbA-egxCi6"}},{"cell_type":"code","source":["from sklearn.feature_extraction.text import CountVectorizer\n","cv = CountVectorizer(tokenizer=extract_nouns)\n","dtm = cv.fit_transform(df.contents)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iTUjwgnor5pu","executionInfo":{"status":"ok","timestamp":1682518451662,"user_tz":-540,"elapsed":29,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"3f50ee77-0443-4108-e0ce-0d44695b6215"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.9/dist-packages/sklearn/feature_extraction/text.py:528: UserWarning: The parameter 'token_pattern' will not be used since 'tokenizer' is not None'\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["dtm.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0beIzmCZwtZ9","executionInfo":{"status":"ok","timestamp":1682518451662,"user_tz":-540,"elapsed":23,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"5d59e965-1c51-43b3-b450-b31dd19aaec5"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(16, 110)"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["cv.get_feature_names_out()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0IPY7y4ZwwSz","executionInfo":{"status":"ok","timestamp":1682518451662,"user_tz":-540,"elapsed":18,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"e8c0f056-aba3-4052-ee05-733c17c54b53"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['가능', '감기', '감별', '감염', '감염자', '건강', '검사', '겨울철', '경우', '고려', '고령',\n","       '곤란', '공격', '공유', '과', '과학', '관', '관계', '구분', '국가', '기저', '기전',\n","       '나라', '난', '남녀노소', '내벽', '냄새', '농증', '당뇨', '대부분', '데이터', '동일', '때',\n","       '만성', '말씀', '미만', '반응', '발생', '발열', '발현', '별도', '병원', '보고', '보통',\n","       '복합', '비율', '사람', '사회', '상호', '생각', '선별', '세브런스', '세포', '아노스미아',\n","       '안녕하세요', '알코', '양상', '연관', '연구', '연령', '열', '외국', '우리나라', '위험',\n","       '의심', '의학', '이상', '이영민', '이유', '이후', '인후', '일부', '입증', '자체', '작용',\n","       '장애', '적용', '전', '전체', '절반', '정도', '조사', '조선', '조심', '중국', '중증',\n","       '증상', '진단', '진행', '질환', '질환자', '차지', '초기', '최근', '충', '코로나',\n","       '코로나바이러스', '통', '통상', '특성', '필요', '합병', '향후', '현실', '혈관', '혈압',\n","       '형태', '호흡', '확인', '환자'], dtype=object)"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["dtm.sum(axis=0)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NOQmVOgDwzqb","executionInfo":{"status":"ok","timestamp":1682518451663,"user_tz":-540,"elapsed":15,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"5278055a-6bb6-4d77-93ea-ffaee1b4548b"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["matrix([[ 2,  4,  2,  6,  1,  1,  1,  1,  6,  1,  1,  2,  1,  1,  1,  1,\n","          1,  1,  1,  3,  3,  1,  1,  1,  1,  1,  4,  1,  6,  1,  3,  1,\n","          1,  2,  1,  2,  1,  1,  1,  1,  1,  1,  3,  1,  1,  1,  2,  1,\n","          1,  3,  2,  1,  1,  1,  1,  1,  1,  1,  1,  1,  3,  1,  2,  3,\n","          1,  1,  3,  1,  1,  2,  2,  4,  1,  1,  1,  1,  1,  2,  3,  1,\n","          5,  1,  1,  3,  1,  2, 12,  1,  2,  4,  1,  1,  1,  1,  1, 11,\n","          3,  2,  1,  1,  1,  1,  1,  2,  3,  1,  1,  2,  1,  5]])"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["word_count = pd.DataFrame({\n","    '단어': cv.get_feature_names_out(),\n","    '빈도': dtm.sum(axis=0).flat\n","})"],"metadata":{"id":"8EMFcgKOw2ze","executionInfo":{"status":"ok","timestamp":1682518451663,"user_tz":-540,"elapsed":10,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["word_count.sort_values('빈도', ascending=False).head(20)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":677},"id":"RiNi4kEsw5om","executionInfo":{"status":"ok","timestamp":1682518451663,"user_tz":-540,"elapsed":9,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"3e23125b-348b-47ad-8bd6-3356be57771f"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      단어  빈도\n","86    증상  12\n","95   코로나  11\n","28    당뇨   6\n","3     감염   6\n","8     경우   6\n","80    정도   5\n","109   환자   5\n","1     감기   4\n","71    일부   4\n","89    질환   4\n","26    냄새   4\n","60     열   3\n","30   데이터   3\n","63    위험   3\n","66    이상   3\n","49    생각   3\n","20    기저   3\n","19    국가   3\n","42    보고   3\n","78    전체   3"],"text/html":["\n","  <div id=\"df-95925eec-52ef-4128-93ce-797b565a72c6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>단어</th>\n","      <th>빈도</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>86</th>\n","      <td>증상</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>95</th>\n","      <td>코로나</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>당뇨</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>감염</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>경우</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>80</th>\n","      <td>정도</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>109</th>\n","      <td>환자</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>감기</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>71</th>\n","      <td>일부</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>89</th>\n","      <td>질환</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>냄새</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>60</th>\n","      <td>열</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>데이터</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>63</th>\n","      <td>위험</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>66</th>\n","      <td>이상</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>생각</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>기저</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>국가</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>보고</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>78</th>\n","      <td>전체</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-95925eec-52ef-4128-93ce-797b565a72c6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-95925eec-52ef-4128-93ce-797b565a72c6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-95925eec-52ef-4128-93ce-797b565a72c6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":17}]},{"cell_type":"markdown","source":["단어구름"],"metadata":{"id":"azVyiQB1xE-I"}},{"cell_type":"code","source":["!apt install -y fonts-nanum\n","!sudo fc-cache -fv\n","!rm ~/.cache/matplotlib -rf\n","\n","from matplotlib import font_manager\n","for font in font_manager.fontManager.ttflist:\n","    if 'Nanum' in font.name:\n","        print(font.name, font.fname)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3zO4B-puyY7W","executionInfo":{"status":"ok","timestamp":1682518456473,"user_tz":-540,"elapsed":4818,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"c7879137-6387-4796-e18f-44355d786d84"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Reading package lists... Done\n","Building dependency tree       \n","Reading state information... Done\n","fonts-nanum is already the newest version (20180306-3).\n","0 upgraded, 0 newly installed, 0 to remove and 24 not upgraded.\n","/usr/share/fonts: caching, new cache contents: 0 fonts, 1 dirs\n","/usr/share/fonts/truetype: caching, new cache contents: 0 fonts, 3 dirs\n","/usr/share/fonts/truetype/humor-sans: caching, new cache contents: 1 fonts, 0 dirs\n","/usr/share/fonts/truetype/liberation: caching, new cache contents: 16 fonts, 0 dirs\n","/usr/share/fonts/truetype/nanum: caching, new cache contents: 10 fonts, 0 dirs\n","/usr/local/share/fonts: caching, new cache contents: 0 fonts, 0 dirs\n","/root/.local/share/fonts: skipping, no such directory\n","/root/.fonts: skipping, no such directory\n","/usr/share/fonts/truetype: skipping, looped directory detected\n","/usr/share/fonts/truetype/humor-sans: skipping, looped directory detected\n","/usr/share/fonts/truetype/liberation: skipping, looped directory detected\n","/usr/share/fonts/truetype/nanum: skipping, looped directory detected\n","/var/cache/fontconfig: cleaning cache directory\n","/root/.cache/fontconfig: not cleaning non-existent cache directory\n","/root/.fontconfig: not cleaning non-existent cache directory\n","fc-cache: succeeded\n","NanumGothic /usr/share/fonts/truetype/nanum/NanumGothic.ttf\n","NanumSquareRound /usr/share/fonts/truetype/nanum/NanumSquareRoundB.ttf\n","NanumBarunGothic /usr/share/fonts/truetype/nanum/NanumBarunGothic.ttf\n","NanumSquare /usr/share/fonts/truetype/nanum/NanumSquareR.ttf\n","NanumBarunGothic /usr/share/fonts/truetype/nanum/NanumBarunGothicBold.ttf\n","NanumSquare /usr/share/fonts/truetype/nanum/NanumSquareB.ttf\n","NanumSquareRound /usr/share/fonts/truetype/nanum/NanumSquareRoundR.ttf\n","NanumMyeongjo /usr/share/fonts/truetype/nanum/NanumMyeongjoBold.ttf\n","NanumMyeongjo /usr/share/fonts/truetype/nanum/NanumMyeongjo.ttf\n","NanumGothic /usr/share/fonts/truetype/nanum/NanumGothicBold.ttf\n"]}]},{"cell_type":"code","source":["from wordcloud import WordCloud\n","\n","wc = WordCloud(\n","  font_path='NanumGothic.ttf', # 글꼴 파일이 있을 경우\n","  background_color='white',    # 배경색\n","  max_words=100,               # 시각화할 단어 개수\n","  width=400,                   # 가로 크기\n","  height=300)                  # 세로 크기\n","\n","count_dic = dict(zip(word_count.단어, word_count.빈도))\n","cloud = wc.fit_words(count_dic)\n","cloud.to_image()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":317},"id":"8k1VTOM2yBlV","executionInfo":{"status":"ok","timestamp":1682518457361,"user_tz":-540,"elapsed":891,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"6776cd55-e6df-4eed-8743-26de2ef56470"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<PIL.Image.Image image mode=RGB size=400x300 at 0x7F4A9FB930A0>"],"image/png":"\n"},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","source":["#5. 4번의 분석 결과를 PROJECT에 어떻게 할용할 수 있는지 설명하세요.\n","- 영상의 제목은 \"감기vs코로나19의 다른점\"이다.\n","- 현재 분석 결과로 감기 또는 코로나19는 \"당뇨, 냄새, 혈관\" 키워드와 연관이 있다. "],"metadata":{"id":"OBairqOcxFzW"}},{"cell_type":"markdown","source":["#6. DATA를 바탕으로 토픽 모델링을 실시하세요. LSA, NMF, LDA, SBERT를 이용한 키워드 추출을 해보고, 가장 적절한 방법을 고르세요.\n"],"metadata":{"id":"FayvqVFgzm4n"}},{"cell_type":"code","source":["from sklearn.decomposition import TruncatedSVD\n","svd = TruncatedSVD(n_components=100, random_state=1234)\n","doc_emb = svd.fit_transform(dtm)"],"metadata":{"id":"QR8v8xAS0EN1","executionInfo":{"status":"ok","timestamp":1682518457362,"user_tz":-540,"elapsed":11,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","plt.plot(svd.explained_variance_)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":451},"id":"r5Idesm40I0r","executionInfo":{"status":"ok","timestamp":1682518458523,"user_tz":-540,"elapsed":1171,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"b127a2e8-2bf5-4ca6-cc02-34acd89df1c5"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7f48dc4afe50>]"]},"metadata":{},"execution_count":21},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["##LSA"],"metadata":{"id":"hyMEIBI_2bNh"}},{"cell_type":"code","source":["word_emb = svd.components_.T\n","\n","words = cv.get_feature_names_out().tolist()\n","i = words.index('증상')\n","\n","plt.plot(word_emb[i])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":448},"id":"T8H0cJr_0Mcd","executionInfo":{"status":"ok","timestamp":1682518458524,"user_tz":-540,"elapsed":17,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"438445bf-1368-45e2-d553-766f440f5703"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7f48dc46faf0>]"]},"metadata":{},"execution_count":22},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.metrics.pairwise import cosine_similarity\n","sim = cosine_similarity(word_emb)\n","\n","\n","import numpy as np\n","s = np.argsort(sim[i])\n","related = s[-2:-12:-1]\n","for j in related:\n","    print(words[j])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8ahc7oIW0Q73","executionInfo":{"status":"ok","timestamp":1682518458524,"user_tz":-540,"elapsed":12,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"72c1ddec-9862-4153-c739-4568b252a1af"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["현실\n","발생\n","자체\n","대부분\n","공유\n","겨울철\n","경우\n","환자\n","호흡\n","인후\n"]}]},{"cell_type":"code","source":["indices = []\n","target = ['코로나', '감기', '증상', '당뇨', '냄새', '혈관']\n","for w in target:\n","    i = words.index(w)\n","    indices.append(i)\n","    print(w, i)\n","\n","dist = 1 - sim[indices, ][:, indices]\n","\n","from sklearn.manifold import MDS\n","mds = MDS(dissimilarity='precomputed', random_state=1234)\n","pos = mds.fit_transform(dist)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d4WInoQh0i8U","executionInfo":{"status":"ok","timestamp":1682518458525,"user_tz":-540,"elapsed":10,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"daa9445c-312d-4add-8e1a-819dcadc941a"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["코로나 95\n","감기 1\n","증상 86\n","당뇨 28\n","혈관 104\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.9/dist-packages/sklearn/manifold/_mds.py:299: FutureWarning: The default value of `normalized_stress` will change to `'auto'` in version 1.4. To suppress this warning, manually set the value of `normalized_stress`.\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["!pip install adjusttext"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_9mnhMoI01aP","executionInfo":{"status":"ok","timestamp":1682518462903,"user_tz":-540,"elapsed":4384,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"4ed9955e-9672-4925-c8b0-2e00226ab814"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: adjusttext in /usr/local/lib/python3.9/dist-packages (0.8)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.9/dist-packages (from adjusttext) (3.7.1)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.9/dist-packages (from adjusttext) (1.22.4)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.9/dist-packages (from matplotlib->adjusttext) (3.0.9)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.9/dist-packages (from matplotlib->adjusttext) (0.11.0)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.9/dist-packages (from matplotlib->adjusttext) (2.8.2)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.9/dist-packages (from matplotlib->adjusttext) (4.39.3)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.9/dist-packages (from matplotlib->adjusttext) (1.0.7)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.9/dist-packages (from matplotlib->adjusttext) (1.4.4)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.9/dist-packages (from matplotlib->adjusttext) (23.1)\n","Requirement already satisfied: importlib-resources>=3.2.0 in /usr/local/lib/python3.9/dist-packages (from matplotlib->adjusttext) (5.12.0)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.9/dist-packages (from matplotlib->adjusttext) (8.4.0)\n","Requirement already satisfied: zipp>=3.1.0 in /usr/local/lib/python3.9/dist-packages (from importlib-resources>=3.2.0->matplotlib->adjusttext) (3.15.0)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.9/dist-packages (from python-dateutil>=2.7->matplotlib->adjusttext) (1.16.0)\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","plt.rc('font', family='NanumGothic')\n","plt.rc('axes', unicode_minus=False)"],"metadata":{"id":"MZ-FarNd1JvI","executionInfo":{"status":"ok","timestamp":1682518462903,"user_tz":-540,"elapsed":15,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":26,"outputs":[]},{"cell_type":"code","source":["from adjustText import adjust_text\n","plt.plot(pos[:, 0], pos[:, 1], '.')\n","texts = [plt.text(pos[i, 0], pos[i, 1], w) for i, w in enumerate(target)]\n","adjust_text(texts)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"id":"hds_b-kN0ww3","executionInfo":{"status":"ok","timestamp":1682518462904,"user_tz":-540,"elapsed":15,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"edddd8ea-c2f2-4762-eae1-16e345d2be9c"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["6"]},"metadata":{},"execution_count":27},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["!pip install factor_analyzer"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"x6GXC61b1jzn","executionInfo":{"status":"ok","timestamp":1682518467485,"user_tz":-540,"elapsed":4590,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"39c536e1-768e-43fb-e810-38ed9407c72f"},"execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: factor_analyzer in /usr/local/lib/python3.9/dist-packages (0.4.1)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.9/dist-packages (from factor_analyzer) (1.22.4)\n","Requirement already satisfied: scikit-learn in /usr/local/lib/python3.9/dist-packages (from factor_analyzer) (1.2.2)\n","Requirement already satisfied: pre-commit in /usr/local/lib/python3.9/dist-packages (from factor_analyzer) (3.2.2)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.9/dist-packages (from factor_analyzer) (1.10.1)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.9/dist-packages (from factor_analyzer) (1.5.3)\n","Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.9/dist-packages (from pandas->factor_analyzer) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.9/dist-packages (from pandas->factor_analyzer) (2022.7.1)\n","Requirement already satisfied: virtualenv>=20.10.0 in /usr/local/lib/python3.9/dist-packages (from pre-commit->factor_analyzer) (20.22.0)\n","Requirement already satisfied: cfgv>=2.0.0 in /usr/local/lib/python3.9/dist-packages (from pre-commit->factor_analyzer) (3.3.1)\n","Requirement already satisfied: identify>=1.0.0 in /usr/local/lib/python3.9/dist-packages (from pre-commit->factor_analyzer) (2.5.23)\n","Requirement already satisfied: nodeenv>=0.11.1 in /usr/local/lib/python3.9/dist-packages (from pre-commit->factor_analyzer) (1.7.0)\n","Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.9/dist-packages (from pre-commit->factor_analyzer) (6.0)\n","Requirement already satisfied: joblib>=1.1.1 in /usr/local/lib/python3.9/dist-packages (from scikit-learn->factor_analyzer) (1.2.0)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.9/dist-packages (from scikit-learn->factor_analyzer) (3.1.0)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.9/dist-packages (from nodeenv>=0.11.1->pre-commit->factor_analyzer) (67.7.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.9/dist-packages (from python-dateutil>=2.8.1->pandas->factor_analyzer) (1.16.0)\n","Requirement already satisfied: filelock<4,>=3.11 in /usr/local/lib/python3.9/dist-packages (from virtualenv>=20.10.0->pre-commit->factor_analyzer) (3.11.0)\n","Requirement already satisfied: distlib<1,>=0.3.6 in /usr/local/lib/python3.9/dist-packages (from virtualenv>=20.10.0->pre-commit->factor_analyzer) (0.3.6)\n","Requirement already satisfied: platformdirs<4,>=3.2 in /usr/local/lib/python3.9/dist-packages (from virtualenv>=20.10.0->pre-commit->factor_analyzer) (3.2.0)\n"]}]},{"cell_type":"code","source":["from factor_analyzer.rotator import Rotator\n","rotator = Rotator()\n","rot = rotator.fit_transform(word_emb)\n","\n","plt.plot(rot[i])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":447},"id":"H6zCZ3ZU1met","executionInfo":{"status":"ok","timestamp":1682518468813,"user_tz":-540,"elapsed":1338,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"e44cce2e-9c52-45f7-8fcb-a1be8d1e5893"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7f48d4f1a3d0>]"]},"metadata":{},"execution_count":29},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["t = np.argmax(rot[i])\n","\n","topic_words_idx = np.argsort(rot[:, t])\n","\n","for j in topic_words_idx[-1:-11:-1]:\n","    print(words[j])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZvHR6eig1r2e","executionInfo":{"status":"ok","timestamp":1682518468813,"user_tz":-540,"elapsed":30,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"1ae3bb8f-6fd3-4721-88b0-32c900f2156d"},"execution_count":30,"outputs":[{"output_type":"stream","name":"stdout","text":["혈관\n","당뇨\n","장애\n","특성\n","반응\n","세포\n","내벽\n","기전\n","작용\n","복합\n"]}]},{"cell_type":"markdown","source":["##NMF"],"metadata":{"id":"VdkVS40-1yNE"}},{"cell_type":"code","source":["from sklearn.decomposition import NMF\n","NUM_TOPICS = 8\n","nmf = NMF(n_components=NUM_TOPICS)\n","doc_emb = nmf.fit_transform(dtm)"],"metadata":{"id":"8V6B_kzI2AbQ","executionInfo":{"status":"ok","timestamp":1682518468814,"user_tz":-540,"elapsed":29,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["word_emb = nmf.components_.T\n","\n","words = cv.get_feature_names_out().tolist()\n","i = words.index('증상')\n","\n","plt.plot(word_emb[i])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":447},"id":"G2laA5ZL2Orx","executionInfo":{"status":"ok","timestamp":1682518468815,"user_tz":-540,"elapsed":29,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"c04263af-5e04-484a-d110-3ea74774cd74"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7f48d4e9f6a0>]"]},"metadata":{},"execution_count":32},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.metrics.pairwise import cosine_similarity\n","sim = cosine_similarity(word_emb)\n","\n","\n","import numpy as np\n","s = np.argsort(sim[i])\n","related = s[-2:-12:-1]\n","for j in related:\n","    print(words[j])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TsbBRpP32U8z","executionInfo":{"status":"ok","timestamp":1682518468815,"user_tz":-540,"elapsed":25,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"ca80f0e2-8e5b-4b4a-d78f-17bed944d666"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["경우\n","감별\n","환자\n","냄새\n","구분\n","국가\n","감기\n","현실\n","의심\n","초기\n"]}]},{"cell_type":"code","source":["indices = []\n","target = ['코로나', '감기', '증상', '당뇨', '냄새', '혈관']\n","for w in target:\n","    i = words.index(w)\n","    indices.append(i)\n","    print(w, i)\n","\n","dist = 1 - sim[indices, ][:, indices]\n","\n","from sklearn.manifold import MDS\n","mds = MDS(dissimilarity='precomputed', random_state=1234)\n","pos = mds.fit_transform(dist)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Xfc1e3ub2waO","executionInfo":{"status":"ok","timestamp":1682518468816,"user_tz":-540,"elapsed":23,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"a0da55d4-f5a7-4007-c8da-84c44189168a"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["코로나 95\n","감기 1\n","증상 86\n","당뇨 28\n","혈관 104\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.9/dist-packages/sklearn/manifold/_mds.py:299: FutureWarning: The default value of `normalized_stress` will change to `'auto'` in version 1.4. To suppress this warning, manually set the value of `normalized_stress`.\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["from adjustText import adjust_text\n","plt.plot(pos[:, 0], pos[:, 1], '.')\n","texts = [plt.text(pos[i, 0], pos[i, 1], w) for i, w in enumerate(target)]\n","adjust_text(texts)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":447},"id":"QJJD1nD625LQ","executionInfo":{"status":"ok","timestamp":1682518468817,"user_tz":-540,"elapsed":20,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"a858687e-26e4-49c9-cf44-2a4e6f893ab0"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["6"]},"metadata":{},"execution_count":35},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["for t in range(NUM_TOPICS):\n","    print(t)\n","    topic_words_idx = np.argsort(rot[:, t])\n","\n","    for j in topic_words_idx[-1:-11:-1]:\n","        print(words[j])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RTBsptuY2-QK","executionInfo":{"status":"ok","timestamp":1682518468818,"user_tz":-540,"elapsed":17,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"8bbcc363-5446-4e16-fc63-8f81bbef2918"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["0\n","일부\n","냄새\n","경우\n","보고\n","감기\n","증상\n","이상\n","감염자\n","충\n","절반\n","1\n","당뇨\n","진행\n","코로나\n","형태\n","상호\n","알코\n","관\n","외국\n","연구\n","연관\n","2\n","전\n","조심\n","향후\n","확인\n","필요\n","말씀\n","조선\n","입증\n","고려\n","질환자\n","3\n","혈관\n","당뇨\n","장애\n","특성\n","반응\n","세포\n","내벽\n","기전\n","작용\n","복합\n","4\n","증상\n","인후\n","통\n","곤란\n","호흡\n","의심\n","초기\n","이상\n","감별\n","열\n","5\n","열\n","정도\n","미만\n","중국\n","발열\n","선별\n","데이터\n","이상\n","환자\n","전체\n","6\n","우리나라\n","국가\n","비율\n","적용\n","보통\n","별도\n","발현\n","조사\n","나라\n","생각\n","7\n","조심\n","연령\n","기저\n","질환\n","구분\n","경우\n","환자\n","혈관\n","감별\n","호흡\n"]}]},{"cell_type":"code","source":["doc_id = 1"],"metadata":{"id":"FQ-FsjVi3EDl","executionInfo":{"status":"ok","timestamp":1682518468818,"user_tz":-540,"elapsed":14,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":37,"outputs":[]},{"cell_type":"code","source":["plt.plot(doc_emb[doc_id])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":447},"id":"NVyQKECZ3JDN","executionInfo":{"status":"ok","timestamp":1682518469361,"user_tz":-540,"elapsed":557,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"b568af1f-f609-4a06-dd12-05ba86679187"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7f48d4d28f10>]"]},"metadata":{},"execution_count":38},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"code","source":["topic_id = np.argmax(doc_emb[doc_id])\n","topic_id"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hYIVrY_c3VRc","executionInfo":{"status":"ok","timestamp":1682518469362,"user_tz":-540,"elapsed":18,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"77cd7f7a-2dfb-4c2d-dbab-efa985870e49"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["6"]},"metadata":{},"execution_count":39}]},{"cell_type":"markdown","source":["감기와 연관이 가장 강한 토픽 내용"],"metadata":{"id":"_6OLZE4_3oZR"}},{"cell_type":"code","source":["topic_docs_idx = np.argsort(doc_emb[:,topic_id])[-1:-11:-1]\n","df.iloc[topic_docs_idx]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"sDk5mUy23YAg","executionInfo":{"status":"ok","timestamp":1682518469363,"user_tz":-540,"elapsed":14,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"65e220a9-fcb0-4684-d8be-895d21a384c4"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                             contents\n","5   그리고 인후통과 호흡곤란의 경우에서도 대략 20% 각각 20% 미만의 환자들만의 증...\n","3   저희가 코로나바이러스를 의심할 수 있는 증상으로 초기에 38도 이상의 고열 호흡곤란...\n","2   왜냐면 우리가 겨울철에 발생하는 감기라고 부르는 질환 자체가 코로나바이러스에 의한 ...\n","1                      감기하고 코로나바이러스는 사실 구분하기가 쉽지 않은데요\n","9   특히 무증상 감염이 전체 환자의 50% 정도를 차지하기 때문에 우리도 알지 못하는 ...\n","15  그래서 이런 것들을 고려했을 때 조금 전에 말씀드렸던 위험조선을 갖고 있는 그러한 ...\n","14  그리고 이런 코로나19와 당뇨와의 관계는 최근 외국에서 코로나19를 알코난 건강한 ...\n","13  당뇨가 위험한 이유는 코로나19의 기전에 대해서는 아직까지 명확하게 다 알려져 있지...\n","12  기저질환 중에서는 당뇨가 가장 위험한 것으로 알려져 있고 그 외에 고혈압이나 다른 ...\n","11   그중에서 연령이 많으신 분들, 기저질환을 갖고 계신 분들은 당연히 조심을 하셔야 됩니다"],"text/html":["\n","  <div id=\"df-6aa4059d-e535-4473-84f6-434013b016e7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>contents</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>5</th>\n","      <td>그리고 인후통과 호흡곤란의 경우에서도 대략 20% 각각 20% 미만의 환자들만의 증...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>저희가 코로나바이러스를 의심할 수 있는 증상으로 초기에 38도 이상의 고열 호흡곤란...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>왜냐면 우리가 겨울철에 발생하는 감기라고 부르는 질환 자체가 코로나바이러스에 의한 ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>감기하고 코로나바이러스는 사실 구분하기가 쉽지 않은데요</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>특히 무증상 감염이 전체 환자의 50% 정도를 차지하기 때문에 우리도 알지 못하는 ...</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>그래서 이런 것들을 고려했을 때 조금 전에 말씀드렸던 위험조선을 갖고 있는 그러한 ...</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>그리고 이런 코로나19와 당뇨와의 관계는 최근 외국에서 코로나19를 알코난 건강한 ...</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>당뇨가 위험한 이유는 코로나19의 기전에 대해서는 아직까지 명확하게 다 알려져 있지...</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>기저질환 중에서는 당뇨가 가장 위험한 것으로 알려져 있고 그 외에 고혈압이나 다른 ...</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>그중에서 연령이 많으신 분들, 기저질환을 갖고 계신 분들은 당연히 조심을 하셔야 됩니다</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6aa4059d-e535-4473-84f6-434013b016e7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6aa4059d-e535-4473-84f6-434013b016e7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6aa4059d-e535-4473-84f6-434013b016e7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":40}]},{"cell_type":"markdown","source":["패턴이 가장 비슷한 내용"],"metadata":{"id":"fcGzulOF3u2L"}},{"cell_type":"code","source":["sims = cosine_similarity(doc_emb[[doc_id]], doc_emb).flatten()\n","sim_idx = np.argsort(sims)[-1:-11:-1]\n","df.iloc[sim_idx]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"f6dtSLhf3k9w","executionInfo":{"status":"ok","timestamp":1682518469363,"user_tz":-540,"elapsed":13,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"30042e7f-4b3a-4511-df03-30ef62668ece"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                             contents\n","1                      감기하고 코로나바이러스는 사실 구분하기가 쉽지 않은데요\n","2   왜냐면 우리가 겨울철에 발생하는 감기라고 부르는 질환 자체가 코로나바이러스에 의한 ...\n","5   그리고 인후통과 호흡곤란의 경우에서도 대략 20% 각각 20% 미만의 환자들만의 증...\n","3   저희가 코로나바이러스를 의심할 수 있는 증상으로 초기에 38도 이상의 고열 호흡곤란...\n","0                     안녕하세요 세브런스병원 진단검사의 의학과학과 이영민입니다\n","12  기저질환 중에서는 당뇨가 가장 위험한 것으로 알려져 있고 그 외에 고혈압이나 다른 ...\n","6   다만 최근 들어서 일부 국가에서 냄새를 맡지 못하는, 아노스미아라고 부르는 증상이 ...\n","11   그중에서 연령이 많으신 분들, 기저질환을 갖고 계신 분들은 당연히 조심을 하셔야 됩니다\n","9   특히 무증상 감염이 전체 환자의 50% 정도를 차지하기 때문에 우리도 알지 못하는 ...\n","8                코로나19에 감염될 가능성은 남녀노소를 가리지 않고 다 동일합니다"],"text/html":["\n","  <div id=\"df-f16ee422-99df-47b6-b6ca-f2d241e48da1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>contents</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>감기하고 코로나바이러스는 사실 구분하기가 쉽지 않은데요</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>왜냐면 우리가 겨울철에 발생하는 감기라고 부르는 질환 자체가 코로나바이러스에 의한 ...</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>그리고 인후통과 호흡곤란의 경우에서도 대략 20% 각각 20% 미만의 환자들만의 증...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>저희가 코로나바이러스를 의심할 수 있는 증상으로 초기에 38도 이상의 고열 호흡곤란...</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>안녕하세요 세브런스병원 진단검사의 의학과학과 이영민입니다</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>기저질환 중에서는 당뇨가 가장 위험한 것으로 알려져 있고 그 외에 고혈압이나 다른 ...</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>다만 최근 들어서 일부 국가에서 냄새를 맡지 못하는, 아노스미아라고 부르는 증상이 ...</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>그중에서 연령이 많으신 분들, 기저질환을 갖고 계신 분들은 당연히 조심을 하셔야 됩니다</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>특히 무증상 감염이 전체 환자의 50% 정도를 차지하기 때문에 우리도 알지 못하는 ...</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>코로나19에 감염될 가능성은 남녀노소를 가리지 않고 다 동일합니다</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f16ee422-99df-47b6-b6ca-f2d241e48da1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f16ee422-99df-47b6-b6ca-f2d241e48da1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f16ee422-99df-47b6-b6ca-f2d241e48da1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["sims[sim_idx]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YE4ws9ge30xq","executionInfo":{"status":"ok","timestamp":1682518469364,"user_tz":-540,"elapsed":13,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"534ebdfd-2b50-4d4e-d5c1-17c33f25623b"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1.        , 0.94503704, 0.88302553, 0.86007748, 0.36086321,\n","       0.35988378, 0.35051857, 0.34516659, 0.11933174, 0.03037307])"]},"metadata":{},"execution_count":42}]},{"cell_type":"markdown","source":["##LDA"],"metadata":{"id":"QGCR4trF357P"}},{"cell_type":"code","source":["!pip install gensim"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"soxHq1L-38to","executionInfo":{"status":"ok","timestamp":1682518475179,"user_tz":-540,"elapsed":5825,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"a44b832b-2a92-4aaf-c0e5-b4d27a84583e"},"execution_count":43,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: gensim in /usr/local/lib/python3.9/dist-packages (4.3.1)\n","Requirement already satisfied: numpy>=1.18.5 in /usr/local/lib/python3.9/dist-packages (from gensim) (1.22.4)\n","Requirement already satisfied: scipy>=1.7.0 in /usr/local/lib/python3.9/dist-packages (from gensim) (1.10.1)\n","Requirement already satisfied: smart-open>=1.8.1 in /usr/local/lib/python3.9/dist-packages (from gensim) (6.3.0)\n"]}]},{"cell_type":"code","source":["from gensim.matutils import Sparse2Corpus\n","words = cv.get_feature_names_out().tolist()\n","corpus = Sparse2Corpus(dtm.T)\n","id2word = dict(enumerate(words))"],"metadata":{"id":"s_yLXnBX4Aek","executionInfo":{"status":"ok","timestamp":1682518475180,"user_tz":-540,"elapsed":8,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":44,"outputs":[]},{"cell_type":"code","source":["corpus[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ELhzQYra4Cnb","executionInfo":{"status":"ok","timestamp":1682518475180,"user_tz":-540,"elapsed":7,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"6d460460-0e06-4f58-de39-e96434bd24da"},"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[(6, 1),\n"," (14, 1),\n"," (15, 1),\n"," (41, 1),\n"," (51, 1),\n"," (54, 1),\n"," (65, 1),\n"," (67, 1),\n"," (87, 1)]"]},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["from gensim.models.ldamodel import LdaModel\n","lda_model = LdaModel(\n","    corpus=corpus,\n","    id2word=id2word,\n","    num_topics=20,\n","    random_state=100,\n","    update_every=1,\n","    chunksize=100,\n","    passes=10,\n","    iterations=400,\n","    alpha='auto',\n","    eta='auto',\n","    per_word_topics=True)"],"metadata":{"id":"kGW3_Px24FEN","executionInfo":{"status":"ok","timestamp":1682518475650,"user_tz":-540,"elapsed":474,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":46,"outputs":[]},{"cell_type":"code","source":["lda_model.show_topic(1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tvdLp7S74HS5","executionInfo":{"status":"ok","timestamp":1682518475650,"user_tz":-540,"elapsed":20,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"4110eaea-9116-4ce4-aa67-004c2bbc8361"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('코로나', 0.078641206),\n"," ('당뇨', 0.059223592),\n"," ('정도', 0.059223592),\n"," ('열', 0.03980596),\n"," ('진행', 0.03980596),\n"," ('상호', 0.0203883),\n"," ('외국', 0.0203883),\n"," ('연구', 0.0203883),\n"," ('관계', 0.020388298),\n"," ('연관', 0.020388298)]"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["lda_model.show_topics()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"st7syh8J4L1C","executionInfo":{"status":"ok","timestamp":1682518475650,"user_tz":-540,"elapsed":18,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"3efe219c-0da7-4e36-d65b-7afd5708d51f"},"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[(13,\n","  '0.009*\"장애\" + 0.009*\"전\" + 0.009*\"입증\" + 0.009*\"자체\" + 0.009*\"작용\" + 0.009*\"인후\" + 0.009*\"적용\" + 0.009*\"정도\" + 0.009*\"절반\" + 0.009*\"이유\"'),\n"," (17,\n","  '0.009*\"장애\" + 0.009*\"전\" + 0.009*\"입증\" + 0.009*\"자체\" + 0.009*\"작용\" + 0.009*\"인후\" + 0.009*\"적용\" + 0.009*\"정도\" + 0.009*\"절반\" + 0.009*\"이유\"'),\n"," (2,\n","  '0.009*\"장애\" + 0.009*\"전\" + 0.009*\"입증\" + 0.009*\"자체\" + 0.009*\"작용\" + 0.009*\"인후\" + 0.009*\"적용\" + 0.009*\"정도\" + 0.009*\"절반\" + 0.009*\"이유\"'),\n"," (8,\n","  '0.009*\"장애\" + 0.009*\"전\" + 0.009*\"입증\" + 0.009*\"자체\" + 0.009*\"작용\" + 0.009*\"인후\" + 0.009*\"적용\" + 0.009*\"정도\" + 0.009*\"절반\" + 0.009*\"이유\"'),\n"," (6,\n","  '0.009*\"장애\" + 0.009*\"전\" + 0.009*\"입증\" + 0.009*\"자체\" + 0.009*\"작용\" + 0.009*\"인후\" + 0.009*\"적용\" + 0.009*\"정도\" + 0.009*\"절반\" + 0.009*\"이유\"'),\n"," (19,\n","  '0.123*\"구분\" + 0.123*\"코로나바이러스\" + 0.123*\"감기\" + 0.007*\"조심\" + 0.007*\"연령\" + 0.006*\"기저\" + 0.006*\"질환\" + 0.006*\"작용\" + 0.006*\"장애\" + 0.006*\"전\"'),\n"," (15,\n","  '0.174*\"질환\" + 0.117*\"기저\" + 0.060*\"위험\" + 0.060*\"중증\" + 0.060*\"혈압\" + 0.060*\"만성\" + 0.060*\"당뇨\" + 0.060*\"연령\" + 0.059*\"조심\" + 0.003*\"장애\"'),\n"," (14,\n","  '0.054*\"증상\" + 0.054*\"의심\" + 0.054*\"코로나바이러스\" + 0.054*\"이상\" + 0.054*\"곤란\" + 0.054*\"통\" + 0.054*\"인후\" + 0.054*\"호흡\" + 0.054*\"열\" + 0.054*\"초기\"'),\n"," (10,\n","  '0.102*\"증상\" + 0.082*\"경우\" + 0.062*\"일부\" + 0.062*\"냄새\" + 0.041*\"코로나\" + 0.041*\"감기\" + 0.041*\"환자\" + 0.041*\"감별\" + 0.041*\"보고\" + 0.021*\"농증\"'),\n"," (1,\n","  '0.079*\"코로나\" + 0.059*\"당뇨\" + 0.059*\"정도\" + 0.040*\"열\" + 0.040*\"진행\" + 0.020*\"상호\" + 0.020*\"외국\" + 0.020*\"연구\" + 0.020*\"관계\" + 0.020*\"연관\"')]"]},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["word_idx = words.index('증상')\n","lda_model.get_term_topics(word_idx)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6cPjkINI4O-a","executionInfo":{"status":"ok","timestamp":1682518475651,"user_tz":-540,"elapsed":15,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"dc3d58b0-dd6e-4486-d74c-edbf7ae2dcc5"},"execution_count":49,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[(5, 0.06849221),\n"," (7, 0.0217073),\n"," (10, 0.0930415),\n"," (12, 0.043407694),\n"," (14, 0.031987738),\n"," (18, 0.09844907)]"]},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":["doc_idx = 1\n","lda_model.get_document_topics(corpus[doc_idx])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VsniLEaF4SoF","executionInfo":{"status":"ok","timestamp":1682518475651,"user_tz":-540,"elapsed":12,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"f343f2f8-9875-4d9f-cf69-f1e2986721fb"},"execution_count":50,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[(1, 0.015713979),\n"," (10, 0.0124062225),\n"," (14, 0.012114394),\n"," (15, 0.012060189),\n"," (19, 0.8243059)]"]},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["lda_model.log_perplexity(corpus)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eZcsuRNq4WAz","executionInfo":{"status":"ok","timestamp":1682518475651,"user_tz":-540,"elapsed":10,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"6510af83-16b4-4dc6-a631-f9c4e9aba6f3"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["-5.470320105263331"]},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["topn = 25\n","top_words = set()\n","\n","for topic in range(lda_model.num_topics):\n","    for word, prob in lda_model.show_topic(topic, topn=topn):\n","        top_words.add(word)\n","\n","len(top_words) / (lda_model.num_topics * topn)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fi4flfpW4YnI","executionInfo":{"status":"ok","timestamp":1682518475652,"user_tz":-540,"elapsed":8,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"3334cdff-f158-42c1-c208-ce01f2e9bbcf"},"execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.206"]},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["!pip install pyLDAvis==2.1.2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"N6IVBik_4bKB","executionInfo":{"status":"ok","timestamp":1682518479773,"user_tz":-540,"elapsed":4126,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"4d938e77-147b-4375-ca24-41ebcc88771a"},"execution_count":53,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: pyLDAvis==2.1.2 in /usr/local/lib/python3.9/dist-packages (2.1.2)\n","Requirement already satisfied: jinja2>=2.7.2 in /usr/local/lib/python3.9/dist-packages (from pyLDAvis==2.1.2) (3.1.2)\n","Requirement already satisfied: numexpr in /usr/local/lib/python3.9/dist-packages (from pyLDAvis==2.1.2) (2.8.4)\n","Requirement already satisfied: funcy in /usr/local/lib/python3.9/dist-packages (from pyLDAvis==2.1.2) (2.0)\n","Requirement already satisfied: wheel>=0.23.0 in /usr/local/lib/python3.9/dist-packages (from pyLDAvis==2.1.2) (0.40.0)\n","Requirement already satisfied: numpy>=1.9.2 in /usr/local/lib/python3.9/dist-packages (from pyLDAvis==2.1.2) (1.22.4)\n","Requirement already satisfied: pandas>=0.17.0 in /usr/local/lib/python3.9/dist-packages (from pyLDAvis==2.1.2) (1.5.3)\n","Requirement already satisfied: joblib>=0.8.4 in /usr/local/lib/python3.9/dist-packages (from pyLDAvis==2.1.2) (1.2.0)\n","Requirement already satisfied: scipy>=0.18.0 in /usr/local/lib/python3.9/dist-packages (from pyLDAvis==2.1.2) (1.10.1)\n","Requirement already satisfied: future in /usr/local/lib/python3.9/dist-packages (from pyLDAvis==2.1.2) (0.18.3)\n","Requirement already satisfied: pytest in /usr/local/lib/python3.9/dist-packages (from pyLDAvis==2.1.2) (7.2.2)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.9/dist-packages (from jinja2>=2.7.2->pyLDAvis==2.1.2) (2.1.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.9/dist-packages (from pandas>=0.17.0->pyLDAvis==2.1.2) (2022.7.1)\n","Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.9/dist-packages (from pandas>=0.17.0->pyLDAvis==2.1.2) (2.8.2)\n","Requirement already satisfied: iniconfig in /usr/local/lib/python3.9/dist-packages (from pytest->pyLDAvis==2.1.2) (2.0.0)\n","Requirement already satisfied: attrs>=19.2.0 in /usr/local/lib/python3.9/dist-packages (from pytest->pyLDAvis==2.1.2) (23.1.0)\n","Requirement already satisfied: exceptiongroup>=1.0.0rc8 in /usr/local/lib/python3.9/dist-packages (from pytest->pyLDAvis==2.1.2) (1.1.1)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.9/dist-packages (from pytest->pyLDAvis==2.1.2) (23.1)\n","Requirement already satisfied: pluggy<2.0,>=0.12 in /usr/local/lib/python3.9/dist-packages (from pytest->pyLDAvis==2.1.2) (1.0.0)\n","Requirement already satisfied: tomli>=1.0.0 in /usr/local/lib/python3.9/dist-packages (from pytest->pyLDAvis==2.1.2) (2.0.1)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.9/dist-packages (from python-dateutil>=2.8.1->pandas>=0.17.0->pyLDAvis==2.1.2) (1.16.0)\n"]}]},{"cell_type":"code","source":["from gensim.corpora.dictionary import Dictionary\n","dic = Dictionary()\n","dic.id2token = id2word\n","dic.token2id = {w: i for i, w in id2word.items()}"],"metadata":{"id":"KQs8LdWe4eTX","executionInfo":{"status":"ok","timestamp":1682518479773,"user_tz":-540,"elapsed":4,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":54,"outputs":[]},{"cell_type":"code","source":["import pyLDAvis.gensim\n","p = pyLDAvis.gensim.prepare(lda_model, corpus, dic, sort_topics=False)\n","pyLDAvis.display(p)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":420},"id":"lO5jmhRU4gsd","executionInfo":{"status":"error","timestamp":1682518483493,"user_tz":-540,"elapsed":3723,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"29fbe50d-7e38-4bfc-829b-72911a9abb7d"},"execution_count":55,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.9/dist-packages/pyLDAvis/_prepare.py:228: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only.\n","  default_term_info  = pd.DataFrame({'saliency': saliency, 'Term': vocab, \\\n"]},{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-55-4f027a93d47a>\u001b[0m in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mpyLDAvis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgensim\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mp\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpyLDAvis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgensim\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprepare\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlda_model\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcorpus\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdic\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msort_topics\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mpyLDAvis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdisplay\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mp\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/pyLDAvis/_display.py\u001b[0m in \u001b[0;36mdisplay\u001b[0;34m(data, local, **kwargs)\u001b[0m\n\u001b[1;32m    220\u001b[0m         \u001b[0mkwargs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'd3_url'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'ldavis_url'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'ldavis_css_url'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mwrite_ipynb_local_js\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    221\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 222\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mHTML\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mprepared_data_to_html\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    223\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    224\u001b[0m def show(data, ip='127.0.0.1', port=8888, n_retries=50,\n","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/pyLDAvis/_display.py\u001b[0m in \u001b[0;36mprepared_data_to_html\u001b[0;34m(data, d3_url, ldavis_url, ldavis_css_url, template_type, visid, use_http)\u001b[0m\n\u001b[1;32m    176\u001b[0m                            \u001b[0md3_url\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0md3_url\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    177\u001b[0m                            \u001b[0mldavis_url\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mldavis_url\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 178\u001b[0;31m                            \u001b[0mvis_json\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_json\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    179\u001b[0m                            ldavis_css_url=ldavis_css_url)\n\u001b[1;32m    180\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/pyLDAvis/_prepare.py\u001b[0m in \u001b[0;36mto_json\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    415\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    416\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mto_json\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 417\u001b[0;31m        \u001b[0;32mreturn\u001b[0m \u001b[0mjson\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdumps\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_dict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcls\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mNumPyEncoder\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/lib/python3.9/json/__init__.py\u001b[0m in \u001b[0;36mdumps\u001b[0;34m(obj, skipkeys, ensure_ascii, check_circular, allow_nan, cls, indent, separators, default, sort_keys, **kw)\u001b[0m\n\u001b[1;32m    232\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mcls\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    233\u001b[0m         \u001b[0mcls\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mJSONEncoder\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 234\u001b[0;31m     return cls(\n\u001b[0m\u001b[1;32m    235\u001b[0m         \u001b[0mskipkeys\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mskipkeys\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mensure_ascii\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mensure_ascii\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    236\u001b[0m         \u001b[0mcheck_circular\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcheck_circular\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mallow_nan\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mallow_nan\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindent\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mindent\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.9/json/encoder.py\u001b[0m in \u001b[0;36mencode\u001b[0;34m(self, o)\u001b[0m\n\u001b[1;32m    197\u001b[0m         \u001b[0;31m# exceptions aren't as detailed.  The list call should be roughly\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    198\u001b[0m         \u001b[0;31m# equivalent to the PySequence_Fast that ''.join() would do.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 199\u001b[0;31m         \u001b[0mchunks\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0miterencode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mo\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m_one_shot\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    200\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mchunks\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mlist\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtuple\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    201\u001b[0m             \u001b[0mchunks\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mchunks\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.9/json/encoder.py\u001b[0m in \u001b[0;36miterencode\u001b[0;34m(self, o, _one_shot)\u001b[0m\n\u001b[1;32m    255\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkey_separator\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitem_separator\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msort_keys\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    256\u001b[0m                 self.skipkeys, _one_shot)\n\u001b[0;32m--> 257\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0m_iterencode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mo\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    258\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    259\u001b[0m def _make_iterencode(markers, _default, _encoder, _indent, _floatstr,\n","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/pyLDAvis/utils.py\u001b[0m in \u001b[0;36mdefault\u001b[0;34m(self, obj)\u001b[0m\n\u001b[1;32m    144\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfloat64\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfloat32\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    145\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mfloat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 146\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mjson\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mJSONEncoder\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdefault\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mobj\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/lib/python3.9/json/encoder.py\u001b[0m in \u001b[0;36mdefault\u001b[0;34m(self, o)\u001b[0m\n\u001b[1;32m    177\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    178\u001b[0m         \"\"\"\n\u001b[0;32m--> 179\u001b[0;31m         raise TypeError(f'Object of type {o.__class__.__name__} '\n\u001b[0m\u001b[1;32m    180\u001b[0m                         f'is not JSON serializable')\n\u001b[1;32m    181\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: Object of type complex is not JSON serializable"]}]},{"cell_type":"markdown","source":["##BERT"],"metadata":{"id":"BZ49TD1E42aH"}},{"cell_type":"code","source":["!pip install sentence_transformers"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-D8_I2US46h2","executionInfo":{"status":"ok","timestamp":1682518603159,"user_tz":-540,"elapsed":5448,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"370ec341-0fc6-4a65-986a-66fa7b46725a"},"execution_count":56,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.9/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n","  and should_run_async(code)\n"]},{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: sentence_transformers in /usr/local/lib/python3.9/dist-packages (2.2.2)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.9/dist-packages (from sentence_transformers) (1.22.4)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.9/dist-packages (from sentence_transformers) (1.10.1)\n","Requirement already satisfied: torchvision in /usr/local/lib/python3.9/dist-packages (from sentence_transformers) (0.15.1+cu118)\n","Requirement already satisfied: torch>=1.6.0 in /usr/local/lib/python3.9/dist-packages (from sentence_transformers) (2.0.0+cu118)\n","Requirement already satisfied: scikit-learn in /usr/local/lib/python3.9/dist-packages (from sentence_transformers) (1.2.2)\n","Requirement already satisfied: huggingface-hub>=0.4.0 in /usr/local/lib/python3.9/dist-packages (from sentence_transformers) (0.14.1)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.9/dist-packages (from sentence_transformers) (4.65.0)\n","Requirement already satisfied: transformers<5.0.0,>=4.6.0 in /usr/local/lib/python3.9/dist-packages (from sentence_transformers) (4.28.1)\n","Requirement already satisfied: nltk in /usr/local/lib/python3.9/dist-packages (from sentence_transformers) (3.8.1)\n","Requirement already satisfied: sentencepiece in /usr/local/lib/python3.9/dist-packages (from sentence_transformers) (0.1.98)\n","Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.9/dist-packages (from huggingface-hub>=0.4.0->sentence_transformers) (4.5.0)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.9/dist-packages (from huggingface-hub>=0.4.0->sentence_transformers) (3.11.0)\n","Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.9/dist-packages (from huggingface-hub>=0.4.0->sentence_transformers) (6.0)\n","Requirement already satisfied: packaging>=20.9 in /usr/local/lib/python3.9/dist-packages (from huggingface-hub>=0.4.0->sentence_transformers) (23.1)\n","Requirement already satisfied: requests in /usr/local/lib/python3.9/dist-packages (from huggingface-hub>=0.4.0->sentence_transformers) (2.27.1)\n","Requirement already satisfied: fsspec in /usr/local/lib/python3.9/dist-packages (from huggingface-hub>=0.4.0->sentence_transformers) (2023.4.0)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.9/dist-packages (from torch>=1.6.0->sentence_transformers) (3.1)\n","Requirement already satisfied: triton==2.0.0 in /usr/local/lib/python3.9/dist-packages (from torch>=1.6.0->sentence_transformers) (2.0.0)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.9/dist-packages (from torch>=1.6.0->sentence_transformers) (3.1.2)\n","Requirement already satisfied: sympy in /usr/local/lib/python3.9/dist-packages (from torch>=1.6.0->sentence_transformers) (1.11.1)\n","Requirement already satisfied: cmake in /usr/local/lib/python3.9/dist-packages (from triton==2.0.0->torch>=1.6.0->sentence_transformers) (3.25.2)\n","Requirement already satisfied: lit in /usr/local/lib/python3.9/dist-packages (from triton==2.0.0->torch>=1.6.0->sentence_transformers) (16.0.1)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.9/dist-packages (from transformers<5.0.0,>=4.6.0->sentence_transformers) (2022.10.31)\n","Requirement already satisfied: tokenizers!=0.11.3,<0.14,>=0.11.1 in /usr/local/lib/python3.9/dist-packages (from transformers<5.0.0,>=4.6.0->sentence_transformers) (0.13.3)\n","Requirement already satisfied: click in /usr/local/lib/python3.9/dist-packages (from nltk->sentence_transformers) (8.1.3)\n","Requirement already satisfied: joblib in /usr/local/lib/python3.9/dist-packages (from nltk->sentence_transformers) (1.2.0)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.9/dist-packages (from scikit-learn->sentence_transformers) (3.1.0)\n","Requirement already satisfied: pillow!=8.3.*,>=5.3.0 in /usr/local/lib/python3.9/dist-packages (from torchvision->sentence_transformers) (8.4.0)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.9/dist-packages (from jinja2->torch>=1.6.0->sentence_transformers) (2.1.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.9/dist-packages (from requests->huggingface-hub>=0.4.0->sentence_transformers) (3.4)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.9/dist-packages (from requests->huggingface-hub>=0.4.0->sentence_transformers) (1.26.15)\n","Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.9/dist-packages (from requests->huggingface-hub>=0.4.0->sentence_transformers) (2.0.12)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.9/dist-packages (from requests->huggingface-hub>=0.4.0->sentence_transformers) (2022.12.7)\n","Requirement already satisfied: mpmath>=0.19 in /usr/local/lib/python3.9/dist-packages (from sympy->torch>=1.6.0->sentence_transformers) (1.3.0)\n"]}]},{"cell_type":"code","source":["from sentence_transformers import SentenceTransformer"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"n6KqcXr-4-EJ","executionInfo":{"status":"ok","timestamp":1682518607067,"user_tz":-540,"elapsed":3613,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"315a817d-b9f9-47fa-f763-b1beabfa8e4e"},"execution_count":57,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.9/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n","  and should_run_async(code)\n"]}]},{"cell_type":"code","source":["model = SentenceTransformer('jhgan/ko-sroberta-multitask')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QzXvpijN5AQ_","executionInfo":{"status":"ok","timestamp":1682518609208,"user_tz":-540,"elapsed":2145,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"7b942dd4-e99d-403f-dcee-5fb0e82198fa"},"execution_count":58,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.9/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n","  and should_run_async(code)\n"]}]},{"cell_type":"code","source":["doc_emb = model.encode(df['contents'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e1_Mkvz75E0a","executionInfo":{"status":"ok","timestamp":1682518609209,"user_tz":-540,"elapsed":3,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"daff8ef6-40ec-4e0c-e16f-6aa644a9aef1"},"execution_count":59,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.9/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n","  and should_run_async(code)\n"]}]},{"cell_type":"code","source":["from sklearn.metrics.pairwise import cosine_distances\n","import numpy as np\n","\n","doc_idx = 1\n","dists = cosine_distances(doc_emb[[doc_idx]], doc_emb).flatten()\n","df.iloc[np.argsort(dists)[:10]]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":420},"id":"EWNZK9e05I-C","executionInfo":{"status":"ok","timestamp":1682518633706,"user_tz":-540,"elapsed":311,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"8622ce9b-0c3a-423d-b8ed-d01df0140e40"},"execution_count":61,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.9/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n","  and should_run_async(code)\n"]},{"output_type":"execute_result","data":{"text/plain":["                                             contents\n","1                      감기하고 코로나바이러스는 사실 구분하기가 쉽지 않은데요\n","2   왜냐면 우리가 겨울철에 발생하는 감기라고 부르는 질환 자체가 코로나바이러스에 의한 ...\n","6   다만 최근 들어서 일부 국가에서 냄새를 맡지 못하는, 아노스미아라고 부르는 증상이 ...\n","10    하지만 이 코로나19에 감염된 이후에 양상은 여러 가지 것들에 따라 달라지게 되는데요\n","15  그래서 이런 것들을 고려했을 때 조금 전에 말씀드렸던 위험조선을 갖고 있는 그러한 ...\n","5   그리고 인후통과 호흡곤란의 경우에서도 대략 20% 각각 20% 미만의 환자들만의 증...\n","7   보통은 젊은 환자들의 경우에도 좀 더 냄새를 맡지 못하는 증상이 많다고 알려져 있는...\n","3   저희가 코로나바이러스를 의심할 수 있는 증상으로 초기에 38도 이상의 고열 호흡곤란...\n","14  그리고 이런 코로나19와 당뇨와의 관계는 최근 외국에서 코로나19를 알코난 건강한 ...\n","4   하지만 중국의 데이터에 따르면 전체 환자의 20% 정도만이 38도 이상의 고열을 보..."],"text/html":["\n","  <div id=\"df-74709a6a-19a1-408d-a7bb-3b1a53b5c735\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>contents</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>감기하고 코로나바이러스는 사실 구분하기가 쉽지 않은데요</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>왜냐면 우리가 겨울철에 발생하는 감기라고 부르는 질환 자체가 코로나바이러스에 의한 ...</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>다만 최근 들어서 일부 국가에서 냄새를 맡지 못하는, 아노스미아라고 부르는 증상이 ...</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>하지만 이 코로나19에 감염된 이후에 양상은 여러 가지 것들에 따라 달라지게 되는데요</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>그래서 이런 것들을 고려했을 때 조금 전에 말씀드렸던 위험조선을 갖고 있는 그러한 ...</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>그리고 인후통과 호흡곤란의 경우에서도 대략 20% 각각 20% 미만의 환자들만의 증...</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>보통은 젊은 환자들의 경우에도 좀 더 냄새를 맡지 못하는 증상이 많다고 알려져 있는...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>저희가 코로나바이러스를 의심할 수 있는 증상으로 초기에 38도 이상의 고열 호흡곤란...</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>그리고 이런 코로나19와 당뇨와의 관계는 최근 외국에서 코로나19를 알코난 건강한 ...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>하지만 중국의 데이터에 따르면 전체 환자의 20% 정도만이 38도 이상의 고열을 보...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-74709a6a-19a1-408d-a7bb-3b1a53b5c735')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-74709a6a-19a1-408d-a7bb-3b1a53b5c735 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-74709a6a-19a1-408d-a7bb-3b1a53b5c735');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":61}]},{"cell_type":"code","source":["word_emb = model.encode(words)\n","dists = cosine_distances(doc_emb[[doc_idx]], word_emb).flatten()\n","for i in np.argsort(dists)[:5]:\n","    print(words[i])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LCRFuEHI7Ph9","executionInfo":{"status":"ok","timestamp":1682518639100,"user_tz":-540,"elapsed":1334,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"d0dd6ce7-ef81-418d-c6c6-dbc7e6e7fcdf"},"execution_count":62,"outputs":[{"output_type":"stream","name":"stdout","text":["감기\n","코로나바이러스\n","코로나\n","감염\n","중증\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.9/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n","  and should_run_async(code)\n"]}]},{"cell_type":"code","source":["from scipy.special import factorial\n","n = 10\n","k = 5\n","factorial(n)/factorial(n-k)/factorial(k)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3stlpHRb7S6E","executionInfo":{"status":"ok","timestamp":1682518651881,"user_tz":-540,"elapsed":322,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"2ddf21e3-9d53-4a14-94fd-4cd0e7818928"},"execution_count":63,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.9/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n","  and should_run_async(code)\n"]},{"output_type":"execute_result","data":{"text/plain":["252.0"]},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["import itertools\n","\n","max_dist = 0\n","max_combi = None\n","candidates = np.argsort(dists)[:n]\n","for combi in itertools.combinations(candidates, k):\n","    word_dists = cosine_distances(word_emb[list(combi)])\n","    sum_dist = word_dists.sum()\n","    if sum_dist > max_dist:\n","        max_dist = sum_dist\n","        max_combi = combi"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ad16o4er7U8-","executionInfo":{"status":"ok","timestamp":1682518660352,"user_tz":-540,"elapsed":426,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"8cebc812-dc40-4f64-e1e3-632596c3d7e7"},"execution_count":64,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.9/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n","  and should_run_async(code)\n"]}]},{"cell_type":"code","source":["max_dist"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9IDWY4Hc7Xah","executionInfo":{"status":"ok","timestamp":1682518670389,"user_tz":-540,"elapsed":346,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"35ac68d6-de3b-4527-bff4-bf9c5f430192"},"execution_count":65,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.9/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n","  and should_run_async(code)\n"]},{"output_type":"execute_result","data":{"text/plain":["10.555683"]},"metadata":{},"execution_count":65}]},{"cell_type":"code","source":["for i in max_combi:\n","    print(words[i])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"q9Z8E2Fx7Z7s","executionInfo":{"status":"ok","timestamp":1682518680799,"user_tz":-540,"elapsed":479,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"125769fb-d002-4107-b53b-73842e64767e"},"execution_count":66,"outputs":[{"output_type":"stream","name":"stdout","text":["감기\n","코로나바이러스\n","감별\n","농증\n","질환자\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.9/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n","  and should_run_async(code)\n"]}]},{"cell_type":"code","source":["from sklearn.metrics.pairwise import cosine_similarity\n","diversity = 0.5 #1에 가까울수록 키워드간 연관도 멀어짐\n","keyword, *candidates = np.argsort(dists)[:n].tolist()\n","keywords = [keyword]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1wY9lboC7cwM","executionInfo":{"status":"ok","timestamp":1682518692252,"user_tz":-540,"elapsed":401,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"fbb441e5-d01c-4ca8-e644-06c692ff6381"},"execution_count":67,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.9/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n","  and should_run_async(code)\n"]}]},{"cell_type":"code","source":["keywords"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Grkc0rQ37e_2","executionInfo":{"status":"ok","timestamp":1682518701908,"user_tz":-540,"elapsed":484,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"375367e0-b80d-4608-e9ce-2abe2b448724"},"execution_count":68,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.9/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n","  and should_run_async(code)\n"]},{"output_type":"execute_result","data":{"text/plain":["[1]"]},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":["for i in keywords:\n","    print(words[i])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4IcUqIMZ7hd6","executionInfo":{"status":"ok","timestamp":1682518712167,"user_tz":-540,"elapsed":439,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"b87baeb2-c02f-47e3-e89a-98789f7e8d23"},"execution_count":69,"outputs":[{"output_type":"stream","name":"stdout","text":["감기\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.9/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n","  and should_run_async(code)\n"]}]},{"cell_type":"markdown","source":["\n","\n","\n","\n","\n","\n","7. 6번에서 고른 방법의 결과를 설명하세요.\n","\n","8. 7번의 분석 결과를 PROJECT에 어떻게 할용할 수 있는지 설명하세요.\n","\n","9. PROJECT에 검색을 포함할 방법을 설명하세요. DATA를 이용하여 검색의 예시를 제시하세요.\n","\n","10. PROJECT를 추진하기 위해 2~9번으로 부족한 부분을 설명하고, 이에 대한 보완 방반을 제시하세요."],"metadata":{"id":"SF8dMUU0rWnE"}}]}