{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4","toc_visible":true,"mount_file_id":"11Cq-6V0Au5KLQqX2mqa-UA1vYX0Gy5aB","authorship_tag":"ABX9TyPAST4lY/P8ID93SpzP76Oj"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU","gpuClass":"standard","widgets":{"application/vnd.jupyter.widget-state+json":{"fa428127008a4f1b9c3c63ea0880beb7":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_4ff3e2f36ca54e03abd886744c687df6","IPY_MODEL_efc60c5970fe44a996a89104c4589f3b","IPY_MODEL_c31f07eea5534611af734717e8bb7ab8"],"layout":"IPY_MODEL_6ac8c23cba4b4c189d65d14e0016443e"}},"4ff3e2f36ca54e03abd886744c687df6":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_18a8ee6562c448448f440768ad279541","placeholder":"​","style":"IPY_MODEL_1cbf14cc224c4f439250165c6262519f","value":"Downloading (…)lve/main/config.json: 100%"}},"efc60c5970fe44a996a89104c4589f3b":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_a087edfbb70e450a8bc26436d1d448c4","max":1000,"min":0,"orientation":"horizontal","style":"IPY_MODEL_becc85231a4b4572b6ea97590c29f673","value":1000}},"c31f07eea5534611af734717e8bb7ab8":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_e71dcf67dcdb4b6ea58ecd4efe51347a","placeholder":"​","style":"IPY_MODEL_8a58769dbbd94d30a4a67245c5a94923","value":" 1.00k/1.00k [00:00&lt;00:00, 17.5kB/s]"}},"6ac8c23cba4b4c189d65d14e0016443e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"18a8ee6562c448448f440768ad279541":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1cbf14cc224c4f439250165c6262519f":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"a087edfbb70e450a8bc26436d1d448c4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"becc85231a4b4572b6ea97590c29f673":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"e71dcf67dcdb4b6ea58ecd4efe51347a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8a58769dbbd94d30a4a67245c5a94923":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"628ba8152bc34521a722edab736210be":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_f1e1bc5031884b209d030abe6d61b00b","IPY_MODEL_7ddd66f0cdfe474da2ec80fc28967f7a","IPY_MODEL_5a801715ce4a40498bbd153b14b058b3"],"layout":"IPY_MODEL_e675f10c3d954001ababe5ee7ec1e5ca"}},"f1e1bc5031884b209d030abe6d61b00b":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_5aee8bce03b84187afd60f543ad518a0","placeholder":"​","style":"IPY_MODEL_2b8b5236d4e747fe8d7f0590b71a50c8","value":"Downloading pytorch_model.bin: 100%"}},"7ddd66f0cdfe474da2ec80fc28967f7a":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_4772f29178f44dff95a3404093ac31c2","max":513302779,"min":0,"orientation":"horizontal","style":"IPY_MODEL_0ba94e84dd584805993352c8181bd4cb","value":513302779}},"5a801715ce4a40498bbd153b14b058b3":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_a4b736f4c6294f9981ce7c62afbc9988","placeholder":"​","style":"IPY_MODEL_0b1b097106af4b58a37037b950c960e8","value":" 513M/513M [00:02&lt;00:00, 232MB/s]"}},"e675f10c3d954001ababe5ee7ec1e5ca":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5aee8bce03b84187afd60f543ad518a0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2b8b5236d4e747fe8d7f0590b71a50c8":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"4772f29178f44dff95a3404093ac31c2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0ba94e84dd584805993352c8181bd4cb":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"a4b736f4c6294f9981ce7c62afbc9988":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0b1b097106af4b58a37037b950c960e8":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"69f346d17f974f8d9cc80725dc6fb19e":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_4372615c84a54eb5ab65d7091992d069","IPY_MODEL_be025b89794545659aa50a273fa1d22d","IPY_MODEL_12abab473df94b63b012d4ddc936da8c"],"layout":"IPY_MODEL_8b99a7fa736e4767aded23f78f187ea2"}},"4372615c84a54eb5ab65d7091992d069":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_86aa0fa6459a4b6bbf4dc021b5e991bc","placeholder":"​","style":"IPY_MODEL_eb7e6808c58849bc9389d3561dcc6cd2","value":"Downloading (…)/main/tokenizer.json: 100%"}},"be025b89794545659aa50a273fa1d22d":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_132cc5fa9941475ca11d0867a81fe9c6","max":2825034,"min":0,"orientation":"horizontal","style":"IPY_MODEL_4da00f19e3c94f5dabe8f8c22568394c","value":2825034}},"12abab473df94b63b012d4ddc936da8c":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_97a651df852547efb46f4ac27e9bdcef","placeholder":"​","style":"IPY_MODEL_664139bdde164ccc869254829d65956b","value":" 2.83M/2.83M [00:03&lt;00:00, 823kB/s]"}},"8b99a7fa736e4767aded23f78f187ea2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"86aa0fa6459a4b6bbf4dc021b5e991bc":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"eb7e6808c58849bc9389d3561dcc6cd2":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"132cc5fa9941475ca11d0867a81fe9c6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4da00f19e3c94f5dabe8f8c22568394c":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"97a651df852547efb46f4ac27e9bdcef":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"664139bdde164ccc869254829d65956b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"cells":[{"cell_type":"markdown","source":["#감성분석\n","##실습 준비\n","###파일 열기"],"metadata":{"id":"B3vh4IIGd7Ha"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"aARUCveUdF8Y","executionInfo":{"status":"ok","timestamp":1684549403963,"user_tz":-540,"elapsed":4357,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","df = pd.read_excel('/content/drive/Othercomputers/내 노트북/study/06_TextAnalytics/data/yelp.xlsx')"]},{"cell_type":"markdown","source":["###문서 단어 행렬 만들기"],"metadata":{"id":"a2tkGAg6d-Y7"}},{"cell_type":"code","source":["from sklearn.feature_extraction.text import CountVectorizer\n","cv = CountVectorizer(max_features=1000, stop_words='english')\n","dtm = cv.fit_transform(df.review)"],"metadata":{"id":"rRdTo4_JeBOF","executionInfo":{"status":"ok","timestamp":1684549405580,"user_tz":-540,"elapsed":1622,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":2,"outputs":[]},{"cell_type":"markdown","source":["###3x와 y를 지정"],"metadata":{"id":"1itZ49iveFIL"}},{"cell_type":"code","source":["x = dtm\n","y = df.sentiment"],"metadata":{"id":"crPYidG2eGaS","executionInfo":{"status":"ok","timestamp":1684549405580,"user_tz":-540,"elapsed":24,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":3,"outputs":[]},{"cell_type":"markdown","source":["###데이터 분할"],"metadata":{"id":"NoX_lOLOeIe5"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","x_train, x_test, y_train, y_test = train_test_split(\n","    x,\n","    y,\n","    test_size=0.2,   # 20%의 데이터를 테스트용으로 유보\n","    random_state=42) # 유사난수의 씨앗값 seed을 42로 설정"],"metadata":{"id":"kjWt2WOfeK4b","executionInfo":{"status":"ok","timestamp":1684549405580,"user_tz":-540,"elapsed":24,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":4,"outputs":[]},{"cell_type":"markdown","source":["##나이브 베이즈 분류\n","###임포트"],"metadata":{"id":"lA1RhKGueME1"}},{"cell_type":"code","source":["from sklearn.naive_bayes import BernoulliNB"],"metadata":{"id":"m3OYY1zgeMQT","executionInfo":{"status":"ok","timestamp":1684549405581,"user_tz":-540,"elapsed":24,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":5,"outputs":[]},{"cell_type":"markdown","source":["###모델 만들기"],"metadata":{"id":"9eK-SUIheQnL"}},{"cell_type":"code","source":["model = BernoulliNB()"],"metadata":{"id":"wk6eU4wFeQ8P","executionInfo":{"status":"ok","timestamp":1684549405581,"user_tz":-540,"elapsed":24,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":6,"outputs":[]},{"cell_type":"markdown","source":["###학습"],"metadata":{"id":"ZGgmc4hweWZb"}},{"cell_type":"code","source":["model.fit(x_train, y_train)"],"metadata":{"id":"1wpvb6wdeW7g","colab":{"base_uri":"https://localhost:8080/","height":75},"executionInfo":{"status":"ok","timestamp":1684549405581,"user_tz":-540,"elapsed":23,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"5ab702f2-619a-41c1-ce63-696966682834"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["BernoulliNB()"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>BernoulliNB()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">BernoulliNB</label><div class=\"sk-toggleable__content\"><pre>BernoulliNB()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["###훈련 데이터로 정확도(accuracy) 평가"],"metadata":{"id":"WK4pF1f9ea6c"}},{"cell_type":"code","source":["model.score(x_train, y_train)"],"metadata":{"id":"_bAtlcbqedue","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1684549405582,"user_tz":-540,"elapsed":22,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"82f3cdfc-20d1-4f4f-8296-1312007f1106"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.92125"]},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["###테스트 데이터로 정확도 평가"],"metadata":{"id":"Uc3DOvofemmH"}},{"cell_type":"code","source":["model.score(x_test, y_test)"],"metadata":{"id":"KEOal2a7ep3L","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1684549405582,"user_tz":-540,"elapsed":17,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"a1cb4c8f-2a82-4b63-d1f5-bc8aafb9fc32"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.765"]},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","source":["###단어별 확률"],"metadata":{"id":"3LSSrK9zeq7k"}},{"cell_type":"code","source":["prob_df = pd.DataFrame({\n","    '단어': cv.get_feature_names_out(),\n","    '비율': model.feature_log_prob_[1] - model.feature_log_prob_[0]\n","})"],"metadata":{"id":"ezm0Tetnesfl","executionInfo":{"status":"ok","timestamp":1684549405582,"user_tz":-540,"elapsed":15,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":10,"outputs":[]},{"cell_type":"markdown","source":["###상대적으로 긍정 문장에서 많이 나오는 단어"],"metadata":{"id":"Z3BFiLFket-8"}},{"cell_type":"code","source":["prob_df.sort_values('비율').tail(10)"],"metadata":{"id":"9l9qB1MDev8f","colab":{"base_uri":"https://localhost:8080/","height":363},"executionInfo":{"status":"ok","timestamp":1684549405583,"user_tz":-540,"elapsed":15,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"14dd44c0-6959-4ad8-a23f-93f7d183f823"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            단어        비율\n","813     tender  1.965811\n","26   attentive  1.965811\n","365      loved  2.099343\n","221  fantastic  2.099343\n","12     amazing  2.159967\n","472    perfect  2.217126\n","208  excellent  2.322486\n","32     awesome  2.504808\n","153  delicious  3.155395\n","268      great  4.062952"],"text/html":["\n","  <div id=\"df-11a5bca7-2e49-45e4-baef-958ae4885f09\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>단어</th>\n","      <th>비율</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>813</th>\n","      <td>tender</td>\n","      <td>1.965811</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>attentive</td>\n","      <td>1.965811</td>\n","    </tr>\n","    <tr>\n","      <th>365</th>\n","      <td>loved</td>\n","      <td>2.099343</td>\n","    </tr>\n","    <tr>\n","      <th>221</th>\n","      <td>fantastic</td>\n","      <td>2.099343</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>amazing</td>\n","      <td>2.159967</td>\n","    </tr>\n","    <tr>\n","      <th>472</th>\n","      <td>perfect</td>\n","      <td>2.217126</td>\n","    </tr>\n","    <tr>\n","      <th>208</th>\n","      <td>excellent</td>\n","      <td>2.322486</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>awesome</td>\n","      <td>2.504808</td>\n","    </tr>\n","    <tr>\n","      <th>153</th>\n","      <td>delicious</td>\n","      <td>3.155395</td>\n","    </tr>\n","    <tr>\n","      <th>268</th>\n","      <td>great</td>\n","      <td>4.062952</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-11a5bca7-2e49-45e4-baef-958ae4885f09')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-11a5bca7-2e49-45e4-baef-958ae4885f09 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-11a5bca7-2e49-45e4-baef-958ae4885f09');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","source":["###상대적으로 부정 문장에서 많이 나오는 단어"],"metadata":{"id":"3bUvFqcRexkx"}},{"cell_type":"code","source":["prob_df.sort_values('비율').head(10)"],"metadata":{"id":"cWl54LnGe1Bo","colab":{"base_uri":"https://localhost:8080/","height":363},"executionInfo":{"status":"ok","timestamp":1684549405583,"user_tz":-540,"elapsed":15,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"f1c923a4-efb5-4a27-cb46-b870cc1e2a0b"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           단어        비율\n","37        bad -2.688149\n","392   minutes -2.619156\n","939      wasn -2.465005\n","65      bland -2.377994\n","703      slow -2.177323\n","847      took -2.177323\n","546  probably -2.177323\n","179       don -1.972529\n","816  terrible -1.926009\n","607      rude -1.926009"],"text/html":["\n","  <div id=\"df-654c447f-0e41-415c-b7f7-b2fc6a962e1e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>단어</th>\n","      <th>비율</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>37</th>\n","      <td>bad</td>\n","      <td>-2.688149</td>\n","    </tr>\n","    <tr>\n","      <th>392</th>\n","      <td>minutes</td>\n","      <td>-2.619156</td>\n","    </tr>\n","    <tr>\n","      <th>939</th>\n","      <td>wasn</td>\n","      <td>-2.465005</td>\n","    </tr>\n","    <tr>\n","      <th>65</th>\n","      <td>bland</td>\n","      <td>-2.377994</td>\n","    </tr>\n","    <tr>\n","      <th>703</th>\n","      <td>slow</td>\n","      <td>-2.177323</td>\n","    </tr>\n","    <tr>\n","      <th>847</th>\n","      <td>took</td>\n","      <td>-2.177323</td>\n","    </tr>\n","    <tr>\n","      <th>546</th>\n","      <td>probably</td>\n","      <td>-2.177323</td>\n","    </tr>\n","    <tr>\n","      <th>179</th>\n","      <td>don</td>\n","      <td>-1.972529</td>\n","    </tr>\n","    <tr>\n","      <th>816</th>\n","      <td>terrible</td>\n","      <td>-1.926009</td>\n","    </tr>\n","    <tr>\n","      <th>607</th>\n","      <td>rude</td>\n","      <td>-1.926009</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-654c447f-0e41-415c-b7f7-b2fc6a962e1e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-654c447f-0e41-415c-b7f7-b2fc6a962e1e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-654c447f-0e41-415c-b7f7-b2fc6a962e1e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["##로지스틱 회귀분석\n","\n","###임포트"],"metadata":{"id":"vIUdKiZke1mG"}},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegressionCV"],"metadata":{"id":"PGE-sBsde4R_","executionInfo":{"status":"ok","timestamp":1684549405583,"user_tz":-540,"elapsed":14,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":13,"outputs":[]},{"cell_type":"markdown","source":["###엘라스틱넷으로 C는 0.001, 0.01, 0.1 세 가지, L1의 비율은 0, 0.5, 1 세 가지를 시도 총 9가지 조합을 시도하여 성능이 가장 좋은 조합을 찾음"],"metadata":{"id":"sMsOjr85e4zy"}},{"cell_type":"code","source":["model = LogisticRegressionCV(\n","    penalty='elasticnet', solver='saga', random_state=42,\n","    Cs=[0.001, 0.01, 0.1], l1_ratios=[0, 0.5, 1])"],"metadata":{"id":"kJjsLRj4e9DE","executionInfo":{"status":"ok","timestamp":1684549405583,"user_tz":-540,"elapsed":13,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":14,"outputs":[]},{"cell_type":"markdown","source":["###학습\n"],"metadata":{"id":"LBDRr34jfSJ7"}},{"cell_type":"code","source":["model.fit(x_train, y_train)"],"metadata":{"id":"0gDrMmROfUAP","colab":{"base_uri":"https://localhost:8080/","height":92},"executionInfo":{"status":"ok","timestamp":1684549406462,"user_tz":-540,"elapsed":892,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"43ff31e3-d0cc-434c-ee15-649dc02c7509"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegressionCV(Cs=[0.001, 0.01, 0.1], l1_ratios=[0, 0.5, 1],\n","                     penalty='elasticnet', random_state=42, solver='saga')"],"text/html":["<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegressionCV(Cs=[0.001, 0.01, 0.1], l1_ratios=[0, 0.5, 1],\n","                     penalty=&#x27;elasticnet&#x27;, random_state=42, solver=&#x27;saga&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegressionCV</label><div class=\"sk-toggleable__content\"><pre>LogisticRegressionCV(Cs=[0.001, 0.01, 0.1], l1_ratios=[0, 0.5, 1],\n","                     penalty=&#x27;elasticnet&#x27;, random_state=42, solver=&#x27;saga&#x27;)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["###가장 좋은 C\n"],"metadata":{"id":"auXgZ270fUmP"}},{"cell_type":"code","source":["model.C_"],"metadata":{"id":"tEvF42U1fWIG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1684549406463,"user_tz":-540,"elapsed":40,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"5abee330-0a7b-457f-8021-d816a6631364"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.1])"]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["###가장 좋은 L1의 비율"],"metadata":{"id":"vXCV29_EfWpq"}},{"cell_type":"code","source":["model.l1_ratio_"],"metadata":{"id":"suRXWrRKfYxv","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1684549406463,"user_tz":-540,"elapsed":35,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"13f31c0e-fc6a-4d7f-befc-b097b699efdf"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0])"]},"metadata":{},"execution_count":17}]},{"cell_type":"markdown","source":["###훈련 데이터에서 정확도\n"],"metadata":{"id":"R939dRjpfbNG"}},{"cell_type":"code","source":["model.score(x_train, y_train)"],"metadata":{"id":"rz_0oC-qfdjL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1684549406464,"user_tz":-540,"elapsed":34,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"4b601dea-9cb4-4cc9-f73e-c62f8f8e098e"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.86375"]},"metadata":{},"execution_count":18}]},{"cell_type":"markdown","source":["###테스트 데이터에서 정확도\n"],"metadata":{"id":"DWfzcVhefgHH"}},{"cell_type":"code","source":["model.score(x_test, y_test)\n"],"metadata":{"id":"11VG-Tu4fhie","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1684549406464,"user_tz":-540,"elapsed":31,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"7de19248-2280-4c93-e1ca-74e4ab4aa25c"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.71"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":[],"metadata":{"id":"uypHdD9Og5YO","executionInfo":{"status":"ok","timestamp":1684549406464,"user_tz":-540,"elapsed":28,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":19,"outputs":[]},{"cell_type":"markdown","source":["###단어별 가중치\n"],"metadata":{"id":"WZftpEIifilD"}},{"cell_type":"code","source":["word_coef = pd.DataFrame({\n","    '단어': cv.get_feature_names_out(),\n","    '가중치': model.coef_.flat\n","})"],"metadata":{"id":"wfA05J74fkVo","executionInfo":{"status":"ok","timestamp":1684549406465,"user_tz":-540,"elapsed":29,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":20,"outputs":[]},{"cell_type":"markdown","source":["###긍정 단어\n"],"metadata":{"id":"jk1ip5CGfoFM"}},{"cell_type":"code","source":["word_coef.sort_values('가중치').tail(10)"],"metadata":{"id":"JFS6AGLXfpg2","colab":{"base_uri":"https://localhost:8080/","height":363},"executionInfo":{"status":"ok","timestamp":1684549406465,"user_tz":-540,"elapsed":29,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"9ebb288c-77ed-4027-86c7-dc7f907de369"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            단어       가중치\n","208  excellent  0.335977\n","56        best  0.352288\n","32     awesome  0.416480\n","364       love  0.425192\n","250   friendly  0.443511\n","409       nice  0.494441\n","12     amazing  0.523192\n","153  delicious  0.720713\n","265       good  0.801402\n","268      great  1.215942"],"text/html":["\n","  <div id=\"df-1e109329-4ef5-4bf6-9256-1134a6397197\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>단어</th>\n","      <th>가중치</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>208</th>\n","      <td>excellent</td>\n","      <td>0.335977</td>\n","    </tr>\n","    <tr>\n","      <th>56</th>\n","      <td>best</td>\n","      <td>0.352288</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>awesome</td>\n","      <td>0.416480</td>\n","    </tr>\n","    <tr>\n","      <th>364</th>\n","      <td>love</td>\n","      <td>0.425192</td>\n","    </tr>\n","    <tr>\n","      <th>250</th>\n","      <td>friendly</td>\n","      <td>0.443511</td>\n","    </tr>\n","    <tr>\n","      <th>409</th>\n","      <td>nice</td>\n","      <td>0.494441</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>amazing</td>\n","      <td>0.523192</td>\n","    </tr>\n","    <tr>\n","      <th>153</th>\n","      <td>delicious</td>\n","      <td>0.720713</td>\n","    </tr>\n","    <tr>\n","      <th>265</th>\n","      <td>good</td>\n","      <td>0.801402</td>\n","    </tr>\n","    <tr>\n","      <th>268</th>\n","      <td>great</td>\n","      <td>1.215942</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1e109329-4ef5-4bf6-9256-1134a6397197')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1e109329-4ef5-4bf6-9256-1134a6397197 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1e109329-4ef5-4bf6-9256-1134a6397197');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","source":["###부정 단어\n"],"metadata":{"id":"Rijbd2z8dSn4"}},{"cell_type":"code","source":["word_coef.sort_values('가중치').head(10)"],"metadata":{"id":"dvXxnJmpfrxI","colab":{"base_uri":"https://localhost:8080/","height":363},"executionInfo":{"status":"ok","timestamp":1684549406466,"user_tz":-540,"elapsed":29,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"d63d39cd-6c63-444f-d345-1a4927910a5d"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           단어       가중치\n","179       don -0.507271\n","37        bad -0.456790\n","392   minutes -0.393614\n","939      wasn -0.357123\n","65      bland -0.335242\n","703      slow -0.298549\n","546  probably -0.295877\n","977     worst -0.291399\n","928    waited -0.261590\n","57     better -0.251174"],"text/html":["\n","  <div id=\"df-25772636-c7d8-4c89-8ecf-543ce618eaae\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>단어</th>\n","      <th>가중치</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>179</th>\n","      <td>don</td>\n","      <td>-0.507271</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>bad</td>\n","      <td>-0.456790</td>\n","    </tr>\n","    <tr>\n","      <th>392</th>\n","      <td>minutes</td>\n","      <td>-0.393614</td>\n","    </tr>\n","    <tr>\n","      <th>939</th>\n","      <td>wasn</td>\n","      <td>-0.357123</td>\n","    </tr>\n","    <tr>\n","      <th>65</th>\n","      <td>bland</td>\n","      <td>-0.335242</td>\n","    </tr>\n","    <tr>\n","      <th>703</th>\n","      <td>slow</td>\n","      <td>-0.298549</td>\n","    </tr>\n","    <tr>\n","      <th>546</th>\n","      <td>probably</td>\n","      <td>-0.295877</td>\n","    </tr>\n","    <tr>\n","      <th>977</th>\n","      <td>worst</td>\n","      <td>-0.291399</td>\n","    </tr>\n","    <tr>\n","      <th>928</th>\n","      <td>waited</td>\n","      <td>-0.261590</td>\n","    </tr>\n","    <tr>\n","      <th>57</th>\n","      <td>better</td>\n","      <td>-0.251174</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-25772636-c7d8-4c89-8ecf-543ce618eaae')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-25772636-c7d8-4c89-8ecf-543ce618eaae button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-25772636-c7d8-4c89-8ecf-543ce618eaae');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","source":["###예측\n"],"metadata":{"id":"dWnJW5HtftAb"}},{"cell_type":"code","source":["y_pred = model.predict(x_test)"],"metadata":{"id":"jzdF3uPhfvv8","executionInfo":{"status":"ok","timestamp":1684549406466,"user_tz":-540,"elapsed":28,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":23,"outputs":[]},{"cell_type":"markdown","source":["###확률로 예측"],"metadata":{"id":"dg_GPTgnfxE6"}},{"cell_type":"code","source":["probs = model.predict_proba(x_test)"],"metadata":{"id":"CUmnro8-fyZu","executionInfo":{"status":"ok","timestamp":1684549406467,"user_tz":-540,"elapsed":29,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":24,"outputs":[]},{"cell_type":"markdown","source":["###긍정 확률만\n"],"metadata":{"id":"dYTRs_rmfzqt"}},{"cell_type":"code","source":["prob = probs[:, 1]"],"metadata":{"id":"zcEzRMxLf1yG","executionInfo":{"status":"ok","timestamp":1684549406467,"user_tz":-540,"elapsed":29,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":25,"outputs":[]},{"cell_type":"markdown","source":["###문턱값에 따라 다르게 예측\n"],"metadata":{"id":"crwMcKa3f2fq"}},{"cell_type":"code","source":["threshold = 0.5 # 문턱값\n","y_pred = np.where(prob > threshold, 1, 0)"],"metadata":{"id":"aSEduWptf4eG","executionInfo":{"status":"ok","timestamp":1684549406468,"user_tz":-540,"elapsed":29,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":26,"outputs":[]},{"cell_type":"markdown","source":["#혼동 행렬\n","##혼동행렬 만들기"],"metadata":{"id":"z9gBmikt2aCB"}},{"cell_type":"code","source":["from sklearn.metrics import confusion_matrix\n","confusion_matrix(y_test, y_pred)"],"metadata":{"id":"Jhiz6anO2OyC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1684549406468,"user_tz":-540,"elapsed":29,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"9c2d1708-e31e-4e64-f60d-909c5eeeb276"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[83, 13],\n","       [45, 59]])"]},"metadata":{},"execution_count":27}]},{"cell_type":"markdown","source":["##지표\n","###임포트"],"metadata":{"id":"Clr6S9TK2dat"}},{"cell_type":"code","source":["from sklearn.metrics import *"],"metadata":{"id":"jOJyBxj-2fEP","executionInfo":{"status":"ok","timestamp":1684549406469,"user_tz":-540,"elapsed":26,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":28,"outputs":[]},{"cell_type":"markdown","source":["###정확도"],"metadata":{"id":"u-axets12gzT"}},{"cell_type":"code","source":["accuracy_score(y_test, y_pred)"],"metadata":{"id":"NhGZ46lr2iZX","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1684549406469,"user_tz":-540,"elapsed":26,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"0ab4abff-e34b-4c1b-b87d-791170dd49bc"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.71"]},"metadata":{},"execution_count":29}]},{"cell_type":"markdown","source":["###정밀도"],"metadata":{"id":"R4aR3D_52jj6"}},{"cell_type":"code","source":["precision_score(y_test, y_pred)"],"metadata":{"id":"T74mOKSy2k-a","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1684549406470,"user_tz":-540,"elapsed":24,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"168d2145-df09-4b91-f5f9-3aff6f5d2590"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8194444444444444"]},"metadata":{},"execution_count":30}]},{"cell_type":"markdown","source":["###재현도\n"],"metadata":{"id":"vEHRF01C2mFh"}},{"cell_type":"code","source":["recall_score(y_test, y_pred)"],"metadata":{"id":"Lhfb5GC52nSG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1684549406471,"user_tz":-540,"elapsed":22,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"1f44a568-7187-45b2-ff14-6dfb672af82f"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.5673076923076923"]},"metadata":{},"execution_count":31}]},{"cell_type":"markdown","source":["##ROC 곡선\n","###임포트"],"metadata":{"id":"LipVNIu22ojl"}},{"cell_type":"code","source":["from sklearn.metrics import roc_auc_score, roc_curve\n","import matplotlib.pyplot as plt"],"metadata":{"id":"btL9jUG72qyI","executionInfo":{"status":"ok","timestamp":1684549407109,"user_tz":-540,"elapsed":658,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":32,"outputs":[]},{"cell_type":"markdown","source":["###시각화"],"metadata":{"id":"gV6W7f5x2sIR"}},{"cell_type":"code","source":["fpr, tpr, threshold = roc_curve(y_test, prob)\n","plt.plot(fpr, tpr)"],"metadata":{"id":"DAGLHlLQ2tRg","colab":{"base_uri":"https://localhost:8080/","height":448},"executionInfo":{"status":"ok","timestamp":1684549407110,"user_tz":-540,"elapsed":11,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"756cd0d6-05fc-4a6a-92a0-51b4bd1a25f1"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7f02115663b0>]"]},"metadata":{},"execution_count":33},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["###AUC"],"metadata":{"id":"MkvHxnmy2uf-"}},{"cell_type":"code","source":["roc_auc_score(y_test, prob)"],"metadata":{"id":"yYhwwjo02vY-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1684549407110,"user_tz":-540,"elapsed":9,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"646505b8-f7c2-43a9-d734-4fb6b803b38a"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8291766826923077"]},"metadata":{},"execution_count":34}]},{"cell_type":"markdown","source":["#pytorch"],"metadata":{"id":"uMIwuiS4l7fv"}},{"cell_type":"code","source":["pip install torch"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UGNn-gAUmHwq","executionInfo":{"status":"ok","timestamp":1684549412983,"user_tz":-540,"elapsed":5879,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"b253f566-9563-4ee6-f70b-5a07b8f13963"},"execution_count":35,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: torch in /usr/local/lib/python3.10/dist-packages (2.0.1+cu118)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from torch) (3.12.0)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.10/dist-packages (from torch) (4.5.0)\n","Requirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from torch) (1.11.1)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch) (3.1)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch) (3.1.2)\n","Requirement already satisfied: triton==2.0.0 in /usr/local/lib/python3.10/dist-packages (from torch) (2.0.0)\n","Requirement already satisfied: cmake in /usr/local/lib/python3.10/dist-packages (from triton==2.0.0->torch) (3.25.2)\n","Requirement already satisfied: lit in /usr/local/lib/python3.10/dist-packages (from triton==2.0.0->torch) (16.0.5)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->torch) (2.1.2)\n","Requirement already satisfied: mpmath>=0.19 in /usr/local/lib/python3.10/dist-packages (from sympy->torch) (1.3.0)\n"]}]},{"cell_type":"markdown","source":["임포트"],"metadata":{"id":"PKt5FoXhmGgm"}},{"cell_type":"code","source":["import torch\n","from torch import nn, optim"],"metadata":{"id":"URGjINEMmJZA","executionInfo":{"status":"ok","timestamp":1684549416715,"user_tz":-540,"elapsed":3737,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":36,"outputs":[]},{"cell_type":"markdown","source":["데이터셋 변환"],"metadata":{"id":"C4NwdR8smMCi"}},{"cell_type":"code","source":["train_dataset = torch.utils.data.TensorDataset(\n","    torch.Tensor(x_train.A),\n","    torch.unsqueeze(torch.Tensor(y_train.values), dim=1)\n",")"],"metadata":{"id":"uK7jM0BFmPHF","executionInfo":{"status":"ok","timestamp":1684549416716,"user_tz":-540,"elapsed":6,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":37,"outputs":[]},{"cell_type":"markdown","source":["데이터 로더"],"metadata":{"id":"jQ61IH_KmcsG"}},{"cell_type":"code","source":["train_loader = torch.utils.data.DataLoader(\n","    train_dataset, batch_size=32, shuffle=True)"],"metadata":{"id":"3bu7iMFNmevM","executionInfo":{"status":"ok","timestamp":1684549416716,"user_tz":-540,"elapsed":5,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":38,"outputs":[]},{"cell_type":"markdown","source":["모델 정의"],"metadata":{"id":"oFYzTHIImiPK"}},{"cell_type":"code","source":["input_size = cv.max_features\n","num_classes = 1\n","model = nn.Sequential(\n","    nn.Linear(input_size, num_classes),\n","    nn.Sigmoid()\n",")"],"metadata":{"id":"idfAOVo3mjY0","executionInfo":{"status":"ok","timestamp":1684549416717,"user_tz":-540,"elapsed":6,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":39,"outputs":[]},{"cell_type":"markdown","source":["훈련 설정"],"metadata":{"id":"bM_bRUWcmlQ2"}},{"cell_type":"code","source":["criterion = nn.BCELoss()\n","optimizer = optim.SGD(model.parameters(), lr=1.0)"],"metadata":{"id":"cWv3I19ymnA0","executionInfo":{"status":"ok","timestamp":1684549416717,"user_tz":-540,"elapsed":6,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":40,"outputs":[]},{"cell_type":"markdown","source":["훈련"],"metadata":{"id":"0mNRUK_lmpbo"}},{"cell_type":"code","source":["losses = []\n","epochs = 10\n","for epoch in range(epochs):\n","    for i, data in enumerate(train_loader):  # 배치의 데이터와 레이블에 대해 반복\n","        inputs, labels = data\n","        optimizer.zero_grad()    # 경사를 0으로 초기화\n","        outputs = model(inputs)  # 모델에 데이터를 입력으로 전달하고, 출력을 계산\n","        #outputs = torch.squeeze(outputs)\n","        loss = criterion(outputs, labels)  # 출력값과 레이블 값을 사용하여 손실 계산\n","        loss.backward()   # 손실값을 미분하여 모델의 파라미터의 기울기 계산\n","        optimizer.step()  # 옵티마이저를 사용하여 모델의 가중치와 편향 값을 업데이트\n","        losses.append(loss.item())  # 손실값 누적"],"metadata":{"id":"J_VRVxd4mqyP","executionInfo":{"status":"ok","timestamp":1684549417668,"user_tz":-540,"elapsed":957,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":41,"outputs":[]},{"cell_type":"markdown","source":["손실 감소의 시각화"],"metadata":{"id":"8WYfEtrUmshI"}},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","plt.plot(losses);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"id":"NbBd-nxJmtnV","executionInfo":{"status":"ok","timestamp":1684549417669,"user_tz":-540,"elapsed":20,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"2019acf4-cd47-4f50-ba0a-a590819cd5c7"},"execution_count":42,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["예측"],"metadata":{"id":"m3-29aHTmvMO"}},{"cell_type":"code","source":["x_test_pt = torch.Tensor(x_test.A)\n","prob = model(x_test_pt)\n","prob = torch.squeeze(prob)"],"metadata":{"id":"X5K1urXZmwnu","executionInfo":{"status":"ok","timestamp":1684549417670,"user_tz":-540,"elapsed":17,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":43,"outputs":[]},{"cell_type":"markdown","source":["평가"],"metadata":{"id":"lwxJ595hmyYL"}},{"cell_type":"code","source":["!pip install torchmetrics"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mmM2scYlv-GT","executionInfo":{"status":"ok","timestamp":1684549424656,"user_tz":-540,"elapsed":7002,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"1194d36a-ac40-4403-9a4f-bbfe49f31fc2"},"execution_count":44,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting torchmetrics\n","  Downloading torchmetrics-0.11.4-py3-none-any.whl (519 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m519.2/519.2 kB\u001b[0m \u001b[31m35.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: numpy>=1.17.2 in /usr/local/lib/python3.10/dist-packages (from torchmetrics) (1.22.4)\n","Requirement already satisfied: torch>=1.8.1 in /usr/local/lib/python3.10/dist-packages (from torchmetrics) (2.0.1+cu118)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from torchmetrics) (23.1)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from torch>=1.8.1->torchmetrics) (3.12.0)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.10/dist-packages (from torch>=1.8.1->torchmetrics) (4.5.0)\n","Requirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from torch>=1.8.1->torchmetrics) (1.11.1)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch>=1.8.1->torchmetrics) (3.1)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch>=1.8.1->torchmetrics) (3.1.2)\n","Requirement already satisfied: triton==2.0.0 in /usr/local/lib/python3.10/dist-packages (from torch>=1.8.1->torchmetrics) (2.0.0)\n","Requirement already satisfied: cmake in /usr/local/lib/python3.10/dist-packages (from triton==2.0.0->torch>=1.8.1->torchmetrics) (3.25.2)\n","Requirement already satisfied: lit in /usr/local/lib/python3.10/dist-packages (from triton==2.0.0->torch>=1.8.1->torchmetrics) (16.0.5)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->torch>=1.8.1->torchmetrics) (2.1.2)\n","Requirement already satisfied: mpmath>=0.19 in /usr/local/lib/python3.10/dist-packages (from sympy->torch>=1.8.1->torchmetrics) (1.3.0)\n","Installing collected packages: torchmetrics\n","Successfully installed torchmetrics-0.11.4\n"]}]},{"cell_type":"code","source":["from torchmetrics.functional import accuracy\n","y_test_pt = torch.from_numpy(y_test.values).float()\n","accuracy(prob, y_test_pt, task='binary')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XIfUyp0BmzOe","executionInfo":{"status":"ok","timestamp":1684549424657,"user_tz":-540,"elapsed":12,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"84e7a192-f54c-4494-8599-479d9c87b4e7"},"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor(0.7250)"]},"metadata":{},"execution_count":45}]},{"cell_type":"markdown","source":["가중치"],"metadata":{"id":"tVWt1Dpym0xc"}},{"cell_type":"code","source":["weight, bias = list(model.parameters())\n","word_weight = pd.DataFrame({\n","    '단어': cv.get_feature_names_out(),\n","    '가중치': weight.detach().numpy().flat\n","})"],"metadata":{"id":"lLtDqLqhm1ke","executionInfo":{"status":"ok","timestamp":1684549424657,"user_tz":-540,"elapsed":8,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":46,"outputs":[]},{"cell_type":"code","source":["word_weight"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"WY_-c0cW0xej","executionInfo":{"status":"ok","timestamp":1684549424657,"user_tz":-540,"elapsed":8,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"60947cce-f6d6-4698-f2b1-b3663d54d0f7"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        단어       가중치\n","0       10 -0.290476\n","1      100 -0.069623\n","2       12 -0.073441\n","3       20 -0.210985\n","4       30 -0.343238\n","..     ...       ...\n","995  yucky -0.144040\n","996  yukon -0.014376\n","997    yum -0.225175\n","998  yummy  0.272441\n","999   zero -0.472612\n","\n","[1000 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-ad2bbd21-a1fd-4568-9a1e-50b04c90dc85\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>단어</th>\n","      <th>가중치</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10</td>\n","      <td>-0.290476</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>100</td>\n","      <td>-0.069623</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>12</td>\n","      <td>-0.073441</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>20</td>\n","      <td>-0.210985</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>30</td>\n","      <td>-0.343238</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>995</th>\n","      <td>yucky</td>\n","      <td>-0.144040</td>\n","    </tr>\n","    <tr>\n","      <th>996</th>\n","      <td>yukon</td>\n","      <td>-0.014376</td>\n","    </tr>\n","    <tr>\n","      <th>997</th>\n","      <td>yum</td>\n","      <td>-0.225175</td>\n","    </tr>\n","    <tr>\n","      <th>998</th>\n","      <td>yummy</td>\n","      <td>0.272441</td>\n","    </tr>\n","    <tr>\n","      <th>999</th>\n","      <td>zero</td>\n","      <td>-0.472612</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1000 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ad2bbd21-a1fd-4568-9a1e-50b04c90dc85')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ad2bbd21-a1fd-4568-9a1e-50b04c90dc85 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ad2bbd21-a1fd-4568-9a1e-50b04c90dc85');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":47}]},{"cell_type":"markdown","source":["다층신경망"],"metadata":{"id":"gS8tWplYm3SY"}},{"cell_type":"code","source":["hidden_size = 32\n","model = nn.Sequential(\n","    nn.Linear(input_size, hidden_size),\n","    nn.ReLU(),\n","    nn.Linear(hidden_size, num_classes),\n","    nn.Sigmoid()\n",")"],"metadata":{"id":"w22khmQ2m4Hw","executionInfo":{"status":"ok","timestamp":1684549424658,"user_tz":-540,"elapsed":8,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":48,"outputs":[]},{"cell_type":"markdown","source":["# 다항분류"],"metadata":{"id":"sIQkVLROhMxS"}},{"cell_type":"code","source":["from sklearn.datasets import fetch_20newsgroups\n","news = fetch_20newsgroups()\n","news['target_names']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MGWF1KfWhLmG","executionInfo":{"status":"ok","timestamp":1684549443177,"user_tz":-540,"elapsed":18527,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"d6ffcdda-b2bb-4800-8842-274349819e1a"},"execution_count":49,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['alt.atheism',\n"," 'comp.graphics',\n"," 'comp.os.ms-windows.misc',\n"," 'comp.sys.ibm.pc.hardware',\n"," 'comp.sys.mac.hardware',\n"," 'comp.windows.x',\n"," 'misc.forsale',\n"," 'rec.autos',\n"," 'rec.motorcycles',\n"," 'rec.sport.baseball',\n"," 'rec.sport.hockey',\n"," 'sci.crypt',\n"," 'sci.electronics',\n"," 'sci.med',\n"," 'sci.space',\n"," 'soc.religion.christian',\n"," 'talk.politics.guns',\n"," 'talk.politics.mideast',\n"," 'talk.politics.misc',\n"," 'talk.religion.misc']"]},"metadata":{},"execution_count":49}]},{"cell_type":"markdown","source":["###문서단어행렬"],"metadata":{"id":"6zgil3inhaDO"}},{"cell_type":"code","source":["from sklearn.feature_extraction.text import CountVectorizer\n","cv = CountVectorizer(min_df=0.01, max_df=0.5, stop_words='english') #실수로 쓰면 비율\n","dtm = cv.fit_transform(news['data'])"],"metadata":{"id":"0eZwHMSmhXSM","executionInfo":{"status":"ok","timestamp":1684549446426,"user_tz":-540,"elapsed":3262,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":50,"outputs":[]},{"cell_type":"code","source":["dtm.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wqM9Mr3HherH","executionInfo":{"status":"ok","timestamp":1684549446426,"user_tz":-540,"elapsed":11,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"bbf88e42-32c7-4511-a1ca-9f5ab4caf8a0"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(11314, 1916)"]},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["for word in cv.get_feature_names_out():\n","  print(word, end=' ')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MKAFXrE4kVcz","executionInfo":{"status":"ok","timestamp":1684549447367,"user_tz":-540,"elapsed":948,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"96413a73-77ed-4041-c161-3aa8ee4640fe"},"execution_count":52,"outputs":[{"output_type":"stream","name":"stdout","text":["00 000 01 02 03 04 05 07 08 10 100 1000 11 12 13 14 15 150 16 17 18 19 1988 1990 1991 1992 1993 1993apr14 1993apr15 1993apr16 1993apr19 1993apr20 1993apr5 1993apr6 1st 20 200 2000 21 22 23 24 241 25 250 256 26 27 28 29 2nd 30 300 31 32 33 34 35 36 37 38 386 39 3d 3rd 40 400 408 41 42 43 44 45 46 47 48 486 49 50 500 51 52 53 54 55 56 57 58 59 60 600 61 64 65 66 70 71 72 75 80 800 81 85 86 88 89 90 91 92 93 95 9760 99 __ ___ ability able absolute absolutely ac academic accept acceptable accepted access according account accurate acs act action actions active activities activity acts actual actually ad adams add added addition additional address administration admit advance advanced advantage advice afraid age agencies agency ago agree ahead ai air al alan algorithm alive allen allow allowed allows alt alternative amendment america american americans analysis andrew andy angeles announcement anonymous answer answers anti anybody anymore apart apparently appear appears apple application applications applied apply appreciate appreciated approach appropriate apr april arab archive area areas aren argue argument arguments arizona armed armenia armenian arms army art article articles aside ask asked asking associated association assume assuming atheist atheists athena athos atlanta att attack attacks attempt attention attitude au austin australia author authority auto automatic available average avoid aware away background bad ball bank banks base baseball based basic basically basis batf bbs bc bear beat began begin beginning behavior belief beliefs believe believed bell benefit berkeley best bet better bible biblical big bigger bike billion bit bitnet bits black blame block blood blue bmw bnr board bob body book books born boston bother bought boulder box boy brad brain brand break brian bring british broken brother brought brown btw bu budget buffalo build building built bunch bus bush business buy buying ca cable california called calling calls caltech cambridge came canada capable capital car card cards care careful carnegie carried carry carrying cars case cases caught cause caused causes cb cc cco cd center central centre century certain certainly ch chance change changed changes changing character charge charles cheap cheaper check checked cheers chicago child children chip chips choice choose chris christ christian christianity christians church circuit cis citizens city civil claim claimed claims class clear clearly cleveland clinton clipper clock close closed closer club cmu code cold college color colorado colors columbia com come comes coming command comment comments commercial committed common communication communications community comp companies company compare compared comparison compatible complete completely complex computer computers computing concept concerned concerning conclusion condition conditions conference congress connect connected connection consider considered considering constitution contact contains content context continue contrary control controller convert cool copies copy corp corporation correct correctly cost costs couldn count countries country couple course court cover coverage covered cpu craig create created creation crime criminal criminals cross crypto cs csd cso cup curious current currently cut cwru daily dale damage damn dan dangerous daniel data date dave david day days dc dead deal dealer death dec decent decide decided decision deep defense define defined definitely definition deleted department depending depends dept des described description design designed despite details determine detroit develop developed development device devices did didn die died diego difference differences different difficult digex digital direct direction directly directory disagree disclaimer discovered discuss discussed discussion disease disk disks display distribution division doctor document documentation dod does doesn doing dollars domain don door dos double doubt doug douglas dr draw drive driven driver drivers drives driving drop drug drugs du earlier early earth easier easily east easy eat ecn economic ed edge education edward ee effect effective effects effort electrical electronic electronics email employer encryption end enforcement eng engine engineer engineering england english enjoy entire entirely environment equal equipment equivalent eric error errors escape escrow especially essentially established et eternal europe european event events eventually everybody evidence evil ex exact exactly example examples excellent excuse exist existence existing exists expansion expect expected expensive experience expires explain express expressed external extra extremely eye eyes face fact factor facts fail failed fair fairly faith fall false familiar family fan fans faq far fast faster father fault fax fbi fear features federal feel feeling feet felt fi field fight fighting figure file files final finally finding fine firearms fit fix fixed flame flames flight floppy florida folks follow followed following follows food force forces foreign forget form format forward foundation francisco frank fred free freedom freenet frequently friend friends ftp fully fun function functions funny future game games gary gas gatech gateway gave general generally generation george georgia german germany gets getting given gives giving glad gmt goal goals god goes going gone good gordon got gotten gov government governments grant graphics great greater greatly greek green greg ground group groups guess guest guide gun guns guy guys half hall hand handle handling hands happen happened happening happens happy hard hardly hardware harvard hasn hate haven having hd head health hear heard heart heaven heavy held hell hello help helpful helps hewlett hey hi high higher highly hill historical history hit hockey hold holy home honest hope hopefully host hot hour hours house houston hp huge human humans hurt ibm ice id ide idea ideas ignore ii iii il illegal illinois image images imagine imho immediately important impossible include included includes including increase independent indiana individual individuals industry info information innocent input ins inside install installed instance instead institute insurance intelligence intended interested interesting interface internal international internet interpretation involved islam isn israel israeli issue issues items jack james jason jeff jesus jewish jews jim job joe john johnson join jon jose joseph jr judge just justice keeping keith ken kent kept kevin key keyboard keys keywords kids kill killed killing kind king knew know knowing knowledge known knows koresh la lab laboratory lack land language large larger larry late later latest launch law lawrence laws lcs lead leaders leading leads league learn learned leave leaving led lee left legal legitimate let letter level levels library lies life light like likely limit limited line link list listen lists little live lived lives living ll load local location logic long longer look looked looking looks lord los lose loss lost lot lots louis love low lower luck ma mac machine machines macintosh magazine magnus mail mailing main maintain major majority make makes making man management manager manner manual marc march mark market mass material math matter matthew max maybe mb md mean meaning means meant measure media medical medicine meet mellon member members memory men mention mentioned merely message messages method methods mhz mi michael michigan microsoft middle mike mil miles military million millions mind minor minute minutes misc missed missing mistake mit mode model models modem modern moment mon money monitor month months montreal moon moral morality morning mot mother motherboard motif motorcycle motorola mountain mouse moved moving mr ms multi multiple murder music muslim na names nasa nation national natural nature navy near nearly necessarily necessary need needed needs net netcom network new news newsgroup newsgroups newsreader nhl nice night nj nl nntp noise non normal normally north northern note noted notes notice noticed nsa nt number numbers ny nyx object objective obtain obvious obviously occur offer offers office official oh ohio oil ok okay old older ones online ontario open operating operation operations opinion opinions opposed option options orbit order org organizations original originally originator os output outside owner owners oz pa package packard page pages paid pain paper park particular particularly parts party pasadena pass passed past pat path patrick paul pay paying pc peace people perfect perfectly performance period person personal personally peter pgp phil phone physical physics pick picture piece pin pitt pittsburgh pl8 place placed places plain plan play played player players playing playoffs plug plus po point pointed points police policy political politics poor popular population port position positive possibility possible possibly post posted poster posting postings posts potential power powerful practice pre prefer present presented president press pressure pretty prevent previous previously price prices print printer prism privacy private pro probably problem problems process produce produced product products program programming programs project proof proper properly property proposal proposed protect protection prove provide provided provides providing ps pub public published pull purchase purdue purpose purposes putting quality question questions quick quickly quite quote quoted race radio raised ram ran random range rate rates ray reach read readers reading ready real reality realize really reason reasonable reasons rec recall receive received recent recently recognize recommend record red reduce refer reference references regard regarding regardless regards regular related relatively release released relevant religion religious remain remember remote remove removed replace replaced replies reply report reported reports request require required requires research reserve resolution resources respect respond response responses responsibility responsible rest result results return review rich richard ride riding right rights risk road roads rob robert rochester rocket roger role rom ron room rose round rule rules run running runs russian rutgers ryan safe safety said sale sample san save saw say saying says scale scheme school sci science sciences scientific scott screen scsi se sea search season seattle second secret section secure security seeing seen self sell selling send sending sense sent separate serial series seriously serve server service services set setting setup sex sexual sgi shall share shipping short shot shouldn showed showing shown shows sick sign signal significant silver similar simple simply sin single site sites situation size slightly slow small smaller smith social society software sold soldiers solid solution somebody somewhat son soon sorry sort soul sound sounds source sources south southern soviet sp space speak speaking special specific specifically speed spend spent sport spot st staff stand standard standards stanford stanley star start started starting starts state stated statement statements states station statistics stats status stay std step stephen steve steven stick stop stopped store story straight strange street strong structure student studies study stuff stupid style success sufficient suggest suggested suggestions summary summer sun sunday super supply support supported supports suppose supposed sure surely surface surprised surrender suspect switch sys systems table taken takes taking talk talking tape tax team teams tech technical technology ted tek tel telephone tell telling tells tend term terms test texas text thank thanks theory thing things think thinking thinks thomas thought thoughts thousands thread throw tim time times tin title tm today told tom tony took tools topic toronto total totally town track trade tradition traffic training transfer treatment trial tried trouble true truly trust truth try trying tu turkish turks turn turned turns tv twice tx type types typical ucs uh uiuc uk umd unable understand understanding unfortunately uni unit united univ universe university unix unless update upgrade urbana usa use used useful usenet user users uses using usual usually utexas uucp uunet uxa v1 va valid value values van vancouver various vax ve vehicle version versions vga vice video view views virginia vms vnews voice volume vote vs wa waco wait waiting wall want wanted wants war warning washington wasn waste watch watching water way wayne ways weapons week weeks weight welcome went weren west western white wide wife william willing win window windows wings winning wish woman women won wonder wondering word words work worked working works world worry worse worst worth wouldn write writing written wrong wrote yeah year years yes yesterday york young zero "]}]},{"cell_type":"markdown","source":["x와 y 지정"],"metadata":{"id":"TSz2hP16hhgf"}},{"cell_type":"code","source":["x = dtm\n","y = news['target']"],"metadata":{"id":"-IABGDm-hiwT","executionInfo":{"status":"ok","timestamp":1684549447367,"user_tz":-540,"elapsed":3,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":53,"outputs":[]},{"cell_type":"markdown","source":["분할"],"metadata":{"id":"_xySwr7PhmsP"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","x_train, x_test, y_train, y_test = train_test_split(\n","    x, y, test_size=0.2, random_state=42)"],"metadata":{"id":"Dab-6DDOhnrm","executionInfo":{"status":"ok","timestamp":1684549447368,"user_tz":-540,"elapsed":4,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":54,"outputs":[]},{"cell_type":"markdown","source":["###Logistic Regression"],"metadata":{"id":"jNOXBvD9hoho"}},{"cell_type":"markdown","source":["사이킷런의 로지스틱 회귀분석은 OvR을 지원"],"metadata":{"id":"Oaal0YVhhs37"}},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","\n","model = LogisticRegression(multi_class='ovr', max_iter=200)\n","model.fit(x_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"3NFirAeJhteK","executionInfo":{"status":"ok","timestamp":1684549453768,"user_tz":-540,"elapsed":6404,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"843ec424-a5f5-4ce5-d77b-45882ff6c832"},"execution_count":55,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression(max_iter=200, multi_class='ovr')"],"text/html":["<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(max_iter=200, multi_class=&#x27;ovr&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression(max_iter=200, multi_class=&#x27;ovr&#x27;)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":55}]},{"cell_type":"markdown","source":["multi_class=’ovr’로 설정(현재 기본값이 OvR이므로 생략해도 무방)"],"metadata":{"id":"d4Qrw6dthvVr"}},{"cell_type":"code","source":["prob = model.predict_proba(x_test)\n","prob[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nEQiyYyhhyrz","executionInfo":{"status":"ok","timestamp":1684549453769,"user_tz":-540,"elapsed":21,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"8a771172-9311-4c89-92c7-94b0a5581c83"},"execution_count":56,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([2.07017005e-01, 4.98751930e-04, 1.51219400e-01, 2.37745485e-01,\n","       5.87018084e-02, 5.38342543e-03, 2.00512987e-03, 2.88777891e-03,\n","       6.22236290e-03, 2.05121049e-03, 3.60588852e-03, 4.32760242e-04,\n","       5.88720766e-02, 1.48880441e-03, 1.95588558e-03, 9.34083577e-05,\n","       3.85251706e-02, 2.82410834e-04, 1.56427040e-03, 2.19446966e-01])"]},"metadata":{},"execution_count":56}]},{"cell_type":"markdown","source":["확률이 가장 높은 클래스 보기"],"metadata":{"id":"GRsAtWJ5h1gs"}},{"cell_type":"code","source":["import numpy as np\n","np.argmax(prob, axis=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"thzXH36dh3pm","executionInfo":{"status":"ok","timestamp":1684549453769,"user_tz":-540,"elapsed":16,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"9d1c3c25-d251-45dd-a364-3515787b76de"},"execution_count":57,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 3,  2,  6, ..., 14, 16, 11])"]},"metadata":{},"execution_count":57}]},{"cell_type":"markdown","source":["확률 최대값 보기"],"metadata":{"id":"u_ZmRIO6h5rt"}},{"cell_type":"code","source":["np.max(prob, axis=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5SpObHMeh7qr","executionInfo":{"status":"ok","timestamp":1684549453770,"user_tz":-540,"elapsed":14,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"9faeea03-2f48-4ef9-acc4-ec90c79b922f"},"execution_count":58,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.23774549, 0.95134815, 0.86916028, ..., 0.91493404, 0.83797799,\n","       0.9179346 ])"]},"metadata":{},"execution_count":58}]},{"cell_type":"markdown","source":["정확도 평가"],"metadata":{"id":"bwXLboUDiAZM"}},{"cell_type":"code","source":["model.score(x_test, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RuPE4bgBiCC3","executionInfo":{"status":"ok","timestamp":1684549453770,"user_tz":-540,"elapsed":12,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"db0f09c8-3eaf-4b16-82c0-281a681cf689"},"execution_count":59,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8020326999558108"]},"metadata":{},"execution_count":59}]},{"cell_type":"markdown","source":["가중치 표 만들기"],"metadata":{"id":"vny2hKlUiEVF"}},{"cell_type":"code","source":["import pandas as pd\n","wd = pd.DataFrame(model.coef_.T, \n","                  index=cv.get_feature_names_out(),\n","                  columns=news['target_names'])"],"metadata":{"id":"-kNabXBmiGK_","executionInfo":{"status":"ok","timestamp":1684549453771,"user_tz":-540,"elapsed":10,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":60,"outputs":[]},{"cell_type":"markdown","source":["자동차 게시판의 가중치가 가장 높은 단어들"],"metadata":{"id":"02rVguWaiIBb"}},{"cell_type":"code","source":["wd['rec.autos'].sort_values().tail(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"plWE0_eUiJyC","executionInfo":{"status":"ok","timestamp":1684549453771,"user_tz":-540,"elapsed":10,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"7bcdfd38-8e14-43ae-b13e-4977b476ede1"},"execution_count":61,"outputs":[{"output_type":"execute_result","data":{"text/plain":["models     1.103112\n","early      1.103447\n","89         1.117528\n","engine     1.170994\n","owners     1.263317\n","dealer     1.273244\n","auto       1.439482\n","warning    1.603697\n","cars       1.895346\n","car        2.098276\n","Name: rec.autos, dtype: float64"]},"metadata":{},"execution_count":61}]},{"cell_type":"markdown","source":["###나이브 베이즈"],"metadata":{"id":"C-mGc3o9iKhe"}},{"cell_type":"code","source":["from sklearn.naive_bayes import BernoulliNB\n","model = BernoulliNB()\n","model.fit(x_train, y_train)\n","model.score(x_test, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FQcDhIe7iSQa","executionInfo":{"status":"ok","timestamp":1684549454474,"user_tz":-540,"elapsed":711,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"621993bf-94cc-4544-add7-b310d9d06275"},"execution_count":62,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7061422889969068"]},"metadata":{},"execution_count":62}]},{"cell_type":"markdown","source":["###텐서플로우"],"metadata":{"id":"RjkCPsaHiV3g"}},{"cell_type":"code","source":["!pip3 install tensorflow"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XElM_gFeid8W","executionInfo":{"status":"ok","timestamp":1684549462244,"user_tz":-540,"elapsed":7772,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"254f3234-85e6-468f-dcaf-eb036cd57547"},"execution_count":63,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: tensorflow in /usr/local/lib/python3.10/dist-packages (2.12.0)\n","Requirement already satisfied: absl-py>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (1.4.0)\n","Requirement already satisfied: astunparse>=1.6.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (1.6.3)\n","Requirement already satisfied: flatbuffers>=2.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (23.3.3)\n","Requirement already satisfied: gast<=0.4.0,>=0.2.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (0.4.0)\n","Requirement already satisfied: google-pasta>=0.1.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (0.2.0)\n","Requirement already satisfied: grpcio<2.0,>=1.24.3 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (1.54.0)\n","Requirement already satisfied: h5py>=2.9.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (3.8.0)\n","Requirement already satisfied: jax>=0.3.15 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (0.4.8)\n","Requirement already satisfied: keras<2.13,>=2.12.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (2.12.0)\n","Requirement already satisfied: libclang>=13.0.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (16.0.0)\n","Requirement already satisfied: numpy<1.24,>=1.22 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (1.22.4)\n","Requirement already satisfied: opt-einsum>=2.3.2 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (3.3.0)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from tensorflow) (23.1)\n","Requirement already satisfied: protobuf!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<5.0.0dev,>=3.20.3 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (3.20.3)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from tensorflow) (67.7.2)\n","Requirement already satisfied: six>=1.12.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (1.16.0)\n","Requirement already satisfied: tensorboard<2.13,>=2.12 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (2.12.2)\n","Requirement already satisfied: tensorflow-estimator<2.13,>=2.12.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (2.12.0)\n","Requirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (2.3.0)\n","Requirement already satisfied: typing-extensions>=3.6.6 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (4.5.0)\n","Requirement already satisfied: wrapt<1.15,>=1.11.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (1.14.1)\n","Requirement already satisfied: tensorflow-io-gcs-filesystem>=0.23.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (0.32.0)\n","Requirement already satisfied: wheel<1.0,>=0.23.0 in /usr/local/lib/python3.10/dist-packages (from astunparse>=1.6.0->tensorflow) (0.40.0)\n","Requirement already satisfied: ml-dtypes>=0.0.3 in /usr/local/lib/python3.10/dist-packages (from jax>=0.3.15->tensorflow) (0.1.0)\n","Requirement already satisfied: scipy>=1.7 in /usr/local/lib/python3.10/dist-packages (from jax>=0.3.15->tensorflow) (1.10.1)\n","Requirement already satisfied: google-auth<3,>=1.6.3 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.13,>=2.12->tensorflow) (2.17.3)\n","Requirement already satisfied: google-auth-oauthlib<1.1,>=0.5 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.13,>=2.12->tensorflow) (1.0.0)\n","Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.13,>=2.12->tensorflow) (3.4.3)\n","Requirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.13,>=2.12->tensorflow) (2.27.1)\n","Requirement already satisfied: tensorboard-data-server<0.8.0,>=0.7.0 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.13,>=2.12->tensorflow) (0.7.0)\n","Requirement already satisfied: tensorboard-plugin-wit>=1.6.0 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.13,>=2.12->tensorflow) (1.8.1)\n","Requirement already satisfied: werkzeug>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.13,>=2.12->tensorflow) (2.3.0)\n","Requirement already satisfied: cachetools<6.0,>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.13,>=2.12->tensorflow) (5.3.0)\n","Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.10/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.13,>=2.12->tensorflow) (0.3.0)\n","Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.10/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.13,>=2.12->tensorflow) (4.9)\n","Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.10/dist-packages (from google-auth-oauthlib<1.1,>=0.5->tensorboard<2.13,>=2.12->tensorflow) (1.3.1)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.21.0->tensorboard<2.13,>=2.12->tensorflow) (1.26.15)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.21.0->tensorboard<2.13,>=2.12->tensorflow) (2022.12.7)\n","Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.21.0->tensorboard<2.13,>=2.12->tensorflow) (2.0.12)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.21.0->tensorboard<2.13,>=2.12->tensorflow) (3.4)\n","Requirement already satisfied: MarkupSafe>=2.1.1 in /usr/local/lib/python3.10/dist-packages (from werkzeug>=1.0.1->tensorboard<2.13,>=2.12->tensorflow) (2.1.2)\n","Requirement already satisfied: pyasn1<0.6.0,>=0.4.6 in /usr/local/lib/python3.10/dist-packages (from pyasn1-modules>=0.2.1->google-auth<3,>=1.6.3->tensorboard<2.13,>=2.12->tensorflow) (0.5.0)\n","Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.10/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<1.1,>=0.5->tensorboard<2.13,>=2.12->tensorflow) (3.2.2)\n"]}]},{"cell_type":"code","source":["import tensorflow as tf\n","from tensorflow.keras.layers import Dense\n","\n","model = tf.keras.Sequential([\n","    Dense(20, activation='softmax')\n","])"],"metadata":{"id":"5dDhPPnEiZKt","executionInfo":{"status":"ok","timestamp":1684549476038,"user_tz":-540,"elapsed":13805,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":64,"outputs":[]},{"cell_type":"code","source":["model.compile(loss='sparse_categorical_crossentropy', metrics=['accuracy'])\n","model.fit(x_train.A, y_train, epochs=10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YIUYCNTliczl","executionInfo":{"status":"ok","timestamp":1684549497978,"user_tz":-540,"elapsed":21946,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"97e281af-e641-4f7f-e3ac-506e5510c397"},"execution_count":65,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n","283/283 [==============================] - 5s 3ms/step - loss: 2.0789 - accuracy: 0.5389\n","Epoch 2/10\n","283/283 [==============================] - 1s 3ms/step - loss: 1.1094 - accuracy: 0.8168\n","Epoch 3/10\n","283/283 [==============================] - 1s 5ms/step - loss: 0.7858 - accuracy: 0.8603\n","Epoch 4/10\n","283/283 [==============================] - 2s 5ms/step - loss: 0.6364 - accuracy: 0.8839\n","Epoch 5/10\n","283/283 [==============================] - 1s 5ms/step - loss: 0.5411 - accuracy: 0.8977\n","Epoch 6/10\n","283/283 [==============================] - 1s 5ms/step - loss: 0.4766 - accuracy: 0.9060\n","Epoch 7/10\n","283/283 [==============================] - 1s 5ms/step - loss: 0.4263 - accuracy: 0.9150\n","Epoch 8/10\n","283/283 [==============================] - 2s 6ms/step - loss: 0.3920 - accuracy: 0.9211\n","Epoch 9/10\n","283/283 [==============================] - 2s 8ms/step - loss: 0.3591 - accuracy: 0.9264\n","Epoch 10/10\n","283/283 [==============================] - 2s 7ms/step - loss: 0.3324 - accuracy: 0.9308\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7f00f81561d0>"]},"metadata":{},"execution_count":65}]},{"cell_type":"code","source":["model.evaluate(x_test.A, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xSwXOzB5ig7u","executionInfo":{"status":"ok","timestamp":1684549498709,"user_tz":-540,"elapsed":751,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"bfcb35b8-34a1-45af-c2c3-8ffd62fdb5a2"},"execution_count":66,"outputs":[{"output_type":"stream","name":"stdout","text":["71/71 [==============================] - 1s 5ms/step - loss: 0.7108 - accuracy: 0.8148\n"]},{"output_type":"execute_result","data":{"text/plain":["[0.7108373641967773, 0.8148475289344788]"]},"metadata":{},"execution_count":66}]},{"cell_type":"markdown","source":["#정칙화"],"metadata":{"id":"nJmA6Le297Q8"}},{"cell_type":"markdown","source":["L1 및 L2 정칙화"],"metadata":{"id":"BM1L_okh-A0z"}},{"cell_type":"code","source":["import tensorflow as tf\n","from tensorflow.keras.layers import *"],"metadata":{"id":"vsacucSI-GFh","executionInfo":{"status":"ok","timestamp":1684549498710,"user_tz":-540,"elapsed":8,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":67,"outputs":[]},{"cell_type":"markdown","source":["모델 정의 - L1 - L2 - L1L2"],"metadata":{"id":"ZrZQD9BI-VLh"}},{"cell_type":"code","source":["model = tf.keras.Sequential([\n","    Dense(20, activation='softmax',\n","          kernel_regularizer=tf.keras.regularizers.L1(0.001))\n","])"],"metadata":{"id":"po4j4p10-QDo","executionInfo":{"status":"ok","timestamp":1684549498712,"user_tz":-540,"elapsed":9,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":68,"outputs":[]},{"cell_type":"markdown","source":["훈련"],"metadata":{"id":"bQE7o-W5-XzU"}},{"cell_type":"code","source":["model.compile(loss='sparse_categorical_crossentropy', metrics=['accuracy'])\n","model.fit(x_train.A, y_train, epochs=10)"],"metadata":{"id":"5IMng2fa-ah4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1684549520456,"user_tz":-540,"elapsed":21752,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"1b10d320-04b2-47f5-96d8-c1d453c4a5f2"},"execution_count":69,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n","283/283 [==============================] - 3s 6ms/step - loss: 2.8473 - accuracy: 0.5293\n","Epoch 2/10\n","283/283 [==============================] - 1s 5ms/step - loss: 2.2020 - accuracy: 0.7322\n","Epoch 3/10\n","283/283 [==============================] - 2s 5ms/step - loss: 2.0026 - accuracy: 0.7537\n","Epoch 4/10\n","283/283 [==============================] - 2s 6ms/step - loss: 1.8957 - accuracy: 0.7539\n","Epoch 5/10\n","283/283 [==============================] - 2s 7ms/step - loss: 1.8256 - accuracy: 0.7569\n","Epoch 6/10\n","283/283 [==============================] - 2s 7ms/step - loss: 1.7757 - accuracy: 0.7542\n","Epoch 7/10\n","283/283 [==============================] - 2s 6ms/step - loss: 1.7370 - accuracy: 0.7547\n","Epoch 8/10\n","283/283 [==============================] - 2s 5ms/step - loss: 1.7095 - accuracy: 0.7526\n","Epoch 9/10\n","283/283 [==============================] - 2s 6ms/step - loss: 1.6852 - accuracy: 0.7537\n","Epoch 10/10\n","283/283 [==============================] - 1s 5ms/step - loss: 1.6649 - accuracy: 0.7551\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7f0163ff4bb0>"]},"metadata":{},"execution_count":69}]},{"cell_type":"markdown","source":["평가"],"metadata":{"id":"EkSv305C-bn6"}},{"cell_type":"code","source":["model.evaluate(x_test.A, y_test)"],"metadata":{"id":"DlZ7tx9y-e5I","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1684549521015,"user_tz":-540,"elapsed":565,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"4c3fc5c3-a4f0-4ade-df1e-f9dddb6e4fdd"},"execution_count":70,"outputs":[{"output_type":"stream","name":"stdout","text":["71/71 [==============================] - 0s 3ms/step - loss: 1.7408 - accuracy: 0.7251\n"]},{"output_type":"execute_result","data":{"text/plain":["[1.7408496141433716, 0.7251436114311218]"]},"metadata":{},"execution_count":70}]},{"cell_type":"markdown","source":["얼리 스톱핑"],"metadata":{"id":"guWMdj_l-gW3"}},{"cell_type":"code","source":["model = tf.keras.Sequential([\n","    Dense(20, activation='softmax')\n","])\n","\n","model.compile(loss='sparse_categorical_crossentropy', metrics=['accuracy'])\n","model.fit(x_train.A, y_train, epochs=100, validation_split=0.1,\n","          callbacks=[\n","              tf.keras.callbacks.EarlyStopping()\n","          ])"],"metadata":{"id":"9bE6_1Ls-in_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1684549537551,"user_tz":-540,"elapsed":16542,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"d2bd4b2b-6930-4d3e-f598-1ac7cdbac51a"},"execution_count":71,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","255/255 [==============================] - 2s 6ms/step - loss: 2.1098 - accuracy: 0.5229 - val_loss: 1.5352 - val_accuracy: 0.7230\n","Epoch 2/100\n","255/255 [==============================] - 1s 5ms/step - loss: 1.1604 - accuracy: 0.8153 - val_loss: 1.1026 - val_accuracy: 0.7980\n","Epoch 3/100\n","255/255 [==============================] - 2s 6ms/step - loss: 0.8241 - accuracy: 0.8634 - val_loss: 0.9159 - val_accuracy: 0.8102\n","Epoch 4/100\n","255/255 [==============================] - 1s 4ms/step - loss: 0.6578 - accuracy: 0.8850 - val_loss: 0.8235 - val_accuracy: 0.8146\n","Epoch 5/100\n","255/255 [==============================] - 1s 3ms/step - loss: 0.5572 - accuracy: 0.8981 - val_loss: 0.7712 - val_accuracy: 0.8212\n","Epoch 6/100\n","255/255 [==============================] - 1s 3ms/step - loss: 0.4877 - accuracy: 0.9087 - val_loss: 0.7326 - val_accuracy: 0.8245\n","Epoch 7/100\n","255/255 [==============================] - 1s 3ms/step - loss: 0.4381 - accuracy: 0.9153 - val_loss: 0.7081 - val_accuracy: 0.8234\n","Epoch 8/100\n","255/255 [==============================] - 1s 3ms/step - loss: 0.3930 - accuracy: 0.9234 - val_loss: 0.6905 - val_accuracy: 0.8201\n","Epoch 9/100\n","255/255 [==============================] - 1s 4ms/step - loss: 0.3600 - accuracy: 0.9285 - val_loss: 0.6777 - val_accuracy: 0.8223\n","Epoch 10/100\n","255/255 [==============================] - 1s 3ms/step - loss: 0.3336 - accuracy: 0.9328 - val_loss: 0.6703 - val_accuracy: 0.8234\n","Epoch 11/100\n","255/255 [==============================] - 1s 3ms/step - loss: 0.3102 - accuracy: 0.9371 - val_loss: 0.6699 - val_accuracy: 0.8212\n","Epoch 12/100\n","255/255 [==============================] - 1s 3ms/step - loss: 0.2893 - accuracy: 0.9405 - val_loss: 0.6590 - val_accuracy: 0.8223\n","Epoch 13/100\n","255/255 [==============================] - 1s 3ms/step - loss: 0.2703 - accuracy: 0.9429 - val_loss: 0.6557 - val_accuracy: 0.8223\n","Epoch 14/100\n","255/255 [==============================] - 1s 3ms/step - loss: 0.2574 - accuracy: 0.9461 - val_loss: 0.6535 - val_accuracy: 0.8179\n","Epoch 15/100\n","255/255 [==============================] - 1s 4ms/step - loss: 0.2436 - accuracy: 0.9482 - val_loss: 0.6538 - val_accuracy: 0.8179\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7f00a034e8c0>"]},"metadata":{},"execution_count":71}]},{"cell_type":"markdown","source":["자동 저장"],"metadata":{"id":"u0auWpu0-jJd"}},{"cell_type":"code","source":["model.fit(\n","    x_train.A, y_train, epochs=10, validation_split=0.1,\n","    callbacks=[tf.keras.callbacks.ModelCheckpoint(\n","        'checkpoints',           # checkpoints 폴더에\n","        monitor=\"val_accuracy\",  # 정확도 기준\n","        save_best_only=True,     # 이전보다 좋은 결과만 저장\n","        save_weights_only=True,  # 파라미터만 저장\n",")])"],"metadata":{"id":"1ngAE_Lr-lc6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1684549552477,"user_tz":-540,"elapsed":14931,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"a913485a-023b-4cd2-a00f-4e06380a0486"},"execution_count":72,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n","255/255 [==============================] - 1s 3ms/step - loss: 0.2309 - accuracy: 0.9510 - val_loss: 0.6538 - val_accuracy: 0.8179\n","Epoch 2/10\n","255/255 [==============================] - 1s 3ms/step - loss: 0.2215 - accuracy: 0.9522 - val_loss: 0.6565 - val_accuracy: 0.8135\n","Epoch 3/10\n","255/255 [==============================] - 1s 3ms/step - loss: 0.2095 - accuracy: 0.9548 - val_loss: 0.6561 - val_accuracy: 0.8135\n","Epoch 4/10\n","255/255 [==============================] - 1s 3ms/step - loss: 0.2024 - accuracy: 0.9568 - val_loss: 0.6625 - val_accuracy: 0.8124\n","Epoch 5/10\n","255/255 [==============================] - 1s 3ms/step - loss: 0.1917 - accuracy: 0.9594 - val_loss: 0.6633 - val_accuracy: 0.8124\n","Epoch 6/10\n","255/255 [==============================] - 1s 3ms/step - loss: 0.1838 - accuracy: 0.9618 - val_loss: 0.6682 - val_accuracy: 0.8113\n","Epoch 7/10\n","255/255 [==============================] - 1s 3ms/step - loss: 0.1769 - accuracy: 0.9634 - val_loss: 0.6707 - val_accuracy: 0.8146\n","Epoch 8/10\n","255/255 [==============================] - 1s 4ms/step - loss: 0.1689 - accuracy: 0.9653 - val_loss: 0.6730 - val_accuracy: 0.8091\n","Epoch 9/10\n","255/255 [==============================] - 1s 5ms/step - loss: 0.1636 - accuracy: 0.9667 - val_loss: 0.6748 - val_accuracy: 0.8102\n","Epoch 10/10\n","255/255 [==============================] - 1s 5ms/step - loss: 0.1554 - accuracy: 0.9676 - val_loss: 0.6811 - val_accuracy: 0.8102\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7f00a0282800>"]},"metadata":{},"execution_count":72}]},{"cell_type":"markdown","source":["불러오기"],"metadata":{"id":"6-4DEUdo-mTg"}},{"cell_type":"code","source":["model.load_weights('checkpoints')"],"metadata":{"id":"bKHERgKi-ofZ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1684549552477,"user_tz":-540,"elapsed":24,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"559d32f6-7484-4665-a80d-79e574f03981"},"execution_count":73,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tensorflow.python.checkpoint.checkpoint.CheckpointLoadStatus at 0x7f00a020ce20>"]},"metadata":{},"execution_count":73}]},{"cell_type":"markdown","source":["dropout"],"metadata":{"id":"uxrHfpFF-pRN"}},{"cell_type":"code","source":["model = tf.keras.Sequential([\n","    Dense(128, activation='relu'),\n","    Dropout(0.5),\n","    Dense(20, activation='softmax')\n","])"],"metadata":{"id":"zlm1ESs4-sTj","executionInfo":{"status":"ok","timestamp":1684549552478,"user_tz":-540,"elapsed":21,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":74,"outputs":[]},{"cell_type":"markdown","source":["활성화 함수 이전에 Dropout 넣기"],"metadata":{"id":"qSgvvham-r9F"}},{"cell_type":"code","source":["model = tf.keras.Sequential([\n","    Dense(128),\n","    Dropout(0.5),\n","    ReLU(),\n","    Dense(20, activation='softmax')\n","])"],"metadata":{"id":"3aCq5xeS-xC0","executionInfo":{"status":"ok","timestamp":1684549552478,"user_tz":-540,"elapsed":20,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":75,"outputs":[]},{"cell_type":"markdown","source":["Batch Normalization"],"metadata":{"id":"e_Pz-Av--0NV"}},{"cell_type":"code","source":["model = tf.keras.Sequential([\n","    Dense(128, activation='relu'),\n","    tf.keras.layers.BatchNormalization(),\n","    Dense(20, activation='softmax')\n","])"],"metadata":{"id":"5J0HO2Xi-2yT","executionInfo":{"status":"ok","timestamp":1684549552478,"user_tz":-540,"elapsed":20,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":76,"outputs":[]},{"cell_type":"markdown","source":["Layer Normalization"],"metadata":{"id":"wq3UODl_-4Rc"}},{"cell_type":"code","source":["model = tf.keras.Sequential([\n","    Dense(128, activation='relu'),\n","    LayerNormalization(),\n","    Dense(20, activation='softmax')\n","])"],"metadata":{"id":"EH-a0LSZ-6Xe","executionInfo":{"status":"ok","timestamp":1684549552478,"user_tz":-540,"elapsed":19,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":77,"outputs":[]},{"cell_type":"markdown","source":["Label Smoothing"],"metadata":{"id":"fS01_OFu-763"}},{"cell_type":"code","source":["y_train_one_hot = tf.one_hot(y_train, 20)\n","y_train_one_hot"],"metadata":{"id":"brI1NO4S_AVr","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1684549552479,"user_tz":-540,"elapsed":20,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"d141ebc8-fbaf-4ad3-db87-f0f0d6fecbdd"},"execution_count":78,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(9051, 20), dtype=float32, numpy=\n","array([[0., 0., 0., ..., 0., 0., 0.],\n","       [0., 0., 0., ..., 0., 0., 0.],\n","       [0., 0., 0., ..., 0., 0., 0.],\n","       ...,\n","       [1., 0., 0., ..., 0., 0., 0.],\n","       [0., 0., 0., ..., 1., 0., 0.],\n","       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32)>"]},"metadata":{},"execution_count":78}]},{"cell_type":"markdown","source":["손실함수"],"metadata":{"id":"-WxnWkdh_Bco"}},{"cell_type":"code","source":["loss_fn = tf.keras.losses.CategoricalCrossentropy(label_smoothing=0.2)"],"metadata":{"id":"qZNBmS7K_D2k","executionInfo":{"status":"ok","timestamp":1684549552479,"user_tz":-540,"elapsed":17,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":79,"outputs":[]},{"cell_type":"markdown","source":["훈련"],"metadata":{"id":"NYDQRdyF_Ezr"}},{"cell_type":"code","source":["model = tf.keras.Sequential([\n","    Dense(20, activation='softmax')\n","])\n","model.compile(loss=loss_fn, metrics=['accuracy'])\n","model.fit(x_train.A, y_train_one_hot)"],"metadata":{"id":"kiFra9xR_Haf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1684549554762,"user_tz":-540,"elapsed":2300,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"f76f8729-7a93-4ce3-9b69-9ddab5ce9764"},"execution_count":80,"outputs":[{"output_type":"stream","name":"stdout","text":["283/283 [==============================] - 1s 3ms/step - loss: 2.4412 - accuracy: 0.5241\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7f00a011d120>"]},"metadata":{},"execution_count":80}]},{"cell_type":"markdown","source":["평가"],"metadata":{"id":"9Rs88oHJ-QvM"}},{"cell_type":"code","source":["model.evaluate(x_test.A, tf.one_hot(y_test, 20))"],"metadata":{"id":"iiH1u2y7_Khz","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1684549554763,"user_tz":-540,"elapsed":8,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"cc4032c1-8a24-40d1-eaba-40541ed5d613"},"execution_count":81,"outputs":[{"output_type":"stream","name":"stdout","text":["71/71 [==============================] - 0s 3ms/step - loss: 2.1242 - accuracy: 0.7145\n"]},{"output_type":"execute_result","data":{"text/plain":["[2.1242005825042725, 0.7145382165908813]"]},"metadata":{},"execution_count":81}]},{"cell_type":"markdown","source":["#RNN"],"metadata":{"id":"18ECXxt-mH3R"}},{"cell_type":"code","source":["import pandas as pd\n","df = pd.read_excel('/content/drive/Othercomputers/내 노트북/study/06_TextAnalytics/data/yelp.xlsx')"],"metadata":{"id":"P2DF9C0LmR9y","executionInfo":{"status":"ok","timestamp":1684549579283,"user_tz":-540,"elapsed":1136,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":83,"outputs":[]},{"cell_type":"code","source":["import tensorflow as tf\n","NUM_WORDS = 1000\n","tokenizer = tf.keras.preprocessing.text.Tokenizer(num_words=NUM_WORDS)"],"metadata":{"id":"Ra65ieV1mTqA","executionInfo":{"status":"ok","timestamp":1684549579284,"user_tz":-540,"elapsed":6,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":84,"outputs":[]},{"cell_type":"code","source":["tokenizer.fit_on_texts(df['review'])"],"metadata":{"id":"SN26QMQ0mXmS","executionInfo":{"status":"ok","timestamp":1684549579285,"user_tz":-540,"elapsed":6,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":85,"outputs":[]},{"cell_type":"code","source":["tokenizer.index_word"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-TU3lWdhmVNY","executionInfo":{"status":"ok","timestamp":1684549580492,"user_tz":-540,"elapsed":10,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"0dcd4276-3378-45bc-8115-68845043d75d"},"execution_count":86,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{1: 'the',\n"," 2: 'and',\n"," 3: 'i',\n"," 4: 'was',\n"," 5: 'a',\n"," 6: 'to',\n"," 7: 'is',\n"," 8: 'this',\n"," 9: 'it',\n"," 10: 'of',\n"," 11: 'food',\n"," 12: 'not',\n"," 13: 'for',\n"," 14: 'in',\n"," 15: 'place',\n"," 16: 'good',\n"," 17: 'service',\n"," 18: 'we',\n"," 19: 'very',\n"," 20: 'my',\n"," 21: 'with',\n"," 22: 'great',\n"," 23: 'had',\n"," 24: 'that',\n"," 25: 'be',\n"," 26: 'so',\n"," 27: 'were',\n"," 28: 'are',\n"," 29: 'but',\n"," 30: 'have',\n"," 31: 'back',\n"," 32: 'you',\n"," 33: 'here',\n"," 34: 'they',\n"," 35: 'on',\n"," 36: 'at',\n"," 37: 'like',\n"," 38: 'go',\n"," 39: 'all',\n"," 40: 'time',\n"," 41: 'our',\n"," 42: 'will',\n"," 43: 'there',\n"," 44: 'as',\n"," 45: 'really',\n"," 46: 'just',\n"," 47: 'an',\n"," 48: 'their',\n"," 49: 'if',\n"," 50: 'best',\n"," 51: 'would',\n"," 52: 'ever',\n"," 53: 'also',\n"," 54: 'friendly',\n"," 55: 'up',\n"," 56: 'only',\n"," 57: 'never',\n"," 58: 'one',\n"," 59: 'no',\n"," 60: 'your',\n"," 61: 'restaurant',\n"," 62: 'out',\n"," 63: 'nice',\n"," 64: \"don't\",\n"," 65: 'been',\n"," 66: 'what',\n"," 67: 'amazing',\n"," 68: 'again',\n"," 69: 'from',\n"," 70: 'delicious',\n"," 71: 'vegas',\n"," 72: 'did',\n"," 73: 'by',\n"," 74: 'which',\n"," 75: 'pretty',\n"," 76: 'some',\n"," 77: 'me',\n"," 78: 'came',\n"," 79: 'when',\n"," 80: \"i've\",\n"," 81: 'experience',\n"," 82: \"i'm\",\n"," 83: 'staff',\n"," 84: 'get',\n"," 85: 'eat',\n"," 86: 'us',\n"," 87: 'minutes',\n"," 88: 'definitely',\n"," 89: 'love',\n"," 90: 'even',\n"," 91: 'or',\n"," 92: 'disappointed',\n"," 93: \"won't\",\n"," 94: 'he',\n"," 95: \"it's\",\n"," 96: 'bad',\n"," 97: 'much',\n"," 98: 'got',\n"," 99: 'going',\n"," 100: 'made',\n"," 101: 'chicken',\n"," 102: 'first',\n"," 103: 'more',\n"," 104: 'about',\n"," 105: 'could',\n"," 106: 'say',\n"," 107: 'think',\n"," 108: 'better',\n"," 109: 'menu',\n"," 110: 'too',\n"," 111: 'salad',\n"," 112: 'has',\n"," 113: 'worst',\n"," 114: 'stars',\n"," 115: 'always',\n"," 116: 'way',\n"," 117: 'than',\n"," 118: 'well',\n"," 119: 'how',\n"," 120: 'can',\n"," 121: 'pizza',\n"," 122: 'fresh',\n"," 123: 'being',\n"," 124: 'because',\n"," 125: 'quality',\n"," 126: 'ordered',\n"," 127: 'wait',\n"," 128: 'other',\n"," 129: 'steak',\n"," 130: 'them',\n"," 131: 'want',\n"," 132: \"didn't\",\n"," 133: 'taste',\n"," 134: 'server',\n"," 135: 'went',\n"," 136: 'times',\n"," 137: 'sushi',\n"," 138: \"wasn't\",\n"," 139: 'flavor',\n"," 140: 'now',\n"," 141: 'burger',\n"," 142: 'do',\n"," 143: 'enough',\n"," 144: 'any',\n"," 145: 'after',\n"," 146: 'over',\n"," 147: 'everything',\n"," 148: 'fantastic',\n"," 149: 'night',\n"," 150: 'awesome',\n"," 151: 'tasty',\n"," 152: 'still',\n"," 153: 'slow',\n"," 154: 'feel',\n"," 155: 'down',\n"," 156: 'buffet',\n"," 157: 'bland',\n"," 158: 'meal',\n"," 159: 'next',\n"," 160: 'atmosphere',\n"," 161: 'know',\n"," 162: 'come',\n"," 163: 'order',\n"," 164: 'recommend',\n"," 165: 'loved',\n"," 166: 'selection',\n"," 167: 'prices',\n"," 168: 'little',\n"," 169: 'worth',\n"," 170: 'sauce',\n"," 171: 'lunch',\n"," 172: 'coming',\n"," 173: 'breakfast',\n"," 174: 'another',\n"," 175: 'excellent',\n"," 176: 'waited',\n"," 177: 'probably',\n"," 178: 'terrible',\n"," 179: 'perfect',\n"," 180: 'off',\n"," 181: 'fries',\n"," 182: 'right',\n"," 183: 'every',\n"," 184: 'table',\n"," 185: 'people',\n"," 186: 'sandwich',\n"," 187: 'before',\n"," 188: 'give',\n"," 189: '2',\n"," 190: \"can't\",\n"," 191: 'meat',\n"," 192: 'dishes',\n"," 193: 'many',\n"," 194: 'clean',\n"," 195: 'day',\n"," 196: 'she',\n"," 197: 'hot',\n"," 198: 'soon',\n"," 199: 'cold',\n"," 200: 'then',\n"," 201: 'getting',\n"," 202: 'sure',\n"," 203: 'waitress',\n"," 204: 'took',\n"," 205: 'around',\n"," 206: 'beer',\n"," 207: 'overall',\n"," 208: 'thing',\n"," 209: 'absolutely',\n"," 210: '5',\n"," 211: 'dish',\n"," 212: 'quite',\n"," 213: 'eating',\n"," 214: 'both',\n"," 215: 'try',\n"," 216: 'dining',\n"," 217: 'spicy',\n"," 218: 'bit',\n"," 219: 'who',\n"," 220: 'said',\n"," 221: 'spot',\n"," 222: 'rude',\n"," 223: 'since',\n"," 224: 'impressed',\n"," 225: 'while',\n"," 226: 'take',\n"," 227: 'felt',\n"," 228: 'make',\n"," 229: 'few',\n"," 230: 'two',\n"," 231: 'happy',\n"," 232: 'tasted',\n"," 233: 'overpriced',\n"," 234: 'tried',\n"," 235: 'warm',\n"," 236: 'deal',\n"," 237: 'found',\n"," 238: 'lot',\n"," 239: 'waiter',\n"," 240: 'attentive',\n"," 241: 'cooked',\n"," 242: 'side',\n"," 243: 'inside',\n"," 244: 'wonderful',\n"," 245: 'nothing',\n"," 246: 'town',\n"," 247: 'price',\n"," 248: 'check',\n"," 249: \"i'll\",\n"," 250: 'ambiance',\n"," 251: 'seriously',\n"," 252: 'must',\n"," 253: 'area',\n"," 254: 'once',\n"," 255: 'chips',\n"," 256: 'special',\n"," 257: 'far',\n"," 258: '1',\n"," 259: 'family',\n"," 260: 'bar',\n"," 261: 'super',\n"," 262: 'am',\n"," 263: 'pho',\n"," 264: 'tell',\n"," 265: 'hour',\n"," 266: 'poor',\n"," 267: 'shrimp',\n"," 268: 'tender',\n"," 269: 'hard',\n"," 270: 'left',\n"," 271: 'his',\n"," 272: 'horrible',\n"," 273: 'each',\n"," 274: 'enjoy',\n"," 275: 'should',\n"," 276: 'customer',\n"," 277: 'potato',\n"," 278: 'where',\n"," 279: 'served',\n"," 280: 'mediocre',\n"," 281: 'management',\n"," 282: 'done',\n"," 283: 'last',\n"," 284: 'her',\n"," 285: 'small',\n"," 286: 'see',\n"," 287: 'either',\n"," 288: 'money',\n"," 289: 'twice',\n"," 290: 'authentic',\n"," 291: 'dinner',\n"," 292: 'during',\n"," 293: 'may',\n"," 294: 'kept',\n"," 295: 'asked',\n"," 296: 'tables',\n"," 297: 'quick',\n"," 298: 'portions',\n"," 299: 'these',\n"," 300: 'sick',\n"," 301: 'dessert',\n"," 302: 'beef',\n"," 303: 'outside',\n"," 304: 'talk',\n"," 305: 'huge',\n"," 306: 'servers',\n"," 307: 'seafood',\n"," 308: 'pasta',\n"," 309: 'tasteless',\n"," 310: '10',\n"," 311: 'fish',\n"," 312: '30',\n"," 313: 'sweet',\n"," 314: 'old',\n"," 315: 'disappointing',\n"," 316: 'real',\n"," 317: 'thai',\n"," 318: 'eaten',\n"," 319: 'places',\n"," 320: 'thought',\n"," 321: 'away',\n"," 322: 'hit',\n"," 323: 'waste',\n"," 324: 'return',\n"," 325: 'extremely',\n"," 326: '3',\n"," 327: 'seated',\n"," 328: \"i'd\",\n"," 329: 'avoid',\n"," 330: 'full',\n"," 331: 'bacon',\n"," 332: 'zero',\n"," 333: 'sat',\n"," 334: 'ice',\n"," 335: 'bread',\n"," 336: 'home',\n"," 337: 'things',\n"," 338: 'waiting',\n"," 339: 'fast',\n"," 340: 'wrong',\n"," 341: 'fried',\n"," 342: 'expect',\n"," 343: 'reasonable',\n"," 344: 'enjoyed',\n"," 345: 'anytime',\n"," 346: 'new',\n"," 347: 'bring',\n"," 348: 'long',\n"," 349: 'barely',\n"," 350: 'damn',\n"," 351: 'highly',\n"," 352: 'tacos',\n"," 353: '4',\n"," 354: 'running',\n"," 355: 'salmon',\n"," 356: 'look',\n"," 357: 'elsewhere',\n"," 358: 'visit',\n"," 359: 'establishment',\n"," 360: 'rare',\n"," 361: 'husband',\n"," 362: 'heart',\n"," 363: 'least',\n"," 364: 'drinks',\n"," 365: 'rice',\n"," 366: 'today',\n"," 367: 'ask',\n"," 368: 'everyone',\n"," 369: 'yummy',\n"," 370: \"we'll\",\n"," 371: 'helpful',\n"," 372: 'beat',\n"," 373: 'wine',\n"," 374: 'trip',\n"," 375: 'kind',\n"," 376: 'steaks',\n"," 377: 'leave',\n"," 378: 'pork',\n"," 379: 'burgers',\n"," 380: 'cream',\n"," 381: 'fact',\n"," 382: 'drink',\n"," 383: 'itself',\n"," 384: 'considering',\n"," 385: 'thumbs',\n"," 386: 'pay',\n"," 387: 'bay',\n"," 388: 'piece',\n"," 389: 'unfortunately',\n"," 390: 'phoenix',\n"," 391: 'sad',\n"," 392: '20',\n"," 393: 'something',\n"," 394: 'incredible',\n"," 395: 'sucked',\n"," 396: 'wings',\n"," 397: 'live',\n"," 398: 'drive',\n"," 399: 'though',\n"," 400: 'business',\n"," 401: 'someone',\n"," 402: 'folks',\n"," 403: 'fun',\n"," 404: 'chef',\n"," 405: 'possible',\n"," 406: 'close',\n"," 407: 'job',\n"," 408: 'tea',\n"," 409: 'why',\n"," 410: 'location',\n"," 411: 'gave',\n"," 412: 'high',\n"," 413: 'house',\n"," 414: 'friends',\n"," 415: 'dirty',\n"," 416: 'vegetables',\n"," 417: 'large',\n"," 418: 'soup',\n"," 419: 'options',\n"," 420: 'disappointment',\n"," 421: 'needs',\n"," 422: 'owners',\n"," 423: '40',\n"," 424: 'manager',\n"," 425: 'thin',\n"," 426: 'dry',\n"," 427: 'average',\n"," 428: 'wow',\n"," 429: 'texture',\n"," 430: 'nasty',\n"," 431: 'recommendation',\n"," 432: 'potatoes',\n"," 433: 'under',\n"," 434: 'care',\n"," 435: 'recommended',\n"," 436: 'beautiful',\n"," 437: 'brought',\n"," 438: 'wall',\n"," 439: 'totally',\n"," 440: 'sashimi',\n"," 441: 'yourself',\n"," 442: 'sucks',\n"," 443: 'moist',\n"," 444: 'sides',\n"," 445: 'frozen',\n"," 446: 'greek',\n"," 447: 'dressing',\n"," 448: 'pita',\n"," 449: 'hummus',\n"," 450: 'duck',\n"," 451: 'flat',\n"," 452: 'amount',\n"," 453: 'perfectly',\n"," 454: 'water',\n"," 455: 'second',\n"," 456: 'salt',\n"," 457: 'chewy',\n"," 458: 'expected',\n"," 459: 'guess',\n"," 460: 'walked',\n"," 461: 'rolls',\n"," 462: 'oh',\n"," 463: 'party',\n"," 464: 'mouth',\n"," 465: \"you're\",\n"," 466: 'tip',\n"," 467: 'arrived',\n"," 468: 'quickly',\n"," 469: 'cafe',\n"," 470: 'wife',\n"," 471: 'ambience',\n"," 472: 'music',\n"," 473: 'honest',\n"," 474: 'busy',\n"," 475: 'although',\n"," 476: 'liked',\n"," 477: 'fine',\n"," 478: \"wouldn't\",\n"," 479: 'strip',\n"," 480: 'delish',\n"," 481: 'melt',\n"," 482: 'cheese',\n"," 483: 'subway',\n"," 484: 'restaurants',\n"," 485: 'empty',\n"," 486: 'checked',\n"," 487: 'ate',\n"," 488: 'watched',\n"," 489: 'stale',\n"," 490: 'different',\n"," 491: 'several',\n"," 492: 'years',\n"," 493: 'ago',\n"," 494: 'immediately',\n"," 495: 'priced',\n"," 496: 'hands',\n"," 497: 'treated',\n"," 498: 'literally',\n"," 499: 'used',\n"," 500: 'vegetarian',\n"," 501: 'reviews',\n"," 502: 'healthy',\n"," 503: 'lacking',\n"," 504: 'interesting',\n"," 505: 'decor',\n"," 506: 'butter',\n"," 507: 'egg',\n"," 508: 'dog',\n"," 509: 'insulted',\n"," 510: 'hope',\n"," 511: 'brunch',\n"," 512: 'white',\n"," 513: 'soggy',\n"," 514: 'unless',\n"," 515: 'lobster',\n"," 516: 'course',\n"," 517: 'none',\n"," 518: 'stop',\n"," 519: \"isn't\",\n"," 520: 'couple',\n"," 521: 'yet',\n"," 522: \"couldn't\",\n"," 523: 'point',\n"," 524: 'flavorful',\n"," 525: 'par',\n"," 526: 'received',\n"," 527: 'generous',\n"," 528: '8',\n"," 529: 'patio',\n"," 530: 'outstanding',\n"," 531: \"friend's\",\n"," 532: 'pizzas',\n"," 533: 'pulled',\n"," 534: 'star',\n"," 535: 'please',\n"," 536: 'review',\n"," 537: 'stay',\n"," 538: 'favorite',\n"," 539: 'especially',\n"," 540: 'pleasant',\n"," 541: 'pleased',\n"," 542: 'equally',\n"," 543: 'bathroom',\n"," 544: 'door',\n"," 545: 'cool',\n"," 546: 'else',\n"," 547: 'find',\n"," 548: 'deserves',\n"," 549: 'stomach',\n"," 550: 'green',\n"," 551: 'beans',\n"," 552: 'told',\n"," 553: 'total',\n"," 554: 'regular',\n"," 555: 'until',\n"," 556: 'big',\n"," 557: '35',\n"," 558: 'rather',\n"," 559: 'bill',\n"," 560: 'worse',\n"," 561: 'meals',\n"," 562: 'homemade',\n"," 563: 'such',\n"," 564: 'gone',\n"," 565: 'those',\n"," 566: 'need',\n"," 567: 'desserts',\n"," 568: 'boyfriend',\n"," 569: 'room',\n"," 570: 'maybe',\n"," 571: 'believe',\n"," 572: 'setting',\n"," 573: 'wanted',\n"," 574: 'ok',\n"," 575: 'half',\n"," 576: 'list',\n"," 577: 'vibe',\n"," 578: 'him',\n"," 579: 'edible',\n"," 580: 'seating',\n"," 581: 'owner',\n"," 582: 'style',\n"," 583: 'salsa',\n"," 584: 'awful',\n"," 585: 'lacked',\n"," 586: 'crust',\n"," 587: 'stopped',\n"," 588: 'late',\n"," 589: 'touch',\n"," 590: 'cashier',\n"," 591: 'ended',\n"," 592: 'mmmm',\n"," 593: 'human',\n"," 594: 'hair',\n"," 595: 'let',\n"," 596: 'cute',\n"," 597: 'red',\n"," 598: 'stuff',\n"," 599: 'mexican',\n"," 600: 'overwhelmed',\n"," 601: 'decent',\n"," 602: 'seems',\n"," 603: 'bite',\n"," 604: 'familiar',\n"," 605: 'favor',\n"," 606: 'inexpensive',\n"," 607: 'delight',\n"," 608: 'into',\n"," 609: 'judge',\n"," 610: 'grossed',\n"," 611: 'note',\n"," 612: 'behind',\n"," 613: 'char',\n"," 614: 'realized',\n"," 615: 'attitudes',\n"," 616: 'towards',\n"," 617: 'customers',\n"," 618: 'portion',\n"," 619: 'attack',\n"," 620: 'grill',\n"," 621: 'downtown',\n"," 622: 'excuse',\n"," 623: 'scallop',\n"," 624: 'ripped',\n"," 625: 'refill',\n"," 626: 'appetizers',\n"," 627: 'glad',\n"," 628: 'heard',\n"," 629: 'batter',\n"," 630: 'finish',\n"," 631: 'above',\n"," 632: 'beyond',\n"," 633: 'meh',\n"," 634: 'min',\n"," 635: 'known',\n"," 636: 'suck',\n"," 637: 'use',\n"," 638: 'value',\n"," 639: 'seasoned',\n"," 640: 'wasting',\n"," 641: 'opportunity',\n"," 642: 'company',\n"," 643: 'underwhelming',\n"," 644: 'person',\n"," 645: 'break',\n"," 646: 'grease',\n"," 647: 'others',\n"," 648: 'roast',\n"," 649: 'sugary',\n"," 650: 'six',\n"," 651: 'year',\n"," 652: 'die',\n"," 653: 'bye',\n"," 654: 'lady',\n"," 655: 'serves',\n"," 656: 'roasted',\n"," 657: 'garlic',\n"," 658: 'marrow',\n"," 659: 'added',\n"," 660: 'extra',\n"," 661: 'cannot',\n"," 662: 'bartender',\n"," 663: 'playing',\n"," 664: 'lovers',\n"," 665: 'passed',\n"," 666: 'between',\n"," 667: 'gross',\n"," 668: 'preparing',\n"," 669: 'indian',\n"," 670: 'boot',\n"," 671: \"you'd\",\n"," 672: 'word',\n"," 673: 'belly',\n"," 674: 'crispy',\n"," 675: 'wrap',\n"," 676: 'tuna',\n"," 677: 'bagels',\n"," 678: 'selections',\n"," 679: 'bars',\n"," 680: 'dine',\n"," 681: 'rarely',\n"," 682: 'curry',\n"," 683: 'top',\n"," 684: 'bathrooms',\n"," 685: 'decorated',\n"," 686: 'pace',\n"," 687: 'greeted',\n"," 688: 'joint',\n"," 689: 'cut',\n"," 690: 'bakery',\n"," 691: 'reasonably',\n"," 692: 'looking',\n"," 693: 'ladies',\n"," 694: 'hip',\n"," 695: 'overcooked',\n"," 696: 'charcoal',\n"," 697: 'decided',\n"," 698: 'looked',\n"," 699: 'dirt',\n"," 700: 'station',\n"," 701: 'watch',\n"," 702: 'gyros',\n"," 703: 'feeling',\n"," 704: 'valley',\n"," 705: 'bowl',\n"," 706: 'disrespected',\n"," 707: 'stepped',\n"," 708: 'gold',\n"," 709: 'puree',\n"," 710: 'bug',\n"," 711: 'given',\n"," 712: \"we're\",\n"," 713: 'friend',\n"," 714: 'shower',\n"," 715: 'mind',\n"," 716: 'bisque',\n"," 717: 'filet',\n"," 718: 'needed',\n"," 719: 'pepper',\n"," 720: 'cook',\n"," 721: 'dealing',\n"," 722: 'double',\n"," 723: 'cheeseburger',\n"," 724: 'single',\n"," 725: 'yum',\n"," 726: 'mayo',\n"," 727: 'honestly',\n"," 728: 'stayed',\n"," 729: 'almost',\n"," 730: 'building',\n"," 731: 'dark',\n"," 732: 'set',\n"," 733: 'sub',\n"," 734: 'creamy',\n"," 735: 'similar',\n"," 736: 'complaints',\n"," 737: '7',\n"," 738: 'sticks',\n"," 739: 'tap',\n"," 740: 'plus',\n"," 741: 'bucks',\n"," 742: 'coffee',\n"," 743: 'world',\n"," 744: 'cant',\n"," 745: 'boba',\n"," 746: 'taco',\n"," 747: 'bachi',\n"," 748: 'salads',\n"," 749: '100',\n"," 750: 'hate',\n"," 751: 'hours',\n"," 752: 'later',\n"," 753: 'neighborhood',\n"," 754: 'convenient',\n"," 755: 'soooo',\n"," 756: 'third',\n"," 757: 'stir',\n"," 758: '12',\n"," 759: 'summer',\n"," 760: 'delightful',\n"," 761: 'toasted',\n"," 762: 'boy',\n"," 763: 'hand',\n"," 764: 'basically',\n"," 765: 'joke',\n"," 766: 'fare',\n"," 767: 'pricing',\n"," 768: 'without',\n"," 769: 'doubt',\n"," 770: 'black',\n"," 771: 'serve',\n"," 772: 'seen',\n"," 773: 'mom',\n"," 774: 'bites',\n"," 775: 'omg',\n"," 776: 'feels',\n"," 777: 'brick',\n"," 778: 'oven',\n"," 779: 'multiple',\n"," 780: 'ten',\n"," 781: 'finally',\n"," 782: 'pancakes',\n"," 783: 'eggs',\n"," 784: 'treat',\n"," 785: 'evening',\n"," 786: 'life',\n"," 787: 'lukewarm',\n"," 788: 'comfortable',\n"," 789: 'eggplant',\n"," 790: 'fry',\n"," 791: 'part',\n"," 792: 'happened',\n"," 793: 'car',\n"," 794: 'front',\n"," 795: 'anyone',\n"," 796: 'stuffed',\n"," 797: 'mall',\n"," 798: 'kids',\n"," 799: 'lots',\n"," 800: 'perfection',\n"," 801: 'impeccable',\n"," 802: 'simply',\n"," 803: 'pop',\n"," 804: 'assure',\n"," 805: 'trying',\n"," 806: 'completely',\n"," 807: 'become',\n"," 808: 'professional',\n"," 809: 'end',\n"," 810: \"we've\",\n"," 811: 'mistake',\n"," 812: 'nicest',\n"," 813: 'biscuits',\n"," 814: 'cow',\n"," 815: 'anyway',\n"," 816: 'week',\n"," 817: 'combination',\n"," 818: 'driest',\n"," 819: 'tots',\n"," 820: 'paid',\n"," 821: 'acknowledged',\n"," 822: 'margaritas',\n"," 823: 'disappoint',\n"," 824: 'flower',\n"," 825: 'group',\n"," 826: 'crab',\n"," 827: 'legs',\n"," 828: 'sliced',\n"," 829: 'dont',\n"," 830: 'bunch',\n"," 831: 'filling',\n"," 832: 'lovely',\n"," 833: 'whole',\n"," 834: 'choose',\n"," 835: 'entrees',\n"," 836: 'actually',\n"," 837: 'recent',\n"," 838: 'however',\n"," 839: 'tapas',\n"," 840: 'vinegrette',\n"," 841: 'baby',\n"," 842: 'disgusting',\n"," 843: 'helped',\n"," 844: 'recently',\n"," 845: 'fan',\n"," 846: 'rated',\n"," 847: 'cheap',\n"," 848: 'presentation',\n"," 849: 'color',\n"," 850: 'sitting',\n"," 851: 'fairly',\n"," 852: 'satisfying',\n"," 853: 'its',\n"," 854: 'grilled',\n"," 855: 'means',\n"," 856: 'non',\n"," 857: 'focused',\n"," 858: 'guy',\n"," 859: 'same',\n"," 860: 'promise',\n"," 861: 'italian',\n"," 862: 'legit',\n"," 863: 'staying',\n"," 864: 'work',\n"," 865: 'fail',\n"," 866: 'plate',\n"," 867: 'needless',\n"," 868: 'serving',\n"," 869: 'longer',\n"," 870: 'orders',\n"," 871: 'simple',\n"," 872: 'fly',\n"," 873: 'chinese',\n"," 874: 'paper',\n"," 875: 'anything',\n"," 876: 'complain',\n"," 877: 'crowd',\n"," 878: 'mid',\n"," 879: 'definately',\n"," 880: 'low',\n"," 881: 'bother',\n"," 882: 'offers',\n"," 883: 'flavorless',\n"," 884: 'nachos',\n"," 885: 'does',\n"," 886: 'crazy',\n"," 887: 'tribute',\n"," 888: 'fell',\n"," 889: 'services',\n"," 890: 'heat',\n"," 891: 'started',\n"," 892: \"aren't\",\n"," 893: 'three',\n"," 894: 'spend',\n"," 895: 'lost',\n"," 896: 'undercooked',\n"," 897: 'seemed',\n"," 898: 'bank',\n"," 899: 'holiday',\n"," 900: 'rick',\n"," 901: 'steve',\n"," 902: 'angry',\n"," 903: 'honeslty',\n"," 904: 'rubber',\n"," 905: 'ahead',\n"," 906: 'warmer',\n"," 907: 'prompt',\n"," 908: 'wayyy',\n"," 909: 'cape',\n"," 910: 'cod',\n"," 911: 'ravoli',\n"," 912: 'cranberry',\n"," 913: 'disgusted',\n"," 914: 'shocked',\n"," 915: 'signs',\n"," 916: 'indicate',\n"," 917: 'cash',\n"," 918: 'alone',\n"," 919: 'burrittos',\n"," 920: 'blah',\n"," 921: 'less',\n"," 922: 'interior',\n"," 923: 'performed',\n"," 924: \"that's\",\n"," 925: 'velvet',\n"," 926: 'cake',\n"," 927: 'ohhh',\n"," 928: 'hole',\n"," 929: 'street',\n"," 930: 'luke',\n"," 931: 'sever',\n"," 932: 'combos',\n"," 933: '23',\n"," 934: 'final',\n"," 935: 'blow',\n"," 936: 'accident',\n"," 937: 'happier',\n"," 938: 'grab',\n"," 939: 'pub',\n"," 940: 'redeeming',\n"," 941: 'ample',\n"," 942: 'stupid',\n"," 943: 'hiro',\n"," 944: 'drag',\n"," 945: 'whether',\n"," 946: 'melted',\n"," 947: 'styrofoam',\n"," 948: 'fear',\n"," 949: 'positive',\n"," 950: 'provided',\n"," 951: 'pucks',\n"," 952: 'disgust',\n"," 953: 'register',\n"," 954: 'prime',\n"," 955: 'rib',\n"," 956: 'section',\n"," 957: 'generic',\n"," 958: 'firehouse',\n"," 959: 'refreshing',\n"," 960: 'pink',\n"," 961: 'sunglasses',\n"," 962: 'chow',\n"," 963: 'mein',\n"," 964: 'imaginative',\n"," 965: 'lined',\n"," 966: 'strings',\n"," 967: 'bottom',\n"," 968: 'power',\n"," 969: 'banana',\n"," 970: 'petrified',\n"," 971: 'struggle',\n"," 972: 'wave',\n"," 973: 'receives',\n"," 974: 'cocktails',\n"," 975: 'handmade',\n"," 976: \"we'd\",\n"," 977: 'military',\n"," 978: 'discount',\n"," 979: 'dos',\n"," 980: 'gringos',\n"," 981: 'update',\n"," 982: 'apparently',\n"," 983: 'included',\n"," 984: 'tastings',\n"," 985: 'jeff',\n"," 986: 'milkshake',\n"," 987: 'chocolate',\n"," 988: 'milk',\n"," 989: 'excalibur',\n"," 990: 'common',\n"," 991: 'sense',\n"," 992: 'appalling',\n"," 993: 'cheated',\n"," 994: 'experiencing',\n"," 995: 'relationship',\n"," 996: 'parties',\n"," 997: 'smelled',\n"," 998: 'trap',\n"," 999: 'turkey',\n"," 1000: 'pan',\n"," ...}"]},"metadata":{},"execution_count":86}]},{"cell_type":"code","source":["seq = tokenizer.texts_to_sequences(df['review'])"],"metadata":{"id":"u-1KzuEmmZcu","executionInfo":{"status":"ok","timestamp":1684549581683,"user_tz":-540,"elapsed":4,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":87,"outputs":[]},{"cell_type":"code","source":["seq[0] #wow love this place"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bFGAj20Wmd0L","executionInfo":{"status":"ok","timestamp":1684549581683,"user_tz":-540,"elapsed":3,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"d1c7f2ca-d554-4a20-adb5-97a0ddfcffcd"},"execution_count":88,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[428, 165, 8, 15]"]},"metadata":{},"execution_count":88}]},{"cell_type":"code","source":["pad_seq = tf.keras.preprocessing.sequence.pad_sequences(seq, padding='post') #뒤에다 0채워서 길이 맞춤"],"metadata":{"id":"CQKaCTqhmf_v","executionInfo":{"status":"ok","timestamp":1684549585648,"user_tz":-540,"elapsed":2,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":89,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","x_train, x_test, y_train, y_test = train_test_split(\n","    pad_seq, df['sentiment'], test_size=0.2, random_state=0)"],"metadata":{"id":"n05ACFBTmh4q","executionInfo":{"status":"ok","timestamp":1684549585648,"user_tz":-540,"elapsed":2,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":90,"outputs":[]},{"cell_type":"code","source":["from tensorflow.keras.layers import Embedding, LSTM, Dense\n","model = tf.keras.Sequential([\n","    Embedding(NUM_WORDS, 32),\n","    LSTM(32),\n","    Dense(1, activation='sigmoid')\n","])"],"metadata":{"id":"etIfkAyvmjyW","executionInfo":{"status":"ok","timestamp":1684549586808,"user_tz":-540,"elapsed":650,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":91,"outputs":[]},{"cell_type":"code","source":["model.compile(loss='binary_crossentropy',\n","              optimizer='adam', \n","              metrics=['accuracy'])\n","model.fit(x_train, y_train, epochs=10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SbxlKHbGmkZU","executionInfo":{"status":"ok","timestamp":1684549629764,"user_tz":-540,"elapsed":42959,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"2d06a8f1-ff44-4759-f858-e5a90eaaa19a"},"execution_count":92,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n","25/25 [==============================] - 8s 192ms/step - loss: 0.6964 - accuracy: 0.5038\n","Epoch 2/10\n","25/25 [==============================] - 5s 181ms/step - loss: 0.6927 - accuracy: 0.5163\n","Epoch 3/10\n","25/25 [==============================] - 4s 133ms/step - loss: 0.6914 - accuracy: 0.5200\n","Epoch 4/10\n","25/25 [==============================] - 2s 78ms/step - loss: 0.5555 - accuracy: 0.7775\n","Epoch 5/10\n","25/25 [==============================] - 1s 33ms/step - loss: 0.3524 - accuracy: 0.8712\n","Epoch 6/10\n","25/25 [==============================] - 2s 70ms/step - loss: 0.2235 - accuracy: 0.9325\n","Epoch 7/10\n","25/25 [==============================] - 1s 38ms/step - loss: 0.1787 - accuracy: 0.9488\n","Epoch 8/10\n","25/25 [==============================] - 1s 55ms/step - loss: 0.1625 - accuracy: 0.9463\n","Epoch 9/10\n","25/25 [==============================] - 0s 9ms/step - loss: 0.1201 - accuracy: 0.9688\n","Epoch 10/10\n","25/25 [==============================] - 1s 21ms/step - loss: 0.0956 - accuracy: 0.9737\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7f00a04267a0>"]},"metadata":{},"execution_count":92}]},{"cell_type":"code","source":["model.evaluate(x_test, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"raYdfC5TmmT6","executionInfo":{"status":"ok","timestamp":1684549630453,"user_tz":-540,"elapsed":704,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"bc4c467d-ce9d-49f6-bcff-e060e22886c4"},"execution_count":93,"outputs":[{"output_type":"stream","name":"stdout","text":["7/7 [==============================] - 0s 8ms/step - loss: 0.5380 - accuracy: 0.8200\n"]},{"output_type":"execute_result","data":{"text/plain":["[0.5380123257637024, 0.8199999928474426]"]},"metadata":{},"execution_count":93}]},{"cell_type":"markdown","source":["#디코더"],"metadata":{"id":"C9hVETV27JBy"}},{"cell_type":"code","source":["!pip install transformers"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BpdfIQCk7KJq","executionInfo":{"status":"ok","timestamp":1684549641690,"user_tz":-540,"elapsed":11249,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"40cbe49d-eee9-49fa-83a1-5f3671193105"},"execution_count":94,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting transformers\n","  Downloading transformers-4.29.2-py3-none-any.whl (7.1 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m7.1/7.1 MB\u001b[0m \u001b[31m74.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from transformers) (3.12.0)\n","Collecting huggingface-hub<1.0,>=0.14.1 (from transformers)\n","  Downloading huggingface_hub-0.14.1-py3-none-any.whl (224 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m224.5/224.5 kB\u001b[0m \u001b[31m22.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.10/dist-packages (from transformers) (1.22.4)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from transformers) (23.1)\n","Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.10/dist-packages (from transformers) (6.0)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.10/dist-packages (from transformers) (2022.10.31)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from transformers) (2.27.1)\n","Collecting tokenizers!=0.11.3,<0.14,>=0.11.1 (from transformers)\n","  Downloading tokenizers-0.13.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (7.8 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m7.8/7.8 MB\u001b[0m \u001b[31m76.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: tqdm>=4.27 in /usr/local/lib/python3.10/dist-packages (from transformers) (4.65.0)\n","Requirement already satisfied: fsspec in /usr/local/lib/python3.10/dist-packages (from huggingface-hub<1.0,>=0.14.1->transformers) (2023.4.0)\n","Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub<1.0,>=0.14.1->transformers) (4.5.0)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (1.26.15)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (2022.12.7)\n","Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (2.0.12)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (3.4)\n","Installing collected packages: tokenizers, huggingface-hub, transformers\n","Successfully installed huggingface-hub-0.14.1 tokenizers-0.13.3 transformers-4.29.2\n"]}]},{"cell_type":"code","source":["from transformers import pipeline\n","import torch\n","device = torch.device('cuda:0')\n","kogpt = pipeline('text-generation', model='skt/kogpt2-base-v2',\n","device=device)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":168,"referenced_widgets":["fa428127008a4f1b9c3c63ea0880beb7","4ff3e2f36ca54e03abd886744c687df6","efc60c5970fe44a996a89104c4589f3b","c31f07eea5534611af734717e8bb7ab8","6ac8c23cba4b4c189d65d14e0016443e","18a8ee6562c448448f440768ad279541","1cbf14cc224c4f439250165c6262519f","a087edfbb70e450a8bc26436d1d448c4","becc85231a4b4572b6ea97590c29f673","e71dcf67dcdb4b6ea58ecd4efe51347a","8a58769dbbd94d30a4a67245c5a94923","628ba8152bc34521a722edab736210be","f1e1bc5031884b209d030abe6d61b00b","7ddd66f0cdfe474da2ec80fc28967f7a","5a801715ce4a40498bbd153b14b058b3","e675f10c3d954001ababe5ee7ec1e5ca","5aee8bce03b84187afd60f543ad518a0","2b8b5236d4e747fe8d7f0590b71a50c8","4772f29178f44dff95a3404093ac31c2","0ba94e84dd584805993352c8181bd4cb","a4b736f4c6294f9981ce7c62afbc9988","0b1b097106af4b58a37037b950c960e8","69f346d17f974f8d9cc80725dc6fb19e","4372615c84a54eb5ab65d7091992d069","be025b89794545659aa50a273fa1d22d","12abab473df94b63b012d4ddc936da8c","8b99a7fa736e4767aded23f78f187ea2","86aa0fa6459a4b6bbf4dc021b5e991bc","eb7e6808c58849bc9389d3561dcc6cd2","132cc5fa9941475ca11d0867a81fe9c6","4da00f19e3c94f5dabe8f8c22568394c","97a651df852547efb46f4ac27e9bdcef","664139bdde164ccc869254829d65956b"]},"id":"zOtTQuWI7c4C","executionInfo":{"status":"ok","timestamp":1684549654767,"user_tz":-540,"elapsed":13088,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"aefb3961-ae0b-4ea2-d6b7-b38637ab89cf"},"execution_count":95,"outputs":[{"output_type":"display_data","data":{"text/plain":["Downloading (…)lve/main/config.json:   0%|          | 0.00/1.00k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"fa428127008a4f1b9c3c63ea0880beb7"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading pytorch_model.bin:   0%|          | 0.00/513M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"628ba8152bc34521a722edab736210be"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading (…)/main/tokenizer.json:   0%|          | 0.00/2.83M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"69f346d17f974f8d9cc80725dc6fb19e"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.\n","Xformers is not installed correctly. If you want to use memorry_efficient_attention to accelerate training use the following command to install Xformers\n","pip install xformers.\n"]}]},{"cell_type":"code","source":["prompt = '인공지능 발전으로 반도체 수요가 증가하고 있다.'"],"metadata":{"id":"VV0BYUJy8oUZ","executionInfo":{"status":"ok","timestamp":1684549654768,"user_tz":-540,"elapsed":5,"user":{"displayName":"hwi","userId":"07964455913579077797"}}},"execution_count":96,"outputs":[]},{"cell_type":"code","source":["kogpt(prompt)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pJ8M8KVR8oNZ","executionInfo":{"status":"ok","timestamp":1684549657303,"user_tz":-540,"elapsed":2539,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"f3f04512-df00-4cbb-bfb1-deadc4a3bc8e"},"execution_count":97,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/transformers/generation/utils.py:1346: UserWarning: Using `max_length`'s default (50) to control the generation length. This behaviour is deprecated and will be removed from the config in v5 of Transformers -- we recommend using `max_new_tokens` to control the maximum length of the generation.\n","  warnings.warn(\n"]},{"output_type":"execute_result","data":{"text/plain":["[{'generated_text': '인공지능 발전으로 반도체 수요가 증가하고 있다. 반도체 가격이 안정되면서 경쟁업체들이 경쟁적으로 투자를 확대하는 가운데, 메모리 반도체의 업황 전망은 불투명하나 삼성SDI는 올 4분기부터 D램 수요가 회복될 경우 올해 영업이익의 전'}]"]},"metadata":{},"execution_count":97}]},{"cell_type":"code","source":["kogpt(\n","prompt,\n","max_length=200)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4mauxvAS80cW","executionInfo":{"status":"ok","timestamp":1684549659285,"user_tz":-540,"elapsed":1986,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"a6bfbd63-e27f-4fc4-c031-7045df636cc0"},"execution_count":98,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[{'generated_text': \"인공지능 발전으로 반도체 수요가 증가하고 있다. 가전·정보보호, AI, IoT(사물인터넷), 인공지능(AI), VR(가상현실), 클라우드 등 다양한 분야의 4차 산업혁명 기술이 급속히 증가할 전망”이라고 말했다. 삼성전자가 휴대폰용 블루투스 핸즈프리 무선헤드셋 ‘카루'(Caro)를 출시한다.\\n삼성전자는 “지난 달 20일 미국에서 열린 이동통신 전시회 ‘2015 모토로라 전시회(Mobile Telephone Show)’를 통해 카루를 출시했다”고 5일 밝혔다.\\n카루는 삼성전자가 세계에서 최초로 세계 최초 개발에 성공한 LTE 무선헤드셋 제품이다.\\n블루투스폰 특유의 부드러운 저압, 음성·색상 조절 등 3박자를 갖췄으며, 특히 기존 제품에 비해 10배 이상 빠른 5.4Mbps 속도를 자랑한다.\\n또한 블루투스 헤드셋은 기존 통신기술을 바탕으로 모바일 기기를 통해 이동 중에도 편리하게 사용할 수 있는 장점을 갖췄다고 회사는 설명했다.\\n갤럭\"}]"]},"metadata":{},"execution_count":98}]},{"cell_type":"markdown","source":["###탐욕탐색"],"metadata":{"id":"vkJXPAZk-uqG"}},{"cell_type":"code","source":["kogpt(\n","prompt,\n","do_sample=False,\n","max_length=200)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3Ki9p7qS-yI2","executionInfo":{"status":"ok","timestamp":1684549671692,"user_tz":-540,"elapsed":5026,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"804c4a17-d998-4ba6-8d53-34cfff26d427"},"execution_count":99,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[{'generated_text': '인공지능 발전으로 반도체 수요가 증가하고 있다. 지난해 국내 기업들의 해외 직접투자가 사상 최대치를 기록했다.\\n해외 직접투자는 지난해 사상 최대인 6조5000억원을 기록했다.\\n하지만 국내 기업의 해외 직접투자는 지난해 사상 최대인 6조5000억원에 그쳤다.\\n해외 직접투자는 지난해 사상 최대인 6조5000억원을 기록했다.\\n해외 직접투자는 지난해 사상 최대인 6조5000억원을 기록했다.\\n해외 직접투자는 지난해 사상 최대인 6조5000억원을 기록했다.\\n해외 직접투자는 지난해 사상 최대인 6조5000억원을 기록했다.\\n해외 직접투자는 지난해 사상 최대인 6조5000억원을 기록했다.\\n해외 직접투자는 지난해 사상 최대인 6조5000억원을 기록했다.\\n해외 직접투자는 지난해 사상 최대인 6조5000억원을 기록했다.\\n해외 직접투자는 지난해 사상 최대인 6조5000억원을 기록했다.\\n해외 직접투자는 지난해 사상 최대인 6조5000억원을 기록했다.\\n해'}]"]},"metadata":{},"execution_count":99}]},{"cell_type":"markdown","source":["반복 억제"],"metadata":{"id":"0JZalits-88x"}},{"cell_type":"code","source":["kogpt(\n","prompt,\n","do_sample=False,\n","max_length=200,\n","no_repeat_ngram_size=2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pSoZM98Q-_cC","executionInfo":{"status":"ok","timestamp":1684549714390,"user_tz":-540,"elapsed":4962,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"189bf176-8873-43d2-da1d-ed2e97c8327b"},"execution_count":102,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[{'generated_text': '인공지능 발전으로 반도체 수요가 증가하고 있다. 지난해 국내 기업들의 해외 직접투자가 사상 최대치를 기록했다.\\n해외 직접투자는 지난 2008년 글로벌 금융위기 이후 최대 규모다.\\n한국무역협회 국제무역연구원은 지난달 31일 발표한 ‘2011년 해외직접투자 동향’ 보고서에서 지난 한해 해외 투자액은 전년 대비 5.8% 증가한 4조9000억달러로 집계됐다고 밝혔다.\\n이는 지난 2009년 이후 가장 큰 규모로, 지난 2010년 이후 최고치다.\\n해당 기간 해외 투자는 전년에 비해 4.7% 늘어난 4조2000억원이었다.\\n해외에 진출한 국내 기업의 해외 현지법인 수는 전년(3억5000만달러)보다 4.3% 감소한 3억2000달러를 기록했다.\\n국내 기업의 현지법인은 전년(2억3000만주)보다 5.3%가 감소했다.\\n해외의 현지 법인은 지난 2011년 이후 처음으로 감소세를 보였다.\\n해외로 진출한 기업의 국내 현지 법인 수는 지난 2012년 이후 감소세가 지속되고 있다.\\n지난해 해외 직접투자는 전년의 4억1000만호주에서'}]"]},"metadata":{},"execution_count":102}]},{"cell_type":"markdown","source":["특정 표현 억제"],"metadata":{"id":"o8-xNr3W_Z7p"}},{"cell_type":"code","source":["from transformers import AutoTokenizer\n","tokenizer = AutoTokenizer.from_pretrained(\"skt/kogpt2-base-v2\")\n","bad_tokens = [[b] for b in tokenizer.encode('직접투자')]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZRYUFfsl_HAs","executionInfo":{"status":"ok","timestamp":1684549781779,"user_tz":-540,"elapsed":1939,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"6a853cb5-1735-44a7-af4b-47fe40da9fec"},"execution_count":103,"outputs":[{"output_type":"stream","name":"stderr","text":["Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.\n"]}]},{"cell_type":"code","source":["kogpt(\n","prompt,\n","do_sample=False,\n","max_length=200,\n","no_repeat_ngram_size=5,\n","bad_words_ids\n","=bad_tokens\n",")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iXH7ojAg_fdb","executionInfo":{"status":"ok","timestamp":1684549814457,"user_tz":-540,"elapsed":3493,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"cce16c33-722a-4a24-c839-140ad5e1c7fa"},"execution_count":105,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[{'generated_text': '인공지능 발전으로 반도체 수요가 증가하고 있다. 지난해 국내 기업들의 해외직접투자가 사상 최대치를 기록했다.\\n해외직접투자(FDI)는 지난해 사상 최대치를 기록했다.\\n하지만 국내 기업의 해외직접투자는 지난해 사상 최대치인 6조7000억원을 기록했다.\\n한국무역협회 국제무역연구원은 지난해 국내 기업의 해외직간접투자가 전년 대비 5.8% 증가한 6조7000억원이라고 밝혔다.\\n이는 지난해 국내 기업의 해외투자 증가율인 5.7%보다 높은 수치다.\\n지난해 국내 기업의 해외투자는 전년 대비 5.7% 증가한 6조8000억원을 기록했다.\\n지난해 국내 기업들의 해외투자 증가율은 전년 대비 4.7%포인트 증가한 6조700억원을 기록했다.\\n지속적인 경기 회복으로 해외직접투자가 증가한 것으로 풀이된다.\\n지난해 국내기업의 해외직접투자는 전년 대비 4.8% 증가한 4조7000억원으로 집계됐다.\\n지난해 국내기업들의 해외직접투자는 사상 최대치인 5'}]"]},"metadata":{},"execution_count":105}]},{"cell_type":"markdown","source":["##빔 탐색"],"metadata":{"id":"09_riF7kASOO"}},{"cell_type":"code","source":["kogpt(\n","prompt,\n","max_length=200,\n","num_beams=5,\n","no_repeat_ngram_size=5,\n",")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zpE25xumAXPB","executionInfo":{"status":"ok","timestamp":1684550035333,"user_tz":-540,"elapsed":7442,"user":{"displayName":"hwi","userId":"07964455913579077797"}},"outputId":"6d905654-c366-4ae3-ca1f-90499f51f70f"},"execution_count":106,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[{'generated_text': '인공지능 발전으로 반도체 수요가 증가하고 있다. 고부가가치 제품인 D램과 낸드플래시 등 메모리반도체 수요도 꾸준히 증가하고 있다\"고 설명했다.\\n삼성전자는 올해 메모리반도체 매출이 전년 대비 30% 이상 증가할 것으로 내다봤다.\\n낸드플래시 매출은 전년 대비 20% 이상 늘어날 것으로 예상했다.\\n낸드플래시의 경우 낸드플래시의 평균판매단가(ASP)가 전년 대비 10% 이상 상승할 것으로 예상했다.\\n김 연구원은 \"낸드플래시는 고부가 제품인 D램의 수요 증가가 예상된다\"며 \"올해 낸드플래시는 전년 대비 40% 이상 성장할 것\"이라고 내다봤다.\\n김 연구원은 \"올해 삼성전자의 메모리반도체 영업이익은 전년 대비 50% 이상 증가할 것\"이라며 \"메모리반도체 부문 영업이익은 전년대비 20% 이상 증가할 것\"이라고 예상했다.\\n그는 \"삼성전자의 올해 1분기 영업이익은 전년 동기 대비 20% 이상'}]"]},"metadata":{},"execution_count":106}]}]}